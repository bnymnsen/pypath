Search.setIndex({"docnames": ["api/pypath", "api/pypath.core", "api/pypath.core.attrs", "api/pypath.core.attrs.AttributeHandler", "api/pypath.core.common", "api/pypath.core.common.filter_network_df", "api/pypath.data", "api/pypath.disclaimer", "api/pypath.info", "api/pypath.inputs", "api/pypath.inputs.cell", "api/pypath.inputs.cell.cell_supplementary", "api/pypath.inputs.common", "api/pypath.inputs.common.csv_sep_change", "api/pypath.inputs.common.glom_fields", "api/pypath.inputs.common.json_extract", "api/pypath.inputs.common.json_read", "api/pypath.inputs.common.read_table", "api/pypath.inputs.common.read_xls", "api/pypath.inputs.credentials", "api/pypath.inputs.credentials.credentials", "api/pypath.inputs.ebi", "api/pypath.inputs.ebi.ebi_rest", "api/pypath.inputs.embopress", "api/pypath.inputs.embopress.embopress_supplementary", "api/pypath.inputs.get_method", "api/pypath.inputs.main", "api/pypath.inputs.mitab", "api/pypath.inputs.mitab.mitab_field_list", "api/pypath.inputs.mitab.mitab_field_uniprot", "api/pypath.inputs.rdata", "api/pypath.inputs.science", "api/pypath.inputs.science.science_download", "api/pypath.internals", "api/pypath.internals.input_formats", "api/pypath.internals.input_formats.ArrayMapping", "api/pypath.internals.input_formats.BiomartMapping", "api/pypath.internals.input_formats.FileMapping", "api/pypath.internals.input_formats.MappingInput", "api/pypath.internals.input_formats.NetworkInput", "api/pypath.internals.input_formats.PickleMapping", "api/pypath.internals.input_formats.ProMapping", "api/pypath.internals.input_formats.ReadList", "api/pypath.internals.input_formats.UnichemMapping", "api/pypath.internals.input_formats.UniprotListMapping", "api/pypath.internals.input_formats.UniprotMapping", "api/pypath.internals.license", "api/pypath.internals.license.License", "api/pypath.internals.license.LicenseAttrib", "api/pypath.internals.license.LicenseFeature", "api/pypath.internals.license.LicensePurpose", "api/pypath.internals.license.LicenseSharing", "api/pypath.internals.maps", "api/pypath.legacy", "api/pypath.legacy.db_categories", "api/pypath.legacy.db_categories.get_categories", "api/pypath.legacy.db_categories.get_category", "api/pypath.log", "api/pypath.share", "api/pypath.share.cache", "api/pypath.share.cache.cache_item", "api/pypath.share.cache.get_cachedir", "api/pypath.share.common", "api/pypath.share.common.add_to_list", "api/pypath.share.common.add_to_set", "api/pypath.share.common.at_least_in", "api/pypath.share.common.clean_dict", "api/pypath.share.common.combine_attrs", "api/pypath.share.common.console", "api/pypath.share.common.decode", "api/pypath.share.common.del_empty", "api/pypath.share.common.df_memory_usage", "api/pypath.share.common.dict_collapse_keys", "api/pypath.share.common.dict_counts", "api/pypath.share.common.dict_diff", "api/pypath.share.common.dict_expand_keys", "api/pypath.share.common.dict_percent", "api/pypath.share.common.dict_set_path", "api/pypath.share.common.dict_set_percent", "api/pypath.share.common.dict_str", "api/pypath.share.common.dict_subtotals", "api/pypath.share.common.dict_sym_diff", "api/pypath.share.common.dict_union", "api/pypath.share.common.eq", "api/pypath.share.common.filtr", "api/pypath.share.common.first", "api/pypath.share.common.flat_list", "api/pypath.share.common.float_or_nan", "api/pypath.share.common.gen_session_id", "api/pypath.share.common.get", "api/pypath.share.common.get_args", "api/pypath.share.common.is_float", "api/pypath.share.common.is_int", "api/pypath.share.common.is_str", "api/pypath.share.common.jaccard_index", "api/pypath.share.common.join_dicts", "api/pypath.share.common.latex_table", "api/pypath.share.common.match", "api/pypath.share.common.maybe_in_dict", "api/pypath.share.common.md5", "api/pypath.share.common.merge_dicts", "api/pypath.share.common.n_shared_elements", "api/pypath.share.common.n_shared_foreach", "api/pypath.share.common.n_shared_total", "api/pypath.share.common.n_shared_unique_foreach", "api/pypath.share.common.n_unique_elements", "api/pypath.share.common.n_unique_foreach", "api/pypath.share.common.n_unique_total", "api/pypath.share.common.negate", "api/pypath.share.common.none_or_len", "api/pypath.share.common.paginate", "api/pypath.share.common.prefix", "api/pypath.share.common.print_table", "api/pypath.share.common.re_safe_groups", "api/pypath.share.common.remove_prefix", "api/pypath.share.common.rotate", "api/pypath.share.common.sets_to_sorted_lists", "api/pypath.share.common.sfirst", "api/pypath.share.common.shared_elements", "api/pypath.share.common.shared_foreach", "api/pypath.share.common.shared_total", "api/pypath.share.common.shared_unique", "api/pypath.share.common.shared_unique_foreach", "api/pypath.share.common.shared_unique_total", "api/pypath.share.common.silent", "api/pypath.share.common.simpson_index", "api/pypath.share.common.simpson_index_counts", "api/pypath.share.common.something", "api/pypath.share.common.sorensen_index", "api/pypath.share.common.suffix", "api/pypath.share.common.sum_dicts", "api/pypath.share.common.swap_dict", "api/pypath.share.common.swap_dict_simple", "api/pypath.share.common.swap_suffix", "api/pypath.share.common.table_add_row_numbers", "api/pypath.share.common.table_format", "api/pypath.share.common.table_textwrap", "api/pypath.share.common.to_list", "api/pypath.share.common.to_set", "api/pypath.share.common.try_bool", "api/pypath.share.common.try_float", "api/pypath.share.common.tsv_table", "api/pypath.share.common.uniq_list", "api/pypath.share.common.uniq_list1", "api/pypath.share.common.uniq_list2", "api/pypath.share.common.uniq_ord_list", "api/pypath.share.common.unique_elements", "api/pypath.share.common.unique_foreach", "api/pypath.share.common.unique_list", "api/pypath.share.common.unique_total", "api/pypath.share.common.upper0", "api/pypath.share.common.values", "api/pypath.share.common.wcl", "api/pypath.share.common.wrap_truncate", "api/pypath.share.constants", "api/pypath.share.curl", "api/pypath.share.curl.Curl", "api/pypath.share.curl.FileOpener", "api/pypath.share.curl.RemoteFile", "api/pypath.share.curl.cache_delete_off", "api/pypath.share.curl.cache_delete_on", "api/pypath.share.curl.cache_off", "api/pypath.share.curl.cache_on", "api/pypath.share.curl.cache_print_off", "api/pypath.share.curl.cache_print_on", "api/pypath.share.curl.debug_off", "api/pypath.share.curl.debug_on", "api/pypath.share.curl.dryrun_off", "api/pypath.share.curl.dryrun_on", "api/pypath.share.curl.is_url", "api/pypath.share.curl.preserve_off", "api/pypath.share.curl.preserve_on", "api/pypath.share.log", "api/pypath.share.log.Logger", "api/pypath.share.log.new_logger", "api/pypath.share.progress", "api/pypath.share.progress.Progress", "api/pypath.share.session", "api/pypath.share.session.Logger", "api/pypath.share.session.Session", "api/pypath.share.session.get_log", "api/pypath.share.session.get_session", "api/pypath.share.session.new_session", "api/pypath.share.settings", "api/pypath.share.settings.Settings", "api/pypath.share.settings.context", "api/pypath.share.settings.get", "api/pypath.share.settings.setup", "api/pypath.utils", "api/pypath.utils.proteomicsdb", "api/pypath.utils.proteomicsdb.ProteomicsDB", "api/pypath.utils.residues", "api/pypath.utils.residues.ResidueMapper", "api/pypath.visual", "api/pypath.visual.drawing", "api/pypath.visual.drawing.InterSet", "api/pypath.visual.drawing.Plot", "api/pypath.visual.igraph_drawing", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer", "api/pypath.visual.igraph_drawing.TextDrawer", "api/pypath.visual.igraph_drawing.edge", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "api/pypath.visual.igraph_drawing.vertex", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "contents", "index", "notebooks/manual", "reference", "releasehistory", "webservice"], "filenames": ["api/pypath.rst", "api/pypath.core.rst", "api/pypath.core.attrs.rst", "api/pypath.core.attrs.AttributeHandler.rst", "api/pypath.core.common.rst", "api/pypath.core.common.filter_network_df.rst", "api/pypath.data.rst", "api/pypath.disclaimer.rst", "api/pypath.info.rst", "api/pypath.inputs.rst", "api/pypath.inputs.cell.rst", "api/pypath.inputs.cell.cell_supplementary.rst", "api/pypath.inputs.common.rst", "api/pypath.inputs.common.csv_sep_change.rst", "api/pypath.inputs.common.glom_fields.rst", "api/pypath.inputs.common.json_extract.rst", "api/pypath.inputs.common.json_read.rst", "api/pypath.inputs.common.read_table.rst", "api/pypath.inputs.common.read_xls.rst", "api/pypath.inputs.credentials.rst", "api/pypath.inputs.credentials.credentials.rst", "api/pypath.inputs.ebi.rst", "api/pypath.inputs.ebi.ebi_rest.rst", "api/pypath.inputs.embopress.rst", "api/pypath.inputs.embopress.embopress_supplementary.rst", "api/pypath.inputs.get_method.rst", "api/pypath.inputs.main.rst", "api/pypath.inputs.mitab.rst", "api/pypath.inputs.mitab.mitab_field_list.rst", "api/pypath.inputs.mitab.mitab_field_uniprot.rst", "api/pypath.inputs.rdata.rst", "api/pypath.inputs.science.rst", "api/pypath.inputs.science.science_download.rst", "api/pypath.internals.rst", "api/pypath.internals.input_formats.rst", "api/pypath.internals.input_formats.ArrayMapping.rst", "api/pypath.internals.input_formats.BiomartMapping.rst", "api/pypath.internals.input_formats.FileMapping.rst", "api/pypath.internals.input_formats.MappingInput.rst", "api/pypath.internals.input_formats.NetworkInput.rst", "api/pypath.internals.input_formats.PickleMapping.rst", "api/pypath.internals.input_formats.ProMapping.rst", "api/pypath.internals.input_formats.ReadList.rst", "api/pypath.internals.input_formats.UnichemMapping.rst", "api/pypath.internals.input_formats.UniprotListMapping.rst", "api/pypath.internals.input_formats.UniprotMapping.rst", "api/pypath.internals.license.rst", "api/pypath.internals.license.License.rst", "api/pypath.internals.license.LicenseAttrib.rst", "api/pypath.internals.license.LicenseFeature.rst", "api/pypath.internals.license.LicensePurpose.rst", "api/pypath.internals.license.LicenseSharing.rst", "api/pypath.internals.maps.rst", "api/pypath.legacy.rst", "api/pypath.legacy.db_categories.rst", "api/pypath.legacy.db_categories.get_categories.rst", "api/pypath.legacy.db_categories.get_category.rst", "api/pypath.log.rst", "api/pypath.share.rst", "api/pypath.share.cache.rst", "api/pypath.share.cache.cache_item.rst", "api/pypath.share.cache.get_cachedir.rst", "api/pypath.share.common.rst", "api/pypath.share.common.add_to_list.rst", "api/pypath.share.common.add_to_set.rst", "api/pypath.share.common.at_least_in.rst", "api/pypath.share.common.clean_dict.rst", "api/pypath.share.common.combine_attrs.rst", "api/pypath.share.common.console.rst", "api/pypath.share.common.decode.rst", "api/pypath.share.common.del_empty.rst", "api/pypath.share.common.df_memory_usage.rst", "api/pypath.share.common.dict_collapse_keys.rst", "api/pypath.share.common.dict_counts.rst", "api/pypath.share.common.dict_diff.rst", "api/pypath.share.common.dict_expand_keys.rst", "api/pypath.share.common.dict_percent.rst", "api/pypath.share.common.dict_set_path.rst", "api/pypath.share.common.dict_set_percent.rst", "api/pypath.share.common.dict_str.rst", "api/pypath.share.common.dict_subtotals.rst", "api/pypath.share.common.dict_sym_diff.rst", "api/pypath.share.common.dict_union.rst", "api/pypath.share.common.eq.rst", "api/pypath.share.common.filtr.rst", "api/pypath.share.common.first.rst", "api/pypath.share.common.flat_list.rst", "api/pypath.share.common.float_or_nan.rst", "api/pypath.share.common.gen_session_id.rst", "api/pypath.share.common.get.rst", "api/pypath.share.common.get_args.rst", "api/pypath.share.common.is_float.rst", "api/pypath.share.common.is_int.rst", "api/pypath.share.common.is_str.rst", "api/pypath.share.common.jaccard_index.rst", "api/pypath.share.common.join_dicts.rst", "api/pypath.share.common.latex_table.rst", "api/pypath.share.common.match.rst", "api/pypath.share.common.maybe_in_dict.rst", "api/pypath.share.common.md5.rst", "api/pypath.share.common.merge_dicts.rst", "api/pypath.share.common.n_shared_elements.rst", "api/pypath.share.common.n_shared_foreach.rst", "api/pypath.share.common.n_shared_total.rst", "api/pypath.share.common.n_shared_unique_foreach.rst", "api/pypath.share.common.n_unique_elements.rst", "api/pypath.share.common.n_unique_foreach.rst", "api/pypath.share.common.n_unique_total.rst", "api/pypath.share.common.negate.rst", "api/pypath.share.common.none_or_len.rst", "api/pypath.share.common.paginate.rst", "api/pypath.share.common.prefix.rst", "api/pypath.share.common.print_table.rst", "api/pypath.share.common.re_safe_groups.rst", "api/pypath.share.common.remove_prefix.rst", "api/pypath.share.common.rotate.rst", "api/pypath.share.common.sets_to_sorted_lists.rst", "api/pypath.share.common.sfirst.rst", "api/pypath.share.common.shared_elements.rst", "api/pypath.share.common.shared_foreach.rst", "api/pypath.share.common.shared_total.rst", "api/pypath.share.common.shared_unique.rst", "api/pypath.share.common.shared_unique_foreach.rst", "api/pypath.share.common.shared_unique_total.rst", "api/pypath.share.common.silent.rst", "api/pypath.share.common.simpson_index.rst", "api/pypath.share.common.simpson_index_counts.rst", "api/pypath.share.common.something.rst", "api/pypath.share.common.sorensen_index.rst", "api/pypath.share.common.suffix.rst", "api/pypath.share.common.sum_dicts.rst", "api/pypath.share.common.swap_dict.rst", "api/pypath.share.common.swap_dict_simple.rst", "api/pypath.share.common.swap_suffix.rst", "api/pypath.share.common.table_add_row_numbers.rst", "api/pypath.share.common.table_format.rst", "api/pypath.share.common.table_textwrap.rst", "api/pypath.share.common.to_list.rst", "api/pypath.share.common.to_set.rst", "api/pypath.share.common.try_bool.rst", "api/pypath.share.common.try_float.rst", "api/pypath.share.common.tsv_table.rst", "api/pypath.share.common.uniq_list.rst", "api/pypath.share.common.uniq_list1.rst", "api/pypath.share.common.uniq_list2.rst", "api/pypath.share.common.uniq_ord_list.rst", "api/pypath.share.common.unique_elements.rst", "api/pypath.share.common.unique_foreach.rst", "api/pypath.share.common.unique_list.rst", "api/pypath.share.common.unique_total.rst", "api/pypath.share.common.upper0.rst", "api/pypath.share.common.values.rst", "api/pypath.share.common.wcl.rst", "api/pypath.share.common.wrap_truncate.rst", "api/pypath.share.constants.rst", "api/pypath.share.curl.rst", "api/pypath.share.curl.Curl.rst", "api/pypath.share.curl.FileOpener.rst", "api/pypath.share.curl.RemoteFile.rst", "api/pypath.share.curl.cache_delete_off.rst", "api/pypath.share.curl.cache_delete_on.rst", "api/pypath.share.curl.cache_off.rst", "api/pypath.share.curl.cache_on.rst", "api/pypath.share.curl.cache_print_off.rst", "api/pypath.share.curl.cache_print_on.rst", "api/pypath.share.curl.debug_off.rst", "api/pypath.share.curl.debug_on.rst", "api/pypath.share.curl.dryrun_off.rst", "api/pypath.share.curl.dryrun_on.rst", "api/pypath.share.curl.is_url.rst", "api/pypath.share.curl.preserve_off.rst", "api/pypath.share.curl.preserve_on.rst", "api/pypath.share.log.rst", "api/pypath.share.log.Logger.rst", "api/pypath.share.log.new_logger.rst", "api/pypath.share.progress.rst", "api/pypath.share.progress.Progress.rst", "api/pypath.share.session.rst", "api/pypath.share.session.Logger.rst", "api/pypath.share.session.Session.rst", "api/pypath.share.session.get_log.rst", "api/pypath.share.session.get_session.rst", "api/pypath.share.session.new_session.rst", "api/pypath.share.settings.rst", "api/pypath.share.settings.Settings.rst", "api/pypath.share.settings.context.rst", "api/pypath.share.settings.get.rst", "api/pypath.share.settings.setup.rst", "api/pypath.utils.rst", "api/pypath.utils.proteomicsdb.rst", "api/pypath.utils.proteomicsdb.ProteomicsDB.rst", "api/pypath.utils.residues.rst", "api/pypath.utils.residues.ResidueMapper.rst", "api/pypath.visual.rst", "api/pypath.visual.drawing.rst", "api/pypath.visual.drawing.InterSet.rst", "api/pypath.visual.drawing.Plot.rst", "api/pypath.visual.igraph_drawing.rst", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.rst", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.rst", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer.rst", "api/pypath.visual.igraph_drawing.TextDrawer.rst", "api/pypath.visual.igraph_drawing.edge.rst", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.rst", "contents.rst", "index.rst", "notebooks/manual.ipynb", "reference.rst", "releasehistory.rst", "webservice.rst"], "titles": ["pypath", "pypath.core", "pypath.core.attrs", "pypath.core.attrs.AttributeHandler", "pypath.core.common", "pypath.core.common.filter_network_df", "pypath.data", "pypath.disclaimer", "pypath.info", "pypath.inputs", "pypath.inputs.cell", "pypath.inputs.cell.cell_supplementary", "pypath.inputs.common", "pypath.inputs.common.csv_sep_change", "pypath.inputs.common.glom_fields", "pypath.inputs.common.json_extract", "pypath.inputs.common.json_read", "pypath.inputs.common.read_table", "pypath.inputs.common.read_xls", "pypath.inputs.credentials", "pypath.inputs.credentials.credentials", "pypath.inputs.ebi", "pypath.inputs.ebi.ebi_rest", "pypath.inputs.embopress", "pypath.inputs.embopress.embopress_supplementary", "pypath.inputs.get_method", "pypath.inputs.main", "pypath.inputs.mitab", "pypath.inputs.mitab.mitab_field_list", "pypath.inputs.mitab.mitab_field_uniprot", "pypath.inputs.rdata", "pypath.inputs.science", "pypath.inputs.science.science_download", "pypath.internals", "pypath.internals.input_formats", "pypath.internals.input_formats.ArrayMapping", "pypath.internals.input_formats.BiomartMapping", "pypath.internals.input_formats.FileMapping", "pypath.internals.input_formats.MappingInput", "pypath.internals.input_formats.NetworkInput", "pypath.internals.input_formats.PickleMapping", "pypath.internals.input_formats.ProMapping", "pypath.internals.input_formats.ReadList", "pypath.internals.input_formats.UnichemMapping", "pypath.internals.input_formats.UniprotListMapping", "pypath.internals.input_formats.UniprotMapping", "pypath.internals.license", "pypath.internals.license.License", "pypath.internals.license.LicenseAttrib", "pypath.internals.license.LicenseFeature", "pypath.internals.license.LicensePurpose", "pypath.internals.license.LicenseSharing", "pypath.internals.maps", "pypath.legacy", "pypath.legacy.db_categories", "pypath.legacy.db_categories.get_categories", "pypath.legacy.db_categories.get_category", "pypath.log", "pypath.share", "pypath.share.cache", "pypath.share.cache.cache_item", "pypath.share.cache.get_cachedir", "pypath.share.common", "pypath.share.common.add_to_list", "pypath.share.common.add_to_set", "pypath.share.common.at_least_in", "pypath.share.common.clean_dict", "pypath.share.common.combine_attrs", "pypath.share.common.console", "pypath.share.common.decode", "pypath.share.common.del_empty", "pypath.share.common.df_memory_usage", "pypath.share.common.dict_collapse_keys", "pypath.share.common.dict_counts", "pypath.share.common.dict_diff", "pypath.share.common.dict_expand_keys", "pypath.share.common.dict_percent", "pypath.share.common.dict_set_path", "pypath.share.common.dict_set_percent", "pypath.share.common.dict_str", "pypath.share.common.dict_subtotals", "pypath.share.common.dict_sym_diff", "pypath.share.common.dict_union", "pypath.share.common.eq", "pypath.share.common.filtr", "pypath.share.common.first", "pypath.share.common.flat_list", "pypath.share.common.float_or_nan", "pypath.share.common.gen_session_id", "pypath.share.common.get", "pypath.share.common.get_args", "pypath.share.common.is_float", "pypath.share.common.is_int", "pypath.share.common.is_str", "pypath.share.common.jaccard_index", "pypath.share.common.join_dicts", "pypath.share.common.latex_table", "pypath.share.common.match", "pypath.share.common.maybe_in_dict", "pypath.share.common.md5", "pypath.share.common.merge_dicts", "pypath.share.common.n_shared_elements", "pypath.share.common.n_shared_foreach", "pypath.share.common.n_shared_total", "pypath.share.common.n_shared_unique_foreach", "pypath.share.common.n_unique_elements", "pypath.share.common.n_unique_foreach", "pypath.share.common.n_unique_total", "pypath.share.common.negate", "pypath.share.common.none_or_len", "pypath.share.common.paginate", "pypath.share.common.prefix", "pypath.share.common.print_table", "pypath.share.common.re_safe_groups", "pypath.share.common.remove_prefix", "pypath.share.common.rotate", "pypath.share.common.sets_to_sorted_lists", "pypath.share.common.sfirst", "pypath.share.common.shared_elements", "pypath.share.common.shared_foreach", "pypath.share.common.shared_total", "pypath.share.common.shared_unique", "pypath.share.common.shared_unique_foreach", "pypath.share.common.shared_unique_total", "pypath.share.common.silent", "pypath.share.common.simpson_index", "pypath.share.common.simpson_index_counts", "pypath.share.common.something", "pypath.share.common.sorensen_index", "pypath.share.common.suffix", "pypath.share.common.sum_dicts", "pypath.share.common.swap_dict", "pypath.share.common.swap_dict_simple", "pypath.share.common.swap_suffix", "pypath.share.common.table_add_row_numbers", "pypath.share.common.table_format", "pypath.share.common.table_textwrap", "pypath.share.common.to_list", "pypath.share.common.to_set", "pypath.share.common.try_bool", "pypath.share.common.try_float", "pypath.share.common.tsv_table", "pypath.share.common.uniq_list", "pypath.share.common.uniq_list1", "pypath.share.common.uniq_list2", "pypath.share.common.uniq_ord_list", "pypath.share.common.unique_elements", "pypath.share.common.unique_foreach", "pypath.share.common.unique_list", "pypath.share.common.unique_total", "pypath.share.common.upper0", "pypath.share.common.values", "pypath.share.common.wcl", "pypath.share.common.wrap_truncate", "pypath.share.constants", "pypath.share.curl", "pypath.share.curl.Curl", "pypath.share.curl.FileOpener", "pypath.share.curl.RemoteFile", "pypath.share.curl.cache_delete_off", "pypath.share.curl.cache_delete_on", "pypath.share.curl.cache_off", "pypath.share.curl.cache_on", "pypath.share.curl.cache_print_off", "pypath.share.curl.cache_print_on", "pypath.share.curl.debug_off", "pypath.share.curl.debug_on", "pypath.share.curl.dryrun_off", "pypath.share.curl.dryrun_on", "pypath.share.curl.is_url", "pypath.share.curl.preserve_off", "pypath.share.curl.preserve_on", "pypath.share.log", "pypath.share.log.Logger", "pypath.share.log.new_logger", "pypath.share.progress", "pypath.share.progress.Progress", "pypath.share.session", "pypath.share.session.Logger", "pypath.share.session.Session", "pypath.share.session.get_log", "pypath.share.session.get_session", "pypath.share.session.new_session", "pypath.share.settings", "pypath.share.settings.Settings", "pypath.share.settings.context", "pypath.share.settings.get", "pypath.share.settings.setup", "pypath.utils", "pypath.utils.proteomicsdb", "pypath.utils.proteomicsdb.ProteomicsDB", "pypath.utils.residues", "pypath.utils.residues.ResidueMapper", "pypath.visual", "pypath.visual.drawing", "pypath.visual.drawing.InterSet", "pypath.visual.drawing.Plot", "pypath.visual.igraph_drawing", "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "pypath.visual.igraph_drawing.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "pypath.visual.igraph_drawing.DefaultVertexDrawer", "pypath.visual.igraph_drawing.TextDrawer", "pypath.visual.igraph_drawing.edge", "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "pypath.visual.igraph_drawing.vertex", "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "pypath.visual.igraph_drawing.vertex.AbstractDrawer", "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "Contents", "Welcome to pypath!", "The pypath book", "Reference", "Release history", "Webservice"], "terms": {"i": [0, 20, 35, 41, 44, 45, 48, 49, 50, 51, 63, 64, 65, 67, 69, 70, 72, 73, 74, 77, 83, 84, 85, 91, 92, 93, 96, 98, 114, 115, 117, 127, 133, 136, 137, 138, 142, 145, 148, 150, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 176, 183, 184, 186, 190, 200, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 220, 221], "modul": [0, 1, 4, 6, 9, 20, 25, 33, 35, 41, 44, 53, 58, 113, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 179, 183, 184, 188, 190, 193, 197, 210, 216, 219, 220, 221], "primarili": [0, 218], "build": [0, 72, 75, 216, 217, 220], "molecular": [0, 216, 217, 218, 220], "interact": [0, 39, 216, 217, 220], "network": [0, 5, 197, 216, 217, 220], "also": [0, 7, 86, 90, 115, 173, 197, 217, 218, 221], "sever": [0, 217, 218], "submodul": [0, 25, 217, 218, 220], "access": [0, 4, 20, 45, 171, 216, 217, 220], "preprocess": [0, 217], "serv": [0, 179, 192, 221], "data": [0, 3, 5, 7, 15, 16, 17, 22, 44, 45, 60, 63, 64, 127, 156, 157, 160, 161, 183, 184, 190, 216, 217, 220, 221], "from": [0, 4, 11, 14, 15, 16, 20, 22, 25, 32, 39, 41, 44, 45, 63, 64, 66, 70, 71, 72, 75, 87, 89, 96, 98, 99, 100, 110, 111, 115, 129, 130, 140, 141, 143, 144, 145, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 183, 184, 190, 197, 204, 205, 206, 207, 208, 209, 214, 216, 217, 220, 221], "variou": [0, 184, 187, 203, 218], "resourc": [0, 5, 20, 39, 101, 105, 118, 121, 146, 156, 216, 217, 220, 221], "member": [0, 1, 2, 4, 6, 9, 10, 12, 19, 21, 23, 26, 27, 30, 31, 33, 34, 46, 52, 53, 54, 58, 59, 62, 154, 155, 172, 175, 177, 183, 188, 189, 191, 193, 194, 197, 203, 204, 205, 206, 207, 208, 209, 210, 218], "function": [0, 3, 4, 9, 10, 12, 17, 18, 19, 21, 23, 27, 31, 54, 59, 60, 62, 63, 64, 67, 73, 74, 84, 97, 113, 145, 155, 156, 172, 173, 177, 183, 190, 195, 200, 217, 218, 219, 220, 221], "class": [2, 3, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 90, 124, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 183, 184, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221], "none": [3, 5, 14, 17, 20, 22, 24, 25, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 61, 63, 66, 67, 85, 96, 112, 117, 127, 133, 135, 136, 137, 138, 141, 145, 153, 156, 157, 161, 162, 173, 174, 176, 178, 179, 182, 184, 185, 186, 187, 190, 195, 196, 218], "kwarg": [3, 5, 20, 47, 69, 84, 90, 96, 112, 134, 135, 141, 174, 184, 185, 187, 196, 218], "sourc": [3, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 28, 29, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 192, 195, 196, 198, 200, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 220, 221], "base": [3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 100, 124, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 176, 178, 179, 184, 190, 192, 195, 196, 198, 200, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 220], "object": [3, 4, 15, 17, 38, 39, 42, 47, 49, 83, 84, 97, 114, 124, 138, 156, 158, 173, 176, 178, 179, 184, 190, 192, 195, 198, 200, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219], "other": [3, 16, 35, 41, 44, 63, 66, 73, 83, 84, 86, 90, 99, 101, 105, 118, 121, 145, 146, 156, 173, 184, 190, 217, 221], "which": [3, 4, 63, 64, 65, 67, 70, 77, 84, 99, 101, 105, 115, 118, 121, 145, 146, 159, 160, 163, 164, 165, 166, 167, 168, 170, 171, 179, 190, 200, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 220, 221], "carri": [3, 218], "custom": [3, 20, 35, 41, 44, 174, 176, 182, 216, 217], "attribut": [3, 39, 45, 47, 48, 49, 50, 51, 67, 84, 156, 157, 184, 204, 205, 206, 207, 208, 209, 218, 221], "dedic": [3, 218], "dict": [3, 14, 15, 16, 17, 20, 22, 66, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 89, 90, 95, 98, 100, 101, 104, 105, 118, 121, 122, 130, 131, 132, 133, 146, 151, 184, 187, 190, 218, 220], "under": [3, 47, 218], "__init__": [3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 124, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 176, 178, 179, 184, 190, 192, 195, 196, 198, 200, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218], "method": [3, 4, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 65, 67, 72, 101, 105, 113, 118, 121, 124, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 176, 178, 179, 184, 190, 192, 195, 196, 198, 200, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 220], "serial": 3, "gener": [3, 14, 17, 18, 88, 96, 141, 190, 218, 220, 221], "json": [3, 15, 16, 22, 190, 218], "string": [3, 15, 16, 17, 20, 22, 66, 69, 71, 87, 88, 91, 92, 93, 96, 99, 111, 113, 114, 117, 129, 133, 140, 141, 150, 156, 173, 176, 190, 218], "full": [3, 173, 190, 207, 208, 216, 217, 220], "content": [3, 96, 136, 141, 156, 184, 217, 219, 220], "without": [3, 4, 66, 70, 90, 145, 216, 221], "ani": [3, 16, 17, 20, 63, 64, 83, 86, 90, 94, 99, 101, 105, 118, 121, 125, 127, 128, 131, 142, 145, 146, 148, 200, 216, 217, 220, 221], "whitespac": 3, "line": [3, 17, 68, 204, 205, 206, 207, 208, 209, 218], "break": 3, "return": [3, 11, 17, 18, 20, 22, 25, 32, 45, 48, 49, 50, 51, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 114, 115, 117, 118, 121, 122, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 140, 141, 142, 145, 146, 148, 151, 156, 157, 173, 174, 176, 179, 180, 181, 184, 186, 187, 190, 200, 204, 205, 206, 207, 208, 209, 217, 218, 221], "str": [3, 11, 14, 15, 16, 17, 20, 22, 24, 32, 35, 39, 41, 44, 45, 60, 68, 69, 70, 79, 84, 88, 89, 95, 99, 121, 151, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 182, 184, 186, 190], "The": [3, 11, 22, 32, 45, 63, 65, 68, 74, 77, 84, 89, 94, 97, 108, 110, 115, 125, 128, 131, 132, 136, 145, 151, 156, 173, 176, 184, 186, 200, 204, 205, 206, 207, 208, 209, 215, 216, 217, 220, 221], "update_attr": 3, "updat": [3, 176, 184, 218, 220, 221], "store": [3, 174, 190, 192, 217, 218, 220], "here": [3, 22, 84, 97, 176, 190, 200, 217, 218, 221], "ident": [3, 218], "kei": [3, 17, 20, 22, 48, 49, 50, 51, 60, 72, 74, 75, 77, 80, 84, 89, 90, 95, 96, 98, 100, 101, 105, 118, 121, 130, 131, 132, 136, 141, 142, 146, 148, 151, 156, 184, 186, 187, 218, 221], "ar": [3, 17, 35, 41, 44, 60, 70, 72, 74, 75, 83, 84, 131, 132, 145, 156, 183, 184, 187, 190, 204, 205, 206, 207, 208, 209, 214, 216, 217, 219, 220, 221], "merg": [3, 67, 77, 95, 100, 218], "us": [3, 4, 35, 41, 44, 45, 47, 60, 63, 97, 101, 105, 118, 121, 146, 156, 162, 166, 171, 173, 184, 186, 192, 197, 200, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 217, 218, 221], "share": [3, 47, 218, 220], "common": [3, 216], "combine_attr": 3, "new": [3, 13, 77, 174, 181, 182, 218, 220, 221], "can": [3, 45, 84, 86, 90, 91, 92, 101, 105, 108, 115, 118, 121, 142, 146, 148, 156, 174, 184, 197, 200, 204, 205, 206, 207, 208, 209, 212, 214, 215, 217, 218, 219, 220, 221], "provid": [3, 20, 35, 41, 44, 96, 141, 183, 184, 187, 210, 217, 218, 220, 221], "three": [3, 200], "wai": [3, 20, 35, 41, 44, 67, 89, 184, 187, 218], "an": [3, 22, 45, 48, 49, 50, 51, 65, 72, 84, 89, 92, 96, 97, 117, 136, 141, 151, 190, 197, 200, 204, 205, 206, 207, 208, 209, 216, 217, 221], "call": [3, 47, 67, 74, 90, 156, 157, 217, 218], "dictionari": [3, 17, 20, 66, 67, 74, 77, 90, 95, 100, 131, 132, 142, 148, 216, 217], "keyword": [3, 65, 84, 90, 200, 218], "argument": [3, 35, 41, 44, 65, 69, 84, 90, 127, 142, 148, 184, 187, 200, 218], "work": [4, 22, 67, 73, 218, 221], "might": [4, 110, 218, 221], "import": [4, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 217, 218], "main": [4, 67, 184, 195, 217, 218, 221], "df": [5, 71, 218], "entity_typ": [5, 37, 42, 218], "data_model": [5, 39], "interaction_typ": [5, 39], "only_direct": 5, "only_undirect": 5, "only_sign": 5, "only_protein": 5, "effect": [5, 218], "entiti": [5, 101, 105, 118, 121, 146, 218, 220, 221], "source_ent": 5, "target_ent": 5, "swap_undirect": 5, "true": [5, 22, 39, 55, 71, 72, 75, 83, 84, 96, 108, 112, 127, 135, 139, 156, 157, 158, 160, 162, 164, 166, 168, 171, 173, 176, 190, 218], "remove_loop": 5, "entities_or": 5, "fals": [5, 18, 22, 36, 39, 42, 55, 72, 96, 108, 122, 127, 131, 139, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 176, 190, 218], "filter": [5, 84, 218], "frame": [5, 216, 217, 220], "includ": [6, 35, 41, 44, 77, 184, 218, 220, 221], "licens": [6, 7, 216, 220], "collect": [6, 22, 218, 221], "web": [6, 22, 45, 217, 218, 220], "page": [6, 11, 22, 217, 218, 219, 221], "compon": [6, 218, 221], "biomart": [6, 218], "goos": 6, "queri": [6, 22, 45, 190, 216, 220], "templat": [6, 218], "configur": [6, 218], "file": [6, 11, 15, 16, 17, 18, 20, 32, 60, 96, 141, 145, 156, 157, 159, 160, 173, 174, 183, 184, 190, 216, 217, 220], "print": [7, 8, 68, 161, 162, 163, 164, 165, 166, 173, 218], "about": [7, 8, 22, 163, 164, 176, 190, 216, 217, 221], "copyright": 7, "databas": [7, 55, 56, 156, 216, 220, 221], "point": [7, 91, 115, 217, 218], "further": [7, 20, 190, 192, 216, 218, 221], "inform": [7, 8, 165, 166, 176, 216, 221], "loglevel": [8, 173], "9": [8, 216, 217, 218], "basic": [8, 216], "current": [8, 22, 48, 49, 50, 51, 57, 173, 176, 184, 186, 197, 217, 218, 221], "session": [8, 216, 217], "supp_url": 11, "article_url": 11, "download": [11, 22, 32, 44, 156, 160, 161, 167, 168, 190, 192, 216, 217, 220], "supplementari": [11, 32], "materi": [11, 32], "journal": [11, 32, 190], "webpag": [11, 32, 190, 218, 221], "arg": [11, 15, 20, 22, 32, 60, 69, 84, 89, 97, 108, 130, 131, 151, 184, 186, 187], "url": [11, 22, 24, 32, 47, 156, 169, 218, 221], "articl": [11, 218], "path": [11, 20, 32, 60, 61, 77, 96, 141, 173, 174, 217, 218], "csv": [13, 18, 218], "old": [13, 176, 217, 218], "field": [14, 15, 17, 20, 22, 28, 29, 84, 89, 151, 156, 218, 221], "option": [14, 20, 22, 24, 67, 88, 90, 95, 108, 115, 145, 184, 187, 190, 218, 221], "union": [14, 15, 16, 22, 24, 63, 64, 65, 67, 80, 82], "list": [14, 15, 16, 17, 18, 22, 24, 44, 45, 63, 64, 67, 70, 77, 83, 84, 86, 89, 90, 96, 110, 115, 131, 136, 137, 138, 141, 142, 145, 148, 151, 156, 190, 217, 218, 220, 221], "tupl": [14, 20, 22, 72, 75, 77, 83, 84, 89, 115, 151, 156, 173, 190, 200, 204, 205, 206, 207, 208, 209, 212, 215, 218], "callabl": [14, 22, 84, 97], "glom": [14, 15, 22], "spec": [14, 15, 22], "protect": 14, "each": [14, 17, 73, 80, 84, 131, 145, 184, 190, 217, 218, 220, 221], "coalesc": 14, "io": [15, 16, 22], "extract": [15, 22, 89, 111, 129, 156, 157, 190, 218], "arbitrari": [15, 65, 218, 221], "depth": [15, 72, 75], "like": [15, 17, 45, 217, 218], "specif": [15, 22, 173, 217, 218, 221], "read": [16, 17, 18, 22, 157, 160, 167, 168, 190, 216, 217, 220], "pass": [16, 45, 69, 84, 97, 182, 190, 218], "through": [16, 217, 218], "valu": [16, 17, 20, 45, 48, 49, 50, 51, 66, 67, 72, 73, 74, 77, 80, 82, 84, 85, 89, 95, 97, 99, 100, 108, 109, 117, 131, 132, 139, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 176, 184, 186, 187, 190, 205, 207, 208, 218, 221], "col": [17, 195, 218], "fileobject": 17, "sep": [17, 79, 111, 114, 129, 133, 158], "t": [17, 77, 105, 108, 146, 158, 159, 162, 163, 174, 217, 218, 219, 221], "sep2": 17, "rem": 17, "hdr": 17, "encod": [17, 69, 99, 156, 157, 218, 221], "ascii": [17, 99], "tabl": [17, 35, 41, 44, 45, 96, 136, 141, 216, 217, 219, 220], "open": [17, 156, 157, 173, 190, 217, 218], "stringio": 17, "buffer": 17, "column": [17, 96, 136, 141, 217, 218, 221], "identifi": [17, 145, 179, 216, 217], "result": [17, 22, 99, 100, 160, 166, 167, 168, 171, 190, 218], "number": [17, 22, 45, 65, 67, 73, 91, 101, 104, 105, 130, 173, 176, 192, 217, 218, 221], "separ": [17, 37, 39, 42, 111, 114, 129, 141, 218, 220], "subfield": 17, "prefix": [17, 114, 176, 218], "e": [17, 25, 68, 70, 72, 84, 86, 90, 91, 92, 190, 200, 210, 212, 215, 217, 218, 220, 221], "g": [17, 25, 68, 70, 84, 90, 145, 217, 218, 220, 221], "2": [17, 63, 64, 65, 67, 72, 74, 75, 86, 131, 142, 145, 148, 190, 200, 212, 215, 216], "3": [17, 64, 74, 84, 131, 195, 216, 217, 218], "int": [17, 22, 24, 45, 72, 75, 88, 89, 92, 151, 173, 174, 176, 182, 190], "header": [17, 37, 39, 42, 156, 158, 218], "If": [17, 20, 45, 63, 65, 67, 72, 75, 83, 96, 100, 108, 131, 137, 138, 141, 142, 145, 148, 184, 186, 190, 217, 218, 221], "assum": [17, 20, 70, 132], "remov": [17, 66, 70, 90, 114, 145, 192, 218, 220], "For": [17, 45, 47, 60, 73, 76, 80, 82, 101, 104, 105, 118, 121, 122, 130, 146, 190, 217, 218, 221], "element": [17, 63, 64, 65, 70, 72, 74, 77, 83, 84, 85, 86, 89, 90, 101, 104, 105, 117, 118, 121, 122, 131, 137, 138, 142, 145, 146, 148, 218], "replac": [17, 156, 218], "xls_file": 18, "sheet": [18, 24], "0": [18, 37, 39, 42, 63, 64, 72, 75, 86, 115, 142, 145, 148, 173, 174, 176, 179, 182, 190, 196, 216, 217, 218], "use_openpyxl": 18, "m": [18, 173, 218], "excel": [18, 218], "xl": 18, "convert": [18, 63, 64, 83, 87, 91, 92, 94, 99, 125, 128, 138, 139, 140, 173, 190, 192, 197, 217, 218], "one": [18, 20, 22, 35, 41, 44, 45, 63, 67, 72, 83, 84, 131, 181, 182, 184, 190, 200, 207, 208, 217, 221], "from_fil": 20, "requir": [20, 65, 217, 218], "restrict": [20, 218], "two": [20, 69, 74, 94, 115, 125, 128, 200, 204, 205, 206, 207, 208, 209, 217, 218], "user": [20, 158, 183, 190, 217, 218], "name": [20, 22, 25, 35, 39, 41, 42, 44, 47, 55, 60, 84, 89, 133, 145, 151, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 176, 178, 182, 184, 186, 187, 196, 216, 219, 221], "password": [20, 190], "onli": [20, 22, 35, 41, 44, 63, 67, 74, 84, 111, 129, 131, 156, 157, 165, 170, 173, 190, 216, 217, 220, 221], "more": [20, 22, 67, 84, 190, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221], "apart": [20, 217, 218], "first": [20, 44, 68, 72, 74, 77, 84, 111, 117, 145, 150, 190, 217, 218, 220], "rest": [20, 22, 218, 221], "ignor": [20, 151], "_credenti": 20, "exist": [20, 60, 61, 77, 89, 100, 156, 157, 161, 173, 182, 218], "set": [20, 35, 39, 41, 44, 45, 48, 49, 50, 51, 64, 65, 67, 73, 74, 77, 80, 82, 83, 84, 90, 94, 97, 101, 104, 105, 118, 121, 122, 125, 128, 131, 138, 146, 151, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 176, 218, 220, 221], "its": [20, 25, 60, 61, 117, 142, 145, 148, 163, 164, 212, 214, 215, 218, 220], "locat": [20, 217, 218, 220, 221], "": [20, 45, 63, 64, 73, 82, 101, 104, 105, 117, 118, 121, 122, 125, 146, 166, 173, 217, 218, 220], "default": [20, 67, 85, 88, 90, 95, 115, 117, 133, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 184, 186, 190, 200, 204, 205, 206, 207, 208, 209, 210, 215, 217, 218, 221], "secret": [20, 156, 218, 221], "directori": [20, 61, 173, 184, 217, 218, 220], "pair": [20, 95, 115, 156, 184, 218, 221], "unchang": [20, 69, 72, 75, 139, 140], "thi": [20, 25, 35, 39, 41, 44, 48, 49, 50, 51, 63, 64, 67, 72, 73, 75, 101, 105, 118, 121, 146, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 179, 183, 184, 186, 190, 192, 195, 197, 200, 204, 205, 206, 207, 208, 209, 210, 217, 218, 220, 221], "explicit": 20, "A": [20, 22, 60, 69, 72, 75, 97, 133, 173, 182, 184, 187, 190, 218, 220, 221], "rais": [20, 132], "runtimeerror": 20, "avail": [20, 45, 67, 173, 184, 190, 217, 218, 221], "q": 22, "pagin": [22, 218], "bool": [22, 44, 45, 72, 75, 84, 97, 108, 127, 131, 190], "page_length": 22, "500": [22, 218], "size_param": 22, "size": [22, 110, 157, 190, 196, 218], "page_param": 22, "offset": [22, 173, 218], "by_pag": 22, "page_field": 22, "total_field": 22, "totalpag": 22, "record_nam": 22, "servic": [22, 45, 217, 218, 220], "paramet": [22, 35, 39, 41, 44, 45, 63, 64, 66, 67, 68, 70, 72, 74, 75, 77, 86, 88, 90, 94, 95, 99, 100, 115, 121, 125, 126, 127, 128, 132, 142, 145, 148, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 176, 182, 184, 186, 187, 190, 200, 216, 217, 218], "append": [22, 63, 64], "retriev": [22, 25, 45, 98, 184, 190, 218], "all": [22, 65, 66, 84, 101, 104, 105, 118, 121, 122, 130, 131, 146, 151, 156, 168, 173, 179, 190, 204, 214, 217, 220, 221], "until": [22, 72, 218, 219], "end": [22, 75, 218], "record": [22, 221], "per": [22, 68, 190], "request": [22, 156, 157, 186, 218, 221], "item": [22, 60, 84, 131, 176, 218], "contain": [22, 63, 64, 77, 83, 90, 114, 115, 150, 173, 190, 197, 204, 205, 206, 207, 208, 209, 217, 218, 221], "total": [22, 76, 176, 207, 208], "detail": [22, 84, 217, 218], "http": [22, 110, 143, 144, 156, 190, 197, 217, 221], "readthedoc": 22, "en": 22, "latest": [22, 218], "tutori": [22, 217, 218], "html": [22, 190, 218, 221], "init_url": [24, 156], "module_nam": 25, "method_nam": 25, "uniprot": [25, 39, 42, 44, 45, 192, 216, 217, 220, 221], "all_uniprot": [25, 218], "id_type_a": [35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 218], "id_type_b": [35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 218], "ncbi_tax_id": [35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 218, 221], "9606": [35, 36, 39, 44, 45, 218], "mappinginput": [35, 36, 37, 40, 41, 43, 44, 45], "microarrai": [35, 218], "probe": [35, 218], "map": [35, 41, 44, 45, 133, 192, 204, 205, 206, 207, 208, 209, 212, 214, 215, 217, 218, 220], "id": [35, 41, 44, 45, 216, 221], "type": [35, 41, 44, 45, 63, 64, 83, 94, 99, 125, 127, 128, 131, 142, 145, 148, 156, 157, 174, 216, 217, 218], "pro_id_type_a": [35, 41], "symbol": [35, 41, 44, 217, 218, 221], "pro": [35, 41], "label": [35, 41, 45, 48, 49, 50, 51, 60, 173, 179, 182, 200, 204, 205, 206, 207, 208, 209, 218], "These": [35, 41, 44, 45, 60, 218, 221], "automat": [35, 41, 44, 217, 218, 220], "give": [35, 41, 44, 176, 190, 218], "overrid": [35, 41, 44, 45, 184, 186], "pro_id_type_b": [35, 41], "same": [35, 39, 41, 44, 65, 218], "abov": [35, 41, 44, 174, 217, 218, 221], "just": [35, 41, 44, 216], "transcript": [36, 217, 221], "biomart_id_type_a": 36, "biomart_id_type_b": 36, "input_": 37, "col_a": 37, "col_b": 37, "protein": [37, 39, 41, 42, 190, 216, 217, 220, 221], "type_": 38, "resource_id_type_a": [38, 218], "resource_id_type_b": [38, 218], "unknown": [39, 42, 218], "id_col_a": [39, 218], "id_col_b": [39, 218], "1": [39, 41, 43, 63, 64, 65, 72, 74, 75, 77, 86, 131, 142, 145, 148, 176, 190, 196, 216, 218, 221], "entity_type_a": 39, "entity_type_b": 39, "is_direct": [39, 218], "sign": 39, "input": [39, 42, 45, 64, 139, 140, 216, 217, 220], "refer": [39, 170, 171, 173, 216, 217, 221], "extra_edge_attr": 39, "extra_node_attrs_a": 39, "extra_node_attrs_b": 39, "taxon_a": 39, "taxon_b": 39, "post_transl": [39, 218], "positive_filt": 39, "negative_filt": 39, "mark_sourc": 39, "mark_target": 39, "input_arg": 39, "curl_arg": 39, "must_have_refer": 39, "huge": [39, 190, 218, 219], "unique_field": 39, "expand_complex": 39, "allow_loop": 39, "only_default_organ": 39, "creat": [39, 76, 77, 137, 138, 173, 176, 179, 181, 182], "boolean": [39, 218], "vertex": [39, 200, 204, 205, 206, 207, 208, 209, 218], "direct": [39, 67, 204, 205, 206, 207, 208, 209], "particular": [39, 47, 101, 105, 118, 121, 146, 218], "target": [39, 204, 205, 206, 207, 208, 209, 218, 220, 221], "vertic": [39, 200, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 218], "fname": [40, 173, 218], "ontologi": [41, 216, 217, 220], "consortium": [41, 218], "id_col": 42, "id_typ": [42, 45, 218], "extra_attr": 42, "uniprot_id_type_a": 44, "uniprot_id_type_b": 44, "swissprot": [44, 45, 217, 218], "upload": 44, "webservic": [44, 216], "ye": 45, "defin": [45, 84, 97, 184, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 221], "convers": [45, 216, 220], "you": [45, 156, 157, 160, 166, 171, 190, 200, 216, 219, 221], "would": [45, 218, 219], "translat": [45, 216, 220, 221], "target_id_typ": [45, 218], "tax": 45, "ncbi": [45, 216, 217, 221], "taxonomi": [45, 216, 217], "organ": [45, 216, 217, 220, 221], "interest": [45, 217, 218, 219], "look": [45, 77, 190], "trembl": [45, 217, 218], "directli": [45, 197, 216, 217, 221], "review": [45, 218], "To": [45, 190, 218, 221], "fetch": [45, 197, 218], "togeth": [45, 218], "get": [45, 156, 184, 190, 216, 218, 221], "programmat": [45, 218], "interfac": [45, 217, 218], "org": [45, 190, 197, 218, 221], "batch": 45, "have": [45, 72, 131, 160, 166, 171, 190, 217, 218, 220, 221], "slightli": 45, "differ": [45, 63, 64, 217, 218, 220, 221], "api": [45, 190, 217, 220, 221], "capabl": [45, 63, 64], "some": [45, 166, 171, 190, 217, 218, 221], "obtain": 45, "former": [45, 218, 220], "latter": [45, 97, 218], "static": [45, 179], "resource_id_typ": 45, "built": [45, 67, 113, 216, 217], "known": [45, 218, 221], "full_nam": [47, 218], "purpos": [47, 218], "attrib": 47, "enabl": [47, 190], "check": [47, 48, 49, 50, 51, 84, 93, 127, 217, 218, 221], "accord": [47, 77, 115, 145, 173, 190, 200, 218], "exampl": [47, 63, 64, 70, 74, 77, 86, 127, 131, 142, 145, 148, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 216, 217, 218], "academ": [47, 218], "redistribut": [47, 218, 220], "compat": [47, 220], "alik": 47, "level": [48, 49, 50, 51, 68, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 182, 184, 192, 217, 218, 221], "licensefeatur": [48, 50, 51], "classmethod": [48, 49, 50, 51, 156, 173], "check_level": [48, 49, 50, 51], "valid": [48, 49, 50, 51, 186], "int_to_level": [48, 49, 50, 51], "correspond": [48, 49, 50, 51, 184, 187, 192, 218], "nearest": [48, 49, 50, 51], "integ": [48, 49, 50, 51, 92, 204, 205, 206, 207, 208, 209, 212, 214, 215, 218], "ordin": [48, 49, 50, 51], "scale": [48, 49, 50, 51, 212, 214, 215, 218], "level_to_int": [48, 49, 50, 51], "to_int": [48, 49, 50, 51], "featur": [48, 49, 50, 51, 216, 218], "top": [55, 218], "brows": [57, 173, 216], "logfil": [57, 173, 218], "It": [60, 70, 156, 157, 183, 184, 197, 217, 218, 221], "doe": [60, 63, 89, 121, 142, 148, 160, 165, 170, 173, 217, 218], "mean": [60, 190, 218], "actual": [60, 200, 218, 219], "typic": [60, 217, 218], "process": [60, 142, 148, 156, 190, 217, 220], "dump": [60, 218], "quicker": 60, "load": [60, 216, 217, 220], "next": [60, 218], "cachedir": 61, "ensur": [61, 150, 217, 218], "lst": [63, 70, 86, 110, 218], "toadd": [63, 64], "add": [63, 64, 173, 217, 218, 220, 221], "sinc": [63, 218], "handl": [63, 64, 156, 217, 218], "similarli": [63, 218], "ad": [63, 64, 72, 84, 218], "ommit": 63, "uniqu": [63, 67, 74, 104, 105, 121, 122, 131, 132, 142, 145, 146, 148, 151, 218, 221], "necessarili": 63, "preserv": [63, 142, 143, 144, 145, 148, 170, 171, 218], "order": [63, 142, 143, 144, 145, 148, 150, 218, 221], "origin": [63, 64, 73, 114, 131, 132, 184, 216, 217, 220], "sequenc": [63, 142, 145, 148, 216], "note": [63, 74, 142, 148, 218, 221], "make": [63, 137, 138, 164, 170, 171, 218, 221], "uniq_list": [63, 148], "ab": 63, "cd": 63, "ef": 63, "4": [63, 64, 195, 200, 212, 215, 216, 218, 221], "st": 64, "5": [64, 88, 145, 179, 195, 216, 217, 218], "n": [65, 218], "similar": [65, 83, 125, 217, 218, 221], "intersect": [65, 195], "oper": [65, 104, 121, 122, 218], "present": [65, 173, 217, 218], "least": [65, 218], "instead": [65, 160, 184, 186, 218, 219, 221], "them": [65, 67, 83, 84, 131, 190, 217, 218, 221], "equival": [65, 173, 218], "accept": [65, 69, 84, 200, 212, 215, 218, 221], "non": [65, 218], "dct": [66, 72, 75, 79, 80, 98], "clean": [66, 192, 218], "cast": [66, 84, 108], "copi": [66, 70, 77, 90, 145, 217, 218], "entri": [66, 70, 145, 218], "format": [66, 68, 173, 176, 197, 220, 221], "attr": 67, "num_method": 67, "max": 67, "combin": [67, 217, 218, 221], "multipl": [67, 184, 217, 218, 221], "attempt": [67, 139, 192, 217, 218], "find": [67, 118, 121, 146, 190, 217, 218], "out": [67, 96, 137, 138, 141, 190, 217, 218], "best": 67, "concaten": [67, 72], "greater": 67, "given": [67, 74, 77, 90, 99, 115, 125, 145, 190, 200, 204, 205, 206, 207, 208, 209, 212, 214, 215, 218], "merge_dict": 67, "special": [67, 218, 220], "than": [67, 110, 217, 218, 221], "recurs": [67, 73, 74, 100], "numer": [67, 218], "messag": [68, 160, 163, 164, 173, 174, 216, 221], "termin": [68, 176, 218], "standard": [68, 218], "output": [68, 218], "80": [68, 218], "charact": [68, 156, 179, 218], "plu": [68, 90], "indent": 68, "byte": [69, 156, 190], "otherwis": [69, 72, 75, 84, 87, 96, 97, 98, 114, 132, 137, 138, 140, 141, 218], "either": [69, 104, 121, 122, 156, 173, 190, 218, 221], "error": [69, 132, 217, 221], "empti": [70, 85, 117, 127, 137, 138, 217, 218], "elemenst": 70, "iter": [70, 84, 85, 86, 89, 94, 117, 125, 128, 131, 142, 145, 148, 151, 176, 218], "whose": [70, 74], "length": [70, 73, 88, 110, 179, 218], "wa": [70, 217, 218], "zero": [70, 207, 208], "b": [70, 74, 77, 86, 94, 125, 126, 128, 131, 133, 142, 145, 148, 173, 218], "c": [70, 74, 86, 126, 131, 145, 173, 204, 205, 206, 207, 208, 209, 218], "deep": [71, 218], "memori": [71, 192, 217, 218, 220], "usag": 71, "panda": [71, 190, 216, 217, 220, 221], "datafram": [71, 216, 217], "modifi": [71, 163], "info": [71, 216, 221], "front": [72, 75, 173], "expand_tuple_kei": 72, "collaps": 72, "up": [72, 75, 77, 186, 192, 218], "so": [72, 75, 159, 165, 167, 170, 217, 218], "outermost": 72, "go": [72, 166, 217, 218, 220], "toward": [72, 218], "innermost": 72, "allow": [72, 218], "start": [72, 190, 217, 218, 220], "ones": [72, 192, 218], "inner": [72, 77, 80], "outer": [72, 80], "dict_of_set": [73, 78, 82], "__len__": 73, "d1": [74, 81, 95, 100, 218], "d2": [74, 81, 95, 100], "compar": 74, "case": [74, 97, 157, 182, 190, 217, 218, 221], "comparison": 74, "perform": [74, 156, 167, 168, 218], "see": [74, 84, 131, 145, 166, 173, 197, 200, 212, 214, 215, 217, 218, 221], "below": [74, 84, 131, 145, 173, 217, 218], "second": [74, 84, 173, 218], "when": [74, 173, 200, 204, 205, 206, 207, 208, 209, 212, 214, 215, 217, 218], "expand": 75, "chop": 75, "dict_of_count": 76, "count": [76, 101, 104, 105, 122], "percentag": 76, "d": [77, 86, 131, 132, 145, 173, 218], "subdict": 77, "those": [77, 84, 218], "do": [77, 165, 168, 170, 216, 221], "yet": [77, 218, 221], "leaf": 77, "simpl": [77, 84, 97, 217, 218, 221], "heurist": 77, "Or": [77, 94, 99, 115, 125, 128, 145, 218, 221], "being": [77, 212, 214, 215], "doesn": [77, 217, 218], "subsequ": [77, 217, 218], "last": [77, 110, 129, 218], "specifi": [77, 88, 90, 115, 205, 212, 214, 215], "equal": [83, 84], "between": [83, 94, 125, 128, 200, 205, 207, 208, 217, 218, 220, 221], "both": [83, 100, 156, 217, 218, 221], "thei": [83, 84, 217, 218, 220], "obj": [84, 89, 93, 97, 116, 151], "and_or": 84, "AND": [84, 190, 218, 221], "condit": [84, 97, 218], "whether": [84, 108, 218], "should": [84, 131, 184, 204, 205, 206, 207, 208, 209, 217, 218, 221], "met": 84, "select": [84, 157, 216, 221], "OR": [84, 218], "index": [84, 89, 94, 125, 128, 151, 218], "yield": [84, 110, 218], "meet": 84, "eq": [84, 97], "altern": [84, 184, 187, 217, 218, 221], "negat": 84, "foobar": 84, "keep": [84, 145, 190, 217, 218], "coerc": 86, "singl": [86, 137, 138, 216], "lsit": 86, "flatten": 86, "Its": [86, 212, 214, 215, 218], "abc": 86, "def": [86, 145, 218], "f": [86, 145, 152], "num": [87, 91, 92, 140], "float": [87, 91, 94, 115, 125, 126, 128, 140], "repres": [87, 91, 92, 96, 140, 141, 218], "numpi": 87, "nan": [87, 218], "random": [88, 179, 218], "alphanumer": [88, 179], "uniform": 89, "pypath_no_valu": 89, "loc_dict": 90, "local": [90, 173, 217, 218, 220, 221], "variabl": [90, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 218], "self": [90, 127, 190, 218], "scope": [90, 218, 221], "tell": [91, 92, 218, 221], "comput": [94, 99, 125, 128, 218], "jaccard": 94, "_from": 95, "join": 95, "tbl": [96, 112, 134, 135, 136, 141], "colformat": 96, "maxlen": [96, 112, 135, 136, 141, 153], "lineno": [96, 112, 135], "doc_templ": 96, "booktab": 96, "latex_compil": 96, "latex_execut": 96, "xelatex": 96, "latex_engin": 96, "ordereddict": [96, 136, 141, 218], "titl": [96, 136, 141], "latex": 96, "tabular": [96, 218, 221], "write": [96, 141, 173, 190, 216, 217], "compil": [96, 218, 219], "document": [96, 173, 217, 218, 219], "test": [97, 156, 220], "against": [97, 218, 221], "In": [97, 156, 182, 190, 217, 218], "outcom": 97, "itself": [98, 170, 171, 218], "sum": [99, 130], "hash": [99, 218], "must": [99, 200, 218, 221], "follow": [99, 110, 156, 217, 218], "where": [100, 156, 204, 205, 206, 207, 208, 209, 218, 221], "by_group": [101, 102, 103, 104, 105, 106, 107, 118, 119, 120, 121, 122, 123, 146, 147, 149], "group": [101, 105, 118, 121, 146, 190, 196, 217, 218, 220], "belong": [101, 105, 118, 121, 146, 180, 218], "occur": [101, 105, 118, 121, 146], "among": [101, 105, 118, 121, 146, 218, 221], "thing": [101, 105, 118, 121, 146], "across": [101, 104, 105, 118, 121, 122, 146, 218], "op": [104, 121, 122, 123, 217, 218], "depend": [104, 121, 122, 218, 220], "don": [105, 146, 217, 218, 219, 221], "neg": [108, 218], "anyth": [108, 127, 159, 162, 200, 212, 215, 218], "won": [108, 159, 162, 163, 174, 218], "10": [110, 190, 196, 216, 218, 221], "section": [110, 190, 218], "shorter": 110, "stackoverflow": [110, 156], "com": [110, 143, 144, 156, 190, 217, 218], "3744502": 110, "854988": [110, 156], "split": [111, 129, 145, 220], "take": [111, 129, 142, 148, 190, 200, 217, 218], "part": [111, 129, 183, 218, 220, 221], "width": [112, 135, 136, 153, 195], "tablefmt": [112, 135], "fancy_grid": [112, 135], "wrap": [112, 135, 136, 173], "pattern": [113, 218], "search": [113, 190], "miss": [113, 218], "conveni": [113, 218], "re": 113, "angl": 115, "center": 115, "respect": [115, 218], "around": [115, 156, 176, 216, 217], "degre": 115, "dimension": 115, "space": [115, 218], "counter": 115, "clockwis": 115, "coordin": [115, 212, 214, 215, 218], "determin": [115, 145], "rel": 115, "ha": [115, 156, 190, 217, 218, 220, 221], "assign": [118, 121, 146, 218, 221], "simpson": 125, "explanatori": 127, "anyht": 127, "123": [127, 218], "hello": 127, "world": 127, "sorensen": 128, "dice": 128, "coeffici": 128, "force_set": 131, "swap": [131, 132, 133], "interchang": [131, 132], "even": [131, 161, 218, 220, 221], "hashabl": 132, "overwrit": 132, "duplic": 132, "_": [133, 156], "suffix": 133, "chang": [133, 150, 159, 162, 176, 217, 218], "truncat": [136, 217, 218], "text": [136, 153, 173, 218], "cell": [136, 218, 221], "var": [137, 138], "sure": [137, 138], "val": 139, "upon": [139, 160, 218], "failur": [139, 216], "tab": 141, "tsv": 141, "seq": [142, 143, 144, 145, 148, 218], "reduc": [142, 145, 148], "aba": [142, 148], "Not": [143, 144, 190, 218], "www": [143, 144, 190, 197, 218], "peterb": [143, 144], "plog": [143, 144], "uniqifi": [143, 144], "benchmark": [143, 144], "idfun": 145, "repeat": [145, 218], "instanc": [145, 171, 174, 176, 180, 200, 217, 218, 221], "kept": [145, 218], "behavior": 145, "x": [145, 204, 205, 206, 207, 208, 209, 212, 214, 215], "abracadabra": 145, "r": [145, 156, 157, 217, 218, 221], "els": 145, "32": [145, 216, 218], "42": [145, 218], "15": [145, 218], "12": [145, 173, 216, 218], "extens": [145, 190], "png": [145, 218], "txt": 145, "pdf": [145, 195, 196], "letter": [150, 218], "uppercas": 150, "except": [150, 221], "word": 150, "alreadi": [150, 181, 182, 218], "avoid": [150, 165, 170, 204, 205, 206, 207, 208, 209, 217, 218], "mirna": [150, 217, 220, 221], "possibl": [151, 190, 216, 218], "unhash": 151, "silent": [156, 190], "post": 156, "req_head": [156, 218], "cach": [156, 159, 160, 161, 162, 163, 164, 167, 168, 192, 216, 217], "debug": [156, 165, 166, 171], "outf": [156, 195], "compr": [156, 157], "files_need": [156, 157], "connect_timeout": 156, "timeout": 156, "ignore_content_length": 156, "init_fun": 156, "get_jsessionid": 156, "init_use_cach": 156, "larg": [156, 157, 190, 217, 218, 220, 221], "default_mod": [156, 157], "override_post": 156, "init_head": 156, "return_head": 156, "compress": [156, 157], "binary_data": 156, "write_cach": 156, "force_quot": 156, "sftp_user": 156, "sftp_passwd": 156, "sftp_passwd_fil": 156, "sftp_port": 156, "22": [156, 158, 218, 221], "sftp_host": 156, "sftp_ask": 156, "setup": [156, 168, 184, 218], "retri": 156, "cache_dir": 156, "bypass_url_encod": 156, "empty_attempt_again": 156, "keep_fail": 156, "alpn": 156, "slow": [156, 218], "http2": 156, "fileopen": 156, "wrapper": [156, 176, 186, 190, 218], "pycurl": [156, 218], "vast": [156, 218], "amount": [156, 218], "addit": [156, 218, 221], "onc": [156, 190, 217, 218], "ftp": [156, 218], "cooki": 156, "param": [156, 184, 186, 190, 200, 204, 205, 206, 207, 208, 209, 212, 214, 215], "multipart": 156, "form": 156, "quot": 156, "redirect": 156, "pointer": [156, 157], "archiv": [156, 157], "gzip": [156, 157], "tar": [156, 157], "gz": [156, 157], "zip": [156, 157], "abl": [156, 217, 218], "show": [156, 218, 221], "progress": 156, "statu": [156, 176, 218], "indic": [156, 204, 205, 206, 207, 208, 209, 212, 214, 215, 218], "consol": [156, 160, 173, 216], "close": [156, 173, 190, 218], "construct_binary_data": 156, "binari": 156, "construct": [156, 200, 204, 205, 206, 207, 208, 209, 212, 214, 215], "is_quot": 156, "question": [156, 217], "1637762": 156, "php": [156, 218], "open_tgz": [156, 157], "replace_forbidden": 156, "repl": 156, "forbidden": 156, "certain": [156, 157, 184, 190, 216], "system": [156, 217, 218], "slash": 156, "unix": 156, "while": [156, 176, 217, 218], "mani": [156, 217, 218, 220, 221], "window": 156, "environ": [156, 218], "set_binary_data": 156, "transmit": 156, "attach": [156, 204, 205, 206, 207, 208, 209], "filenam": [156, 158, 196, 218], "url_fix": 156, "charset": 156, "utf": [156, 157], "8": [156, 157, 216, 217, 218], "121017": 156, "file_param": 157, "_open": 157, "set_fileobj": 157, "logger": [157, 174, 179, 180, 182, 196], "bz2": 157, "need": [157, 190, 216, 218, 221], "multifil": 157, "examin": 157, "host": [158, 218, 220], "passwd": 158, "port": 158, "rownam": 158, "_global_context_off": [159, 161, 163, 165, 167, 170], "context": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 184, 200, 204, 205, 206, 207, 208, 209, 212, 215, 218], "handler": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171], "stop": [159, 163, 218], "delet": [159, 160, 182, 217, 218, 220], "behaviour": [159, 162, 163, 167, 218], "behind": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 218], "scene": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 218], "cachedel": [159, 160], "data_format": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 218, 220], "pa": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 218], "load_resourc": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 218], "signor": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 218, 221], "pathwai": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 217, 218, 221], "_global_context_on": [160, 162, 164, 166, 168, 171], "Then": [160, 218], "again": [160, 204, 205, 206, 207, 208, 209, 217, 218], "noth": 160, "dryrun": [160, 167, 168], "turn": [160, 161, 162], "let": [160, 218], "know": [160, 218], "been": [160, 217, 218, 220, 221], "off": [161, 176], "cache_on": 161, "As": [162, 163, 218, 221], "most": [162, 217, 218], "probabl": [162, 218], "verbos": [163, 164, 173, 174, 182, 218, 220], "cacheprint": [163, 164], "By": [165, 170, 190, 218, 221], "restor": [165, 167, 170, 184], "cache_debug_off": 165, "issu": [166, 171, 217], "want": [166, 171, 216, 217, 221], "what": [166, 218, 221], "cache_debug_on": 166, "appli": 167, "cache_dryrun_off": 167, "step": [168, 176, 218], "cache_dryrun_on": 168, "lastcurl": [170, 171, 218], "cache_preserve_off": 170, "cache_preserve_on": 171, "console_level": [173, 218], "logdir": [173, 174], "max_width": 173, "200": 173, "written": [173, 174, 190, 218], "drop": [173, 218], "close_logfil": 173, "msg": [173, 176, 218], "flush": 173, "get_logdir": 173, "dirnam": 173, "label_messag": 173, "decid": [173, 218], "open_logfil": 173, "strftime": 173, "time": [173, 217, 218], "librari": [173, 218], "manual": [173, 218], "code": [173, 212, 214, 215, 218, 220], "localtim": 173, "commonli": 173, "y": [173, 204, 205, 206, 207, 208, 209, 212, 214, 215, 218], "year": 173, "centuri": 173, "decim": 173, "month": 173, "01": [173, 218], "dai": [173, 190, 218], "31": [173, 216, 218], "h": [173, 218], "hour": [173, 218], "24": [173, 195, 218], "clock": 173, "00": [173, 218], "23": [173, 218], "minut": [173, 217, 218], "59": [173, 218], "61": [173, 218], "z": 173, "zone": 173, "utc": 173, "abbrevi": 173, "weekdai": 173, "appropri": [173, 217, 218], "date": [173, 218], "represent": [173, 218], "p": [173, 218], "am": 173, "pm": 173, "mai": [173, 218], "your": [173, 190, 218, 221], "platform": [173, 217], "timestamp": 173, "timestamp_messag": 173, "directoti": 174, "lowest": 174, "interv": 176, "percent": 176, "initi": [176, 218, 220], "done": 176, "init": 176, "unit": 176, "befor": [176, 218], "had": 176, "my": [176, 217], "progressbar": 176, "now": [176, 190, 218], "great": [176, 218], "tqdm": 176, "implement": [176, 190, 200, 204, 205, 206, 207, 208, 209, 210, 214, 215, 220, 221], "move": [176, 220], "oldprogress": 176, "get_desc": 176, "descript": [176, 218, 220], "consist": [176, 217, 218], "suppos": 176, "someth": [176, 217, 218], "constant": [176, 204, 205, 206, 207, 208, 209], "within": [176, 184, 200, 212, 215, 217, 218, 221], "life": 176, "stage": [176, 218], "task": 176, "init_tqdm": 176, "set_don": 176, "posit": [176, 204, 205, 206, 207, 208, 209, 218], "bar": 176, "set_statu": 176, "set_tot": 176, "busi": 176, "forc": [176, 218], "desir": [176, 204, 205, 206, 207, 208, 209], "finish": [176, 218], "destroi": 176, "log_verbos": [179, 182], "gen_session_id": 179, "start_logg": 179, "log": [180, 216, 217, 220], "python": [183, 190, 217, 218, 220, 221], "remaind": 183, "gather": 183, "yaml": [183, 184], "_dict": [184, 185, 187], "temporarili": 184, "alter": [184, 218], "At": [184, 218], "exit": 184, "nest": 184, "nonetyp": 184, "get_default": 184, "reset": 184, "reset_al": 184, "structur": [184, 212, 214, 215, 216, 217, 220], "usernam": 190, "output_format": 190, "feel": [190, 217, 218], "free": [190, 192, 217, 218, 220], "wilhelm": 190, "et": [190, 218], "al": [190, 218], "2014": 190, "natur": 190, "v509": 190, "n7502": 190, "nature13319": 190, "comprehens": [190, 217, 218, 220, 221], "descritpion": 190, "visit": 190, "regist": 190, "mail": 190, "address": [190, 218], "coupl": 190, "admin": [190, 218], "xml": 190, "get_express": 190, "normal": [190, 217], "tissue_averag": 190, "unnorm": 190, "express": [190, 217, 218, 221], "previous": 190, "disk": [190, 218], "averag": [190, 218], "tissu": [190, 218, 221], "sampl": 190, "get_piec": 190, "20480": 190, "delimit": 190, "hundr": [190, 218], "mb": [190, 217, 218], "segment": [190, 218], "curli": 190, "brace": 190, "individu": [190, 218], "largest": 190, "get_protein": 190, "tissue_id": 190, "calculation_method": 190, "swissprot_onli": 190, "no_isoform": 190, "get_tissu": 190, "annot": [190, 216, 217, 220], "pandas_matrix": 190, "matrix": [190, 221], "shold": 190, "curl": [190, 221], "raw": [190, 212, 214, 215, 217, 218], "tissues_x_protein": 190, "hold": 190, "pdb": [192, 218, 221], "xsize": 195, "cairotest": 195, "1024": 195, "height": 195, "bgcol": 195, "embl_gray125": 195, "interscol": 195, "ysize": 195, "ycol": 195, "skip": 195, "margin": [195, 196, 218], "mincircl": 195, "cellpad": 195, "graph": [196, 197, 200, 203, 210, 212, 214, 215, 218, 220], "graphix_dir": 196, "graphix_format": 196, "title_text": 196, "title_font_famili": 196, "title_font_s": 196, "title_color": 196, "646567": 196, "layout": [196, 200, 212, 214, 215], "fruchterman_reingold": 196, "layout_param": 196, "vertex_label": 196, "vertex_s": [196, 218], "vertex_label_s": [196, 218], "degree_label_s": 196, "edge_width": [196, 218], "vertex_color": [196, 218], "6ea945": 196, "vertex_label_color": [196, 218], "007b7f": 196, "vertex_alpha": 196, "aa": [196, 218], "vertex_frame_color": 196, "ffffff00": 196, "vertex_frame_width": [196, 218], "edge_label": 196, "edge_label_s": 196, "edge_label_color": 196, "edge_curv": 196, "edge_color": [196, 218], "818284": 196, "edge_alpha": 196, "autocurv": 196, "vertex_label_font": 196, "san": 196, "serif": 196, "edge_label_font": 196, "edge_arrow_s": 196, "edge_arrow_width": 196, "palett": [196, 200, 204, 205, 206, 207, 208, 209, 212, 214, 215], "bbox": [196, 200, 212, 215], "small": [196, 204, 205, 206, 207, 208, 209, 217, 220], "dimens": 196, "1280": 196, "draw": [197, 200, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215], "routin": [197, 210], "cairo": [197, 200, 204, 205, 206, 207, 208, 209, 212, 215, 218], "surfac": [197, 218], "l": [197, 200, 204, 205, 206, 207, 208, 209, 212, 214, 215, 218], "defaultgraphdraw": [197, 212, 214, 215], "ubigraph": 197, "displai": [197, 218], "ubigraphdraw": 197, "u": [197, 217, 218], "ubietylab": 197, "net": [197, 218], "send": 197, "igraph": [197, 200, 212, 214, 215, 216, 217, 220], "cytoscap": [197, 217, 218], "cytoscaperpc": 197, "plugin": 197, "gforg": 197, "nbic": 197, "nl": 197, "project": 197, "cytoscapegraphdraw": 197, "alia": [199, 201, 202], "abstractcairographdraw": [199, 200, 201, 202], "vertex_drawer_factori": 200, "edge_drawer_factori": 200, "label_drawer_factori": 200, "visualis": 200, "node": 200, "2d": 200, "plane": 200, "straight": [200, 204, 205, 206, 207, 208, 209, 218], "curv": 200, "edg": [200, 216], "connect": [200, 217, 220, 221], "invok": 200, "plot": [200, 203, 216, 220], "__plot__": 200, "understood": 200, "drawer": [200, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215], "associ": [200, 212, 214, 215, 218], "boundingbox": [200, 212, 215], "we": [200, 212, 215, 217, 218, 219, 221], "bound": [200, 212, 214, 215, 218], "box": [200, 212, 214, 215], "constructor": [200, 212, 215], "factori": 200, "abstractcairovertexdraw": [200, 215], "area": 200, "color": [200, 204, 205, 206, 207, 208, 209, 212, 214, 215], "defaultvertexdraw": 200, "abstractedgedraw": [200, 205, 206, 209], "control": [200, 218, 220], "style": [200, 203, 220, 221], "drawn": [200, 204, 205, 206, 207, 208, 209, 212, 214, 215], "arrowedgedraw": 200, "textdraw": 200, "abstract": [204, 212, 214], "concret": [204, 214], "deriv": [204, 214, 218, 221], "draw_directed_edg": [204, 205, 206, 207, 208, 209], "src_vertex": [204, 205, 206, 207, 208, 209], "dest_vertex": [204, 205, 206, 207, 208, 209], "properti": [204, 205, 206, 207, 208, 209, 212, 214, 215, 218], "draw_loop_edg": [204, 205, 206, 207, 208, 209], "loop": [204, 205, 206, 207, 208, 209], "circl": [204, 205, 206, 207, 208, 209], "draw_undirected_edg": [204, 205, 206, 207, 208, 209], "undirect": [204, 205, 206, 207, 208, 209, 218], "get_label_posit": [204, 205, 206, 207, 208, 209], "midpoint": [204, 205, 206, 207, 208, 209], "align": [204, 205, 206, 207, 208, 209], "tri": [204, 205, 206, 207, 208, 209], "overlap": [204, 205, 206, 207, 208, 209, 218], "horizont": [204, 205, 206, 207, 208, 209], "taken": [204, 205, 206, 207, 208, 209], "textalign": [204, 205, 206, 207, 208, 209], "alpha_at_src": 205, "alpha_at_dest": 205, "vari": 205, "alpha": [205, 207, 208, 218], "destin": [205, 207, 208, 209], "arrow": 206, "alphavaryingedgedraw": [207, 208], "opac": [207, 208], "transpar": [207, 208], "interpol": [207, 208], "taper": 209, "wider": 209, "narrow": 209, "abstractvertexdraw": 212, "abstractcairodraw": 212, "canva": 212, "visual_vertex": [212, 214, 215], "coord": [212, 214, 215], "visualvertexbuild": [212, 214, 215], "algorithm": [212, 214, 215], "abstractdraw": 214, "welcom": [216, 218], "pypath": [216, 220, 221], "omnipath": [216, 220, 221], "instal": 216, "doc": [216, 220], "help": 216, "integr": [216, 218, 220], "manag": 216, "homologi": [216, 221], "faq": 216, "contact": 216, "impressum": 216, "histori": 216, "releas": [216, 218], "dataset": [216, 217], "mous": [216, 217, 218], "rat": 216, "enzym": [216, 217, 220], "substrat": [216, 217, 220], "complex": [216, 217, 220], "role": [216, 217], "inter": [216, 217], "cellular": [216, 217], "commun": [216, 217, 220], "explor": 216, "6": [216, 218], "7": [216, 217, 218, 221], "74": 216, "93": 216, "110": [216, 218], "11": [216, 218], "13": [216, 218], "14": [216, 218], "upcom": 216, "how": [216, 217], "navig": 216, "book": [216, 217], "introduct": 216, "save": [216, 217], "app": [216, 217], "definit": [216, 217, 220], "relationship": [216, 217], "pre": 216, "scientif": 216, "util": [216, 217, 220], "sanit": 216, "signal": [216, 221], "intercellular": [216, 220], "quantit": 216, "overview": 216, "intercel": [216, 217, 220, 221], "categori": [216, 220, 221], "gene": [216, 217, 220, 221], "pickl": [216, 217], "disabl": 216, "bel": [216, 217, 220], "export": [216, 217, 220], "cellphonedb": 216, "legaci": 216, "quickli": 216, "plai": 216, "our": [216, 217], "causal": [216, 221], "literatur": [216, 221], "packag": [217, 218], "omnipathr": [217, 218], "popular": 217, "versatil": [217, 218, 220], "150": [217, 218], "yourself": 217, "try": [217, 218], "client": [217, 218], "builder": 217, "peopl": [217, 218], "distribut": 217, "satisfi": 217, "realli": [217, 218], "veri": [217, 218, 221], "fresh": [217, 218], "version": [217, 218, 220], "etc": [217, 218, 220, 221], "pypi": [217, 218], "pip": 217, "git": 217, "github": [217, 218], "saezlab": 217, "guid": [217, 218], "experienc": 217, "pleas": [217, 218], "biologi": [217, 218], "well": [217, 218], "biolog": [217, 218], "languag": [217, 218], "100": [217, 218], "major": [217, 220, 221], "distinguish": 217, "overal": [217, 218], "higher": [217, 218], "core": [217, 218, 220], "downlad": 217, "applic": [217, 218], "server": [217, 218, 220, 221], "stand": 217, "alon": 217, "processor": 217, "biopax": [217, 220], "begin": 217, "primari": [217, 218], "aim": [217, 218], "fundament": [217, 218], "design": [217, 218], "principl": 217, "todai": 217, "expos": 217, "rich": [217, 218], "respons": [217, 218], "five": 217, "enz_sub": [217, 218, 221], "variant": [217, 218], "ppi": [217, 218], "howev": [217, 218], "often": [217, 218], "necessari": [217, 218], "get_db": [217, 218], "But": [217, 218], "come": [217, 218, 221], "With": 217, "easi": [217, 218], "db": [217, 218], "gb": [217, 218], "long": [217, 218], "prone": 217, "due": [217, 218], "interrupt": 217, "problemat": 217, "reason": [217, 218], "possibli": [217, 218], "anoth": [217, 218, 221], "sometim": [217, 218, 220, 221], "offlin": 217, "encount": 217, "fix": [217, 218, 220], "much": [217, 218, 220, 221], "faster": [217, 218], "still": [217, 218], "standalon": [217, 218], "script": [217, 218], "few": [217, 218, 220], "varieti": [217, 218, 221], "molecul": [217, 221], "secondari": [217, 218], "ac": [217, 218], "predefin": [217, 218], "input_format": [217, 218], "map_nam": [217, 218], "p00533": [217, 218, 221], "genesymbol": [217, 218, 221], "egfr": [217, 218, 221], "ortholog": [217, 218], "homologen": [217, 218, 220, 221], "ensembl": [217, 218], "10090": [217, 218, 221], "human": [217, 218, 221], "q01279": [217, 218], "support": [217, 218, 220], "complet": [217, 218, 220], "run": [217, 218, 221], "oldest": 217, "pyproject": 217, "toml": 217, "besid": [217, 218], "prefer": [217, 218], "privat": 217, "sensit": 217, "matter": [217, 218], "omnipathdb": [217, 218, 221], "gmail": 217, "develop": 217, "saez": 217, "lab": [217, 218], "d\u00e9ne": 217, "t\u00fcrei": 217, "sebastian": 217, "lobentanz": 217, "ahmet": 217, "rifaioglu": 217, "melih": 217, "darcan": 217, "erva": 217, "ulusoi": 217, "tennur": 217, "k\u0131l\u0131\u00e7": 217, "\u00f6mer": 217, "kaan": 217, "vural": 217, "volkan": 217, "atalai": 217, "olga": 217, "ivanova": 217, "nicol\u00e0": 217, "palacio": 217, "contribut": 217, "past": 217, "maintain": [217, 218], "francesco": 217, "ceccarelli": 217, "attila": 217, "g\u00e1bor": 217, "alberto": 217, "valdeoliva": 217, "michael": 217, "klein": 217, "fabian": 217, "bird": 217, "ey": 217, "view": 217, "recent": [217, 218], "16": 218, "17": 218, "18": 218, "19": 218, "20": 218, "21": 218, "ptm": [218, 220, 221], "bioconductor": 218, "furthermor": 218, "enjoi": 218, "almost": [218, 220], "unlimit": 218, "flexibl": 218, "tour": 218, "chanc": 218, "cover": 218, "hesit": 218, "ask": 218, "__version__": 218, "execut": 218, "0m": 218, "06": 218, "2022": 218, "03": 218, "39": 218, "high": 218, "easiest": 218, "henc": [218, 220, 221], "quick": 218, "lower": 218, "demand": 218, "34": 218, "27": 218, "lt": 218, "databasemanag": 218, "0x602fb851cd90": 218, "gt": 218, "tf_target": [218, 221], "small_molecul": 218, "tf_mirna": 218, "mirna_mrna": 218, "lncrna_mrna": 218, "offer": [218, 220], "strict": 218, "cu": 218, "83": 218, "02": 218, "7980": 218, "35551": 218, "1m": 218, "55": 218, "18558": 218, "94358": 218, "confid": [218, 221], "tft": 218, "2m": 218, "72": 218, "54": 218, "18986": 218, "326708": 218, "mi": 218, "28": 218, "1264": 218, "3288": 218, "tmi": 218, "41": 218, "1032": 218, "4960": 218, "lnc": 218, "33": 218, "243": 218, "217": 218, "inhibit": 218, "alloster": 218, "metabolit": [218, 220], "experiment": 218, "extend": 218, "futur": [218, 221], "smol": 218, "94": 218, "57": 218, "1980": 218, "3147": 218, "26": 218, "41426": 218, "co": 218, "28173": 218, "quit": 218, "43": 218, "60": 218, "36": 218, "5490653": 218, "50872": 218, "68": 218, "heavi": 218, "ic": 218, "37": 218, "301527": 218, "48570": 218, "biomed": 218, "troublesom": 218, "broken": 218, "daili": 218, "report": 218, "after": [218, 221], "lowercas": 218, "depod": 218, "cytosig": 218, "kind": [218, 221], "signor_interact": 218, "_interact": 218, "_enz_sub": 218, "_complex": 218, "_annot": 218, "intend": 218, "fulli": 218, "postfix": 218, "_raw": 218, "_map": 218, "relev": 218, "bring": 218, "state": 218, "suitabl": 218, "though": [218, 221], "observ": 218, "arbitrarili": 218, "straightforward": 218, "outsid": 218, "becaus": [218, 221], "signor_complex": 218, "intern": [218, 220], "intera": 218, "readi": 218, "complexaggreg": 218, "p23511_p25208_q13952": 218, "nfy": 218, "p68104_p85299_q6r327_q8tb45_q9bvc4": 218, "mtorc2": 218, "p42345_q8n122_q8tb45_q96b36_q9bvc4": 218, "mtorc1": 218, "p63208_q13616_q9y297": 218, "scf": 218, "betatrcp": 218, "q09472_q92793": 218, "cbp": 218, "p300": 218, "q09472_q92793_q92831": 218, "pcaf": 218, "q13485_q15796": 218, "smad2": [218, 221], "smad4": 218, "p84022_q13485": 218, "smad3": 218, "p05412_q13485": 218, "jun": 218, "q15796_q9hau4": 218, "smurf2": 218, "o15105_q01094_q13547": 218, "smad7": 218, "hdac1": 218, "e2f": 218, "p19838_q04206": 218, "nfkb": 218, "p65": 218, "p50": 218, "o14920_o15111": 218, "ik": 218, "1000": 218, "17699": 218, "readabl": 218, "52": 218, "signorinteract": 218, "o15530": 218, "source_isoform": 218, "target_isoform": 218, "source_typ": 218, "target_typ": 218, "mechan": 218, "phosphoryl": 218, "pubm": 218, "10455013": 218, "ptm_type": 218, "ptm_residu": 218, "ser396": 218, "ptm_motif": 218, "sssssshslsasdtg": 218, "q9nq66": 218, "chebi": 218, "18035": 218, "smallmolecul": 218, "quantiti": 218, "23880553": 218, "catalysi": 218, "p62136": 218, "o15169": 218, "down": 218, "dephosphoryl": 218, "17318175": 218, "ser77": 218, "yepegsasptppylk": 218, "sou": 218, "3285": 218, "signor_enzyme_substr": 218, "intermedi": 218, "easier": 218, "enzymesubstrateaggreg": 218, "58": 218, "typ": 218, "resnum": 218, "396": 218, "389": 218, "403": 218, "kinas": [218, 221], "resaa": 218, "motif": 218, "enzyme_isoform": 218, "substrate_isoform": 218, "77": 218, "70": 218, "84": 218, "final": 218, "signor_pathway_annot": 218, "practic": 218, "o14733": 218, "48": 218, "signorpathwai": 218, "tnf": 218, "toll": 218, "haven": 218, "mention": 218, "four": 218, "limit": 218, "signor_protein_famili": 218, "famili": 218, "too": 218, "own": [218, 220], "pf2": 218, "53": 218, "q9hbw0": 218, "q92633": 218, "q9uby5": 218, "90": 218, "min": 218, "awar": 218, "dozen": [218, 221], "sooner": 218, "later": 218, "happen": 218, "accid": 218, "especi": [218, 220], "alwai": 218, "recommend": 218, "remain": 218, "cache_delete_on": 218, "depod_enzyme_substr": 218, "07": 218, "cache_off": 218, "cache_print_on": 218, "found": 218, "dry_run_on": 218, "wrong": 218, "debug_on": 218, "curl_connect_timeout": 218, "establish": 218, "curl_extended_timeout": 218, "exception": 218, "curl_retri": 218, "enough": 218, "curl_timeout": 218, "360": 218, "stack": 218, "investig": 218, "difficult": 218, "preserve_on": 218, "depod_curl": 218, "0x6947386dc8b0": 218, "fileobj": 218, "bioss": 218, "uni": 218, "freiburg": 218, "de": 218, "depod_201405_human_phosphatas": 218, "mitab": 218, "_io": 218, "textiowrapp": 218, "home": 218, "dene": 218, "6a711369ecf9dcff8c5ed88996685b54": 218, "mode": 218, "iso": 218, "8859": 218, "okai": 218, "wether": 218, "successfulli": 218, "night": 218, "transient": 218, "disappear": 218, "perman": 218, "mayb": 218, "third": 218, "parti": 218, "lot": [218, 220], "09": 218, "notebook": 218, "pypath_log": 218, "s3e92": 218, "30": 218, "speci": [218, 220], "535b06d53a59e75bb693369bc5fdc556": 218, "plain": 218, "112963": 218, "verifi": 218, "certif": 218, "invalid": 218, "expir": 218, "why": 218, "softwar": 218, "encrypt": 218, "trust": 218, "And": [218, 221], "reach": [218, 219], "root": [218, 220], "global": 218, "everi": [218, 220], "browser": [218, 221], "program": 218, "correctli": 218, "duti": 218, "procedur": 218, "97": 218, "experi": 218, "scan": 218, "chain": 218, "cipher": 218, "libcurl": 218, "anaconda": 218, "java": 218, "mozilla": 218, "firefox": 218, "seriou": 218, "relat": [218, 221], "side": 218, "strong": 218, "think": 218, "easili": [218, 221], "rc": 218, "get_control": 218, "45": 218, "resourcecontrol": 218, "0x6cc25e25dcf0": 218, "cc": 218, "BY": 218, "sa": 218, "commerci": 218, "profit": 218, "47": 218, "matrixdb": 218, "49": 218, "yearusedreleas": 218, "2015": 218, "2009": 218, "2011": 218, "bioinformat": 218, "oxfordjourn": 218, "25": [218, 221], "690": 218, "nar": 218, "d321": 218, "suppl_1": 218, "d235": 218, "univ": 218, "lyon1": 218, "fr": 218, "omictool": 218, "tool": 218, "19147664": 218, "20852260": 218, "25378329": 218, "taxon": 218, "mammalia": 218, "extracellular": [218, 221], "were": 218, "uniprotkb": 218, "swiss": 218, "prot": 218, "bairoch": 218, "2005": 218, "partner": [218, 221], "repor": 218, "4479": 218, "197": 218, "collect_enzyme_substr": 218, "08": 218, "29": 218, "enzymesubstrateresourc": 218, "phosphoelm": 218, "dbptm": 218, "hprd": 218, "li2012": 218, "phosphosit": [218, 220, 221], "phosphonetwork": [218, 221], "mimp": 218, "protmapp": 218, "kea": 218, "202": 218, "input_method": 218, "id_type_enzym": 218, "51": 218, "phosphoelm_enzyme_substr": 218, "care": 218, "larger": 218, "netr": 218, "fit": 218, "concept": 218, "stimul": 218, "trip": 218, "networkresourc": 218, "activity_flow": 218, "spike": [218, 221], "signalink3": [218, 221], "guide2pharma": 218, "ca1": 218, "arn": 218, "nrf2": 218, "nrf2ome": 218, "macrophag": 218, "death": 218, "deathdomain": 218, "pdz": 218, "pdzbase": 218, "adhesom": 218, "icellnet": 218, "celltalkdb": 218, "1864": 218, "Such": 218, "6833": 218, "25607": 218, "enzyme_substr": 218, "04": 218, "05": 218, "38": 218, "7979": 218, "35550": 218, "simpli": 218, "44": 218, "8002": 218, "35748": 218, "older": 218, "mentin": 218, "focu": 218, "synonym": 218, "pathway_noref": 218, "pathway_al": 218, "ptm_noref": 218, "ptm_all": 218, "throughput": 218, "intact": 218, "biogrid": 218, "interaction_misc": 218, "constraint": 218, "unbias": 218, "interactom": 218, "screen": 218, "vidal": 218, "transcription_onebyon": 218, "tf": [218, 220, 221], "mirna_target": 218, "lncrna_protein": 218, "ligand_receptor": [218, 220], "pathwaycommon": [218, 220], "reaction": [218, 221], "guarante": 218, "moment": 218, "reaction_misc": 218, "small_molecule_protein": 218, "dict_kei": 218, "cellchatdb": 218, "connectomedb": 218, "talklr": 218, "cellink": 218, "scconnect": 218, "hpmr": 218, "ramilowski2015": 218, "lrdb": 218, "baccin2019": 218, "connectomedb2020": 218, "networkinput": 218, "analysi": [218, 220], "popul": 218, "warn": 218, "reload": 218, "v": 218, "trpc1": 218, "kcnma1": 218, "evid": [218, 220], "ppp3ca": 218, "calm2": 218, "calm3": 218, "calm1": 218, "casp1": 218, "casp4": 218, "cacna1c": 218, "cav1": 218, "ev": 218, "118492": 218, "sync": 218, "facilit": 218, "p48995": 218, "q12791": 218, "q08209": 218, "p0dp24": 218, "p0dp25": 218, "p0dp23": 218, "p29466": 218, "p49662": 218, "q13936": 218, "q03135": 218, "p56539": 218, "cav3": 218, "q14247": 218, "cttn": 218, "p14416": 218, "drd2": 218, "p11532": 218, "dmd": 218, "p11362": 218, "fgfr1": 218, "q02790": 218, "fkbp4": 218, "q86ym7": 218, "homer1": 218, "q9nsc5": 218, "homer3": 218, "q99750": 218, "mdfi": 218, "q14571": 218, "itpr2": 218, "q14573": 218, "itpr3": 218, "p29966": 218, "marck": 218, "q13255": 218, "grm1": 218, "p20591": 218, "mx1": 218, "p62166": 218, "ncs1": 218, "q96d31": 218, "orai1": 218, "q96sn7": 218, "orai2": 218, "q9brq5": 218, "orai3": 218, "p11171": 218, "epb41": 218, "p61586": 218, "rhoa": 218, "q9y225": 218, "rnf24": 218, "p21817": 218, "ryr1": 218, "p16615": 218, "atp2a2": 218, "q93084": 218, "atp2a3": 218, "p60880": 218, "snap25": 218, "q13586": 218, "sti": 218, "30573": 218, "egf": 218, "fantom5": 218, "cellsign": 218, "whole": 218, "ia": 218, "get_resource_nam": 218, "get_refer": 218, "50": 218, "10085134": 218, "10209155": 218, "10788520": 218, "12093292": 218, "12297050": 218, "12620237": 218, "12648462": 218, "15620700": 218, "16274239": 218, "17145710": 218, "19531499": 218, "20458382": 218, "21071413": 218, "23331499": 218, "3494473": 218, "6289330": 218, "8639530": 218, "get_direct": 218, "opposit": 218, "classifi": [218, 221], "exactli": [218, 221], "35": 218, "get_sign": 218, "get_": 218, "get_interaction_typ": 218, "_by_": 218, "references_by_resourc": 218, "40": 218, "get_interactions_posit": 218, "make_df": 218, "id_a": 218, "id_b": 218, "type_a": 218, "type_b": 218, "dmodel": 218, "44033": 218, "q14289": 218, "q9ulz3": 218, "iptmnet": 218, "44034": 218, "p54646": 218, "q9y2i7": 218, "44035": 218, "q9bxm7": 218, "q9y2n7": 218, "44036": 218, "p49137": 218, "q9y385": 218, "44037": 218, "q9uhc7": 218, "p04637": 218, "44038": 218, "row": [218, 221], "account": 218, "ambigu": 218, "unambigu": 218, "map_name0": 218, "gabarapl3": 218, "q9by60": 218, "drug": [218, 220], "shortcut": 218, "id_from_label": 218, "o75385": 218, "ulk1": [218, 221], "id_from_label0": 218, "certainli": 218, "q15796": 218, "latin": 218, "effici": 218, "q62432": 218, "8408": 218, "entrez": 218, "46": 218, "chain_map": 218, "get_mapp": 218, "by_id_typ": 218, "place": 218, "autumn": 218, "uniprotmap": 218, "uploadlist": 218, "outdat": 218, "inputs_format": 218, "uniprotlistmap": 218, "biomartmap": 218, "arraymap": 218, "promap": 218, "unichem": [218, 220], "unichemmap": 218, "filemap": 218, "mirbas": 218, "site": [218, 220], "instanti": 218, "fly": 218, "mapread": 218, "mappingt": 218, "mapper": 218, "dispatch": 218, "mapping_t": 218, "mappingtabledefinit": 218, "embl": 218, "input_class": 218, "syn": 218, "geneid": 218, "hgnc": 218, "refseqp": 218, "input_cl": 218, "22169": 218, "short": [218, 221], "clear": 218, "eas": 218, "ac_queri": 218, "ac_map": 218, "biomart_map": 218, "pro_map": 218, "array_map": 218, "idtyp": 218, "medchemexpress": 218, "actor": 218, "affi": 218, "affymetrix": 218, "agil": 218, "alzforum": 218, "alzforum_mut": 218, "araport": 218, "atla": [218, 221], "bindingdb": 218, "brenda": 218, "carotenoiddb": 218, "cgnc": 218, "chembl": [218, 220], "chemicalbook": 218, "clinicaltri": 218, "codelink": 218, "comptox": 218, "dailym": 218, "dailymed_old": 218, "py": 218, "6649": 218, "ensembl_hc": 218, "ensembl_typ": 218, "one2on": 218, "human_mouse_genesymbol": 218, "get_dict": 218, "get_df": 218, "micos13": 218, "fat4": 218, "rars2": 218, "zfp36l2": 218, "lamc1": 218, "24843": 218, "krtap4": 218, "gm40460": 218, "24844": 218, "gm45618": 218, "24845": 218, "gm4559": 218, "24846": 218, "igkv1or2": 218, "108": 218, "igkv20": 218, "101": 218, "24847": 218, "fpgt": 218, "tnni3k": 218, "22266": 218, "everywher": 218, "deal": 218, "english": 218, "hsapien": 218, "ensmebl": 218, "genu": 218, "hsa": 218, "kegg": 218, "ensure_ncbi_tax_id": 218, "sapien": 218, "homo": 218, "ensure_latin_nam": 218, "cow": 218, "bo": 218, "tauru": 218, "ensure_common_nam": 218, "erithacu": 218, "rubecula": 218, "european": 218, "robin": 218, "uniprot_taxid": 218, "unfortun": 218, "p53104": 218, "saccharomyc": 218, "cerevisia": 218, "divers": 218, "essenti": 218, "proteom": 218, "harbor": 218, "littl": 218, "unload": 218, "fast": 218, "consid": 218, "119": 218, "iuniprot": 218, "len": 218, "all_swissprot": 218, "all_trembl": 218, "3m": 218, "99": 218, "86440": 218, "17131": 218, "69300": 218, "124": 218, "valid_uniprot": 218, "a0a8d0h0c2": 218, "inde": 218, "125": 218, "is_uniprot": 218, "122": 218, "is_swissprot": 218, "match": [218, 221], "tag": 218, "126": 218, "protein_datasheet": 218, "egfr_human": 218, "1210": 218, "o00688": 218, "o00732": 218, "p06268": 218, "q14225": 218, "q68gs5": 218, "q92795": 218, "q9bzs2": 218, "q9gzx1": 218, "q9h2c9": 218, "q9h3c9": 218, "q9umd7": 218, "q9umd8": 218, "q9umg5": 218, "dt": 218, "jul": 218, "1986": 218, "nov": 218, "1997": 218, "oct": 218, "283": 218, "recnam": 218, "epiderm": 218, "growth": 218, "factor": [218, 221], "eco": 218, "0000305": 218, "ec": 218, "altnam": 218, "proto": 218, "oncogen": 218, "erbb": 218, "tyrosin": 218, "flag": 218, "precursor": 218, "gn": 218, "0000312": 218, "3236": 218, "erbb1": 218, "her1": 218, "o": 218, "oc": 218, "eukaryota": 218, "metazoa": 218, "chordata": 218, "craniata": 218, "vertebrata": 218, "euteleostomi": 218, "eutheria": 218, "euarchontoglir": 218, "primat": 218, "haplorrhini": 218, "catarrhini": 218, "hominida": 218, "ox": 218, "ncbi_taxid": 218, "rn": 218, "rp": 218, "nucleotid": 218, "isoform": [218, 221], "58080": 218, "131": 218, "egfr_histori": 218, "uniprot_histori": 218, "uniprotrecordhistori": 218, "entry_vers": 218, "sequence_vers": 218, "entry_nam": 218, "2022_04": 218, "replaced_bi": 218, "282": 218, "2022_03": 218, "281": 218, "2022_02": 218, "280": 218, "2022_01": 218, "279": 218, "2021_04": 218, "2021": 218, "278": 218, "50933": 218, "132": 218, "uniprot_recent_vers": 218, "133": 218, "uniprot_history_recent_datasheet": 218, "deploi": 218, "uniprot_data": 218, "parenthes": 218, "situat": 218, "uniprot_preprocess": 218, "clutter": 218, "135": 218, "transmembran": [218, 221], "p63120": 218, "peptidas": 218, "a2": 218, "herv": 218, "ii": 218, "k": 218, "hml": 218, "subfamili": 218, "q96ec8": 218, "yip1": 218, "q6zms4": 218, "krueppel": 218, "c2h2": 218, "zinc": 218, "finger": 218, "q8n8l2": 218, "q3mis6": 218, "q86uk7": 218, "znf598": 218, "q6p280": 218, "q969w1": 218, "dhhc": 218, "palmitoyltransferas": 218, "o14978": 218, "q15937": 218, "q9p2j8": 218, "q8iuh4": 218, "akr": 218, "zdhhc17": 218, "q9y2d9": 218, "q14588": 218, "q6xr72": 218, "cation": 218, "diffus": 218, "cdf": 218, "transport": 218, "tc": 218, "slc30a": 218, "p58557": 218, "endoribonucleas": 218, "ybei": 218, "q9y5a9": 218, "ythdf": 218, "ythdf2": 218, "q8n9l1": 218, "501768": 218, "cleaner": 218, "better": [218, 220, 221], "usabl": 218, "imperfect": 218, "job": 218, "badli": 218, "residu": 218, "fragment": 218, "strip": 218, "136": 218, "uniprot_taxonomi": 218, "p00521": 218, "abelson": 218, "murin": 218, "leukemia": 218, "viru": 218, "p03333": 218, "h8zm73": 218, "abi": 218, "balsamea": 218, "balsam": 218, "fir": 218, "pinu": 218, "h8zm71": 218, "q9mv51": 218, "firma": 218, "momi": 218, "o81086": 218, "grandi": 218, "grand": 218, "o24474": 218, "o24475": 218, "o64404": 218, "o64405": 218, "q948z0": 218, "q9m7d1": 218, "q9m7d0": 218, "o22340": 218, "q9m7c9": 218, "q5k3v1": 218, "homolepi": 218, "nikko": 218, "p21715": 218, "abrothrix": 218, "jelskii": 218, "akodon": 218, "jelski": 218, "altiplano": 218, "p11140": 218, "abru": 218, "56985": 218, "139": 218, "uniprot_ncbi_taxids_2": 218, "648330": 218, "ncbi_id": 218, "aed": 218, "albopictu": 218, "densoviru": 218, "isol": 218, "boublik": 218, "1994": 218, "aaldnv": 218, "latin_synonym": 218, "10804": 218, "adeno": 218, "aav": 218, "648242": 218, "srivastava": 218, "1982": 218, "118452": 218, "abacion": 218, "magnum": 218, "milliped": 218, "72259": 218, "abaei": 218, "nicipp": 218, "sleepi": 218, "orang": 218, "butterfli": 218, "eurema": 218, "102642": 218, "abax": 218, "parallelepipedu": 218, "ground": 218, "beetl": 218, "392897": 218, "abalist": 218, "stellari": 218, "starri": 218, "triggerfish": 218, "balist": 218, "75332": 218, "abbottina": 218, "rivulari": 218, "chines": 218, "gudgeon": 218, "gobio": 218, "515833": 218, "abdopu": 218, "aculeatu": 218, "engl": 218, "118050": 218, "140": 218, "uniprot_loc": 218, "uniprotloc": 218, "golgi": 218, "apparatu": 218, "membran": [218, 221], "multi": [218, 220], "nucleu": 218, "q15916": 218, "endoplasm": 218, "reticulum": 218, "q66k41": 218, "q8nd82": 218, "q9np64": 218, "nucleolu": 218, "143466": 218, "141": 218, "uniprot_keyword": 218, "uniprotkeyword": 218, "aspartyl": 218, "proteas": 218, "autocatalyt": 218, "cleavag": 218, "erv": 218, "hydrolas": 218, "ribosom": 218, "frameshift": 218, "transpos": 218, "acetyl": [218, 221], "splice": 218, "phosphoprotein": 218, "helix": 218, "metal": 218, "bind": 218, "unipro": 218, "445111": 218, "142": 218, "uniprot_famili": 218, "uniprotfamili": 218, "77892": 218, "143": 218, "uniprot_tissu": 218, "uniprottissu": 218, "brain": 218, "wide": 218, "undefin": 218, "colon": 218, "heart": 218, "kidnei": 218, "leukocyt": 218, "liver": 218, "lung": 218, "ovari": 218, "pancrea": 218, "placenta": 218, "prostat": 218, "skelet": 218, "muscl": [218, 221], "intestin": 218, "spleen": 218, "testi": 218, "318790": 218, "144": 218, "uniprot_topologi": 218, "uniprottopologi": 218, "topologi": [218, 221], "cytoplasm": 218, "137": 218, "146": 218, "206": 218, "212": 218, "lumen": 218, "106": 218, "115": 218, "168": 218, "184": 218, "234": 218, "236": 218, "85": 218, "105": 218, "116": 218, "147": 218, "167": 218, "185": 218, "205": 218, "213": 218, "233": 218, "138": 218, "198": 218, "288": 218, "377": 218, "220": 218, "544230": 218, "bulk": 218, "153": 218, "q14457": 218, "becn1": 218, "154": 218, "156": 218, "weight": 218, "subcellular_loc": 218, "112631": 218, "1050": 218, "cytosol": 218, "preautophagosom": 218, "starvat": 218, "puncat": 218, "sequest": 218, "portion": 218, "autophagosom": 218, "mepgrggtetvgkfefsrkdlighgafavvfkgrhrekhdlevavkcinkknlaksqtllgkeikilkelkhenivalydfqemansvylvmeycnggdladylhamrtlsedtirlflqqiagamrllhskgiihrdlkpqnillsnpagrranpnsirvkiadfgfarylqsnmmaatlcgspmymapevimsqhydgkadlwsigtivyqcltgkapfqasspqdlrlfyeknktlvptipretsaplrqlllallqrnhkdrmdfdeffhhpfldaspsvrksppvpvpsypssgsgssssssstshlasppslgemqqlqktlaspadtagflhssrdsggskdsscdtddfvmvpaqfpgdlvaeapsakpppdslmcsgsslvasagleshgrtpspsppcssspspsgragpfsssrcgasvpipvptqvqnyqriernlqsptqfqtprssairrsgstsplgfaraspsppahaehggvlarkmslgggrpytpspqvgtiperpgwsgtpspqgaemrggrsprpgssapehsprtsglgcrlhsapnlsdlhvvrpklpkpptdplgavfsppqasppqpshglqscrnlrgspklpdflqrnplppilgsptkavpsfdfpktpssqnllallarqgvvmtpprnrtlpdlsevgpfhgqplgpglrpgedpkgpfgrsfstsrltdlllkaafgtqapdpgsteslqek": 218, "1329": 218, "ineffici": 218, "hand": 218, "158": 218, "134277": 218, "51896": 218, "450": 218, "159": 218, "print_featur": 218, "No": 218, "There": 218, "character": 218, "160": 218, "function_o": 218, "subcellula": 218, "r_genecard": 218, "r_locat": 218, "3d": 218, "alternativ": 218, "20254": 218, "unless": 218, "uniprot_cleanup": 218, "exploit": 218, "162": 218, "q9uq28": 218, "8m": 218, "81": 218, "acquir": 218, "mtor": [218, 221], "akt1": 218, "s473": 218, "sparser": 218, "t450": 218, "t308": 218, "closer": 218, "domainmotif": 218, "shown": 218, "e_ptm": 218, "domain": [218, 221], "p31749": 218, "473": 218, "14761976": 218, "15047712": 218, "15364915": 218, "15718470": 218, "15899889": 218, "16221682": 218, "17013611": 218, "19844585": 218, "20333297": 218, "20489726": 218, "21157483": 218, "21592956": 218, "23006971": 218, "8978681": 218, "9736715": 218, "dabas": 218, "enzyme_genesymbol": 218, "substrate_genesymbol": 218, "residue_typ": 218, "residue_offset": 218, "modif": 218, "curation_effort": 218, "p63104": 218, "ywhaz": 218, "hprd_mimp": 218, "11956222": 218, "12861023": 218, "phosphosite_mimp": 218, "phosp": 218, "15071501": 218, "p45983": 218, "mapk8": 218, "phosph": 218, "15696159": 218, "p06493": 218, "cdk1": 218, "712": 218, "rea": 218, "15525677": 218, "18220": 218, "2171679": 218, "41421": 218, "p29597": 218, "tyk2": 218, "p51692": 218, "stat5b": 218, "699": 218, "10830280": 218, "11751923": 218, "12411494": 218, "41422": 218, "q06418": 218, "tyro3": 218, "p19174": 218, "plcg1": 218, "771": 218, "12601080": 218, "15144186": 218, "15592455": 218, "41423": 218, "q9h4a3": 218, "wnk1": 218, "q8tax0": 218, "osr1": 218, "18270262": 218, "41424": 218, "q96j92": 218, "wnk4": 218, "335": 218, "15883153": 218, "41425": 218, "q9nyl2": 218, "map3k20": 218, "q92903": 218, "cds1": 218, "10973490": 218, "ve": 218, "never": 218, "nice": 218, "power": 218, "believ": 218, "ever": 218, "topic": 218, "186": 218, "seqc": 218, "sequencecontain": 218, "preload_seq": 218, "get_seq": 218, "get_region": 218, "tfiirclqwt": 218, "187": 218, "human_proteom": 218, "swissprot_seq": 218, "0x689900d45cc0": 218, "0x689908ea8f70": 218, "0x689908eaa4a0": 218, "0x6899223538b0": 218, "0x689922353c70": 218, "o60384": 218, "0x689922350730": 218, "0x689922353310": 218, "0x689922353760": 218, "0x689922353190": 218, "0x689922350d90": 218, "0x689922353220": 218, "p61129": 218, "0x689922353370": 218, "0x6899223534f0": 218, "0x689922350c70": 218, "0x689922351450": 218, "0x689922353910": 218, "0x6899223502b0": 218, "p98182": 218, "0x689922350280": 218, "0x68992235": 218, "53045": 218, "191": 218, "findal": 218, "ygct": 218, "seqlookup": 218, "625": 218, "annotationt": 218, "3788067": 218, "51636": 218, "78": 218, "cpad": 218, "2308": 218, "1358": 218, "annotationbas": 218, "get_nam": 218, "regulator_typ": 218, "effect_on_pathwai": 218, "effect_on_canc": 218, "effect_on_cancer_outcom": 218, "cancer": 218, "pathway_categori": 218, "get_valu": 218, "acut": 218, "lymphoblast": 218, "myeloid": 218, "aml": 218, "basal": 218, "carcinoma": 218, "bladder": 218, "breast": 218, "cervic": 218, "cholangiocarcinoma": 218, "choriocarcinoma": 218, "chronic": 218, "lymphocyt": 218, "cll": 218, "cml": 218, "colorect": 218, "endometri": 218, "esophag": 218, "ew": 218, "sarcoma": 218, "gallbladd": 218, "gastric": 218, "glioma": 218, "hepatocellular": 218, "hodgkin": 218, "lymphoma": 218, "infantil": 218, "hemangioma": 218, "laryng": 218, "malign": 218, "melanoma": 218, "pleural": 218, "mesothelioma": 218, "mantl": 218, "myeloma": 218, "nasopharyng": 218, "neuroblastoma": 218, "oral": 218, "osteosarcoma": 218, "ovarian": 218, "pancreat": 218, "pituitari": 218, "adenoma": 218, "renal": 218, "squamou": 218, "synovi": 218, "testicular": 218, "thyroid": 218, "a6ndv4": 218, "o14745": 218, "o14862": 218, "o15169_p25054": 218, "o94813": 218, "o94953": 218, "p06733": 218, "glucos": 218, "p11166": 218, "p25054": 218, "p40261": 218, "p49327": 218, "p54687": 218, "pten": 218, "phosphatas": 218, "p60484": 218, "q01973": 218, "q12888": 218, "q13620": 218, "q96cx2": 218, "q99558": 218, "mimat0000069": 218, "mimat0000089": 218, "mimat0000093": 218, "mimat0000262": 218, "mimat0000274": 218, "mimat0000422": 218, "mimat0000427": 218, "mimat0000437": 218, "mimat0000449": 218, "mimat0000455": 218, "mimat0000460": 218, "mimat0000461": 218, "mimat0000617": 218, "mimat0003266": 218, "mimat0003320": 218, "o75473": 218, "o75888": 218, "o76041": 218, "p06756": 218, "p13631": 218, "p22676": 218, "p25791": 218, "p546": 218, "1279": 218, "usual": 218, "215": 218, "celltypist": 218, "927": 218, "integrin": 218, "62": 218, "cellcellinteract": 218, "5544": 218, "panglaodb": 218, "8479": 218, "4813": 218, "lambert2018": 218, "3281": 218, "3277": 218, "cancersea": 218, "2515": 218, "1992": 218, "phobiu": 218, "35382": 218, "go_intercel": 218, "48799": 218, "18377": 218, "18127": 218, "15903": 218, "surfaceom": 218, "3558": 218, "matrisom": 218, "1514": 218, "hpa_secretom": 218, "3568": 218, "1748": 218, "1695": 218, "annotati": 218, "5842": 218, "exempl": 218, "mainclass": 218, "subclass": 218, "subsubclass": 218, "collagen": 218, "ecm": [218, 221], "glycoprotein": 218, "affili": 218, "proteoglycan": 218, "get_subset": 218, "56": 218, "a6nmz7": 218, "a8tx70": 218, "b4dz39": 218, "homotrim": 218, "p02452": 218, "ht_dm_cluster278": 218, "p02452_p02462_p08572_p29400_p53420_q01955_q02388_q14031_q17rw2_q8nfw1": 218, "trimer": 218, "p02452_p08123": 218, "p02458": 218, "xi": 218, "p02458_p12107_p13942": 218, "p02458_p20908_p25067": 218, "p02458_p20908_p25067_p29400": 218, "p02458_p25067_p29400": 218, "iii": 218, "p02461": 218, "p02462": 218, "iv": 218, "p02462_p08572": 218, "p05997_p12107": 218, "p05997_p12107_p20908": 218, "p05997_p20908": 218, "p05997_p20908_p25940": 218, "p08572": 218, "p12109_p12110": 218, "3072": 218, "membership": 218, "signalink": [218, 221], "netpath": 218, "protein_sourc": 218, "signalinkpathwai": 218, "keggpathwai": 218, "netpathpathwai": 218, "complex_sourc": 218, "28745": 218, "6762": 218, "arrai": 218, "all_annot": 218, "jak": 218, "stat": 218, "actin": 218, "cytoskeleton": 218, "oxytocin": 218, "phospholipas": 218, "inhibitor": 218, "resist": 218, "papillomaviru": 218, "infect": 218, "central": 218, "carbon": 218, "metabol": 218, "endocytosi": 218, "cholin": 218, "parathyroid": 218, "hormon": 218, "synthesi": 218, "2540": 218, "record_id": [218, 221], "q16181": 218, "sept7": 218, "upregul": 218, "migrat": 218, "14396": 218, "p30990": 218, "nt": 218, "2306": 218, "14397": 218, "2307": 218, "14398": 218, "erk": 218, "14399": 218, "14400": 218, "14401": 218, "convent": 218, "tidyvers": 218, "tidyr": [218, 221], "pivot_wid": 218, "unintuit": 218, "index_col": 218, "axi": 218, "set_index": 218, "unstack": 218, "droplevel": 218, "reset_index": 218, "mimat0000431": 218, "mir": 218, "suppress": 218, "tumor": 218, "invas": 218, "adam10": 218, "mediat": 218, "notch1": [218, 221], "notch": 218, "mimat0005886": 218, "1297": 218, "prolifer": 218, "aeg1": 218, "wnt": 218, "q9up65": 218, "pla2g4c": 218, "induc": 218, "chemotaxi": 218, "downregul": 218, "akt": 218, "pi3k": 218, "q92600": 218, "cnot9": 218, "2303": 218, "p16422": 218, "epcam": 218, "2304": 218, "q9y6y0": 218, "ivns1abp": 218, "2305": 218, "kctd12": 218, "beta": 218, "catenin": 218, "goe": 218, "customannot": 218, "anyon": 218, "intercellannot": 218, "310033": 218, "43617": 218, "intercell_annot": 218, "annot_combined_class": 218, "revis": 218, "exclud": 218, "understand": 218, "parent": 218, "composit": [218, 221], "tgf": 218, "aspect": [218, 221], "plasma": [218, 221], "paper": [218, 221], "annotdefkei": 218, "annotationgroup": 218, "5150": 218, "5760": 218, "7041": 218, "transmembrane_predict": 218, "6444": 218, "transmembrane_phobiu": 218, "almen2009": 218, "2072": 218, "transmembrane_sosui": 218, "1663": 218, "tran": 218, "143945": 218, "behav": 218, "gaba_receptor": 218, "gaba": 218, "a8mpy1": 218, "gabra1": 218, "gabrb2": 218, "gabrd": 218, "o14764_p14867_p47870": 218, "delta": 218, "o14764_p28472_p48169": 218, "o14764_p28472_q16445": 218, "o14764_p47870_p48169": 218, "o14764_p47870_q16445": 218, "gabbr1": 218, "gabbr2": 218, "o75899_q9ubs5": 218, "p14867": 218, "gamma": 218, "p14867_p18507_p28472": 218, "gabrg2": 218, "p14867_p18507_p47870": 218, "p18507_p28472_p31644": 218, "p18507_p28472_p34903": 218, "p18507_p28472_p47869": 218, "p18507_p28472_q16445": 218, "p18507_q8n1c3": 218, "1368": 218, "register_network": 218, "statist": 218, "counts_df": 218, "consensus_scor": 218, "transmitt": [218, 221], "receiv": [218, 221], "plasma_membrane_transmembran": 218, "plasma_membrane_peripher": 218, "n_uniprot": 218, "resource_specif": [218, 221], "1120": 218, "parin_adhesion_regul": 218, "intracellular_intercellular_rel": 218, "1121": 218, "plakophilin_adhesion_regul": 218, "1122": 218, "actin_regulation_adhesom": 218, "1123": 218, "adhesion_cytoskeleton_adaptor": 218, "118": 218, "1124": 218, "291": 218, "1125": 218, "q96jp9": 218, "cdhr1": 218, "q9p126": 218, "clec1b": 218, "q13585": 218, "gpr50": 218, "q8n9i0": 218, "syt2": 218, "o43614": 218, "hcrtr2": 218, "a6njy1": 218, "slc9b1p1": 218, "q5ri15": 218, "cox20": 218, "q13948": 218, "cux1": 218, "q8ngk4": 218, "or52k1": 218, "q8iys2": 218, "kiaa2013": 218, "neurotensin": 218, "recom": 218, "79": 218, "o95665": 218, "ntsr2": 218, "410": 218, "45385": 218, "neurotensi": 218, "tr": 218, "idecapepti": 218, "disulfid": 218, "7598": 218, "tree": [218, 220], "geneontologi": 218, "goannot": 218, "term": 218, "product": 218, "goa": 218, "0x689946b55570": 218, "82": 218, "0x68991cdc9b40": 218, "NOT": 218, "extern": 218, "region": 218, "channel": [218, 221], "p21333": 218, "p80108": 218, "p62258": 218, "q9nrx4": 218, "p54710": 218, "q8ner1": 218, "p01303": 218, "get_all_descend": 218, "0005576": 218, "0001507": 218, "0001527": 218, "0003351": 218, "0003355": 218, "0005201": 218, "0005577": 218, "0005582": 218, "0005583": 218, "0005584": 218, "0005585": 218, "0005586": 218, "0005587": 218, "0005588": 218, "0005590": 218, "0005591": 218, "0005592": 218, "0005595": 218, "0005596": 218, "0005599": 218, "0005601": 218, "0005602": 218, "0005604": 218, "0005606": 218, "0005607": 218, "0005608": 218, "0005609": 218, "0005610": 218, "0005611": 218, "0005612": 218, "0005614": 218, "0005615": 218, "0005616": 218, "0006858": 218, "0006859": 218, "0006860": 218, "0009519": 218, "0010367": 218, "0016914": 218, "0016942": 218, "0020003": 218, "0020004": 218, "0020005": 218, "0020006": 218, "0030020": 218, "0030021": 218, "0030023": 218, "0030197": 218, "0030345": 218, "0030934": 218, "0030935": 218, "0030938": 218, "0031012": 218, "0031395": 218, "0032311": 218, "0032579": 218, "0033165": 218, "0033166": 218, "0034358": 218, "0034359": 218, "0034360": 218, "0034361": 218, "0034362": 218, "0034363": 218, "0034364": 218, "0034365": 218, "00343": 218, "3104": 218, "redund": 218, "stoichiometri": 218, "homomultim": 218, "update_index": 218, "91": 218, "p42345": [218, 221], "o00141_o15530_o75879_p23443_p34931_p42345_q6r327_q8n122_q9bpz7_q9bvc4_q9h672": 218, "o00141_o15530_p07900_p23443_p31749_p31751_p42345_p78527_q05513_q05655_q6r327_q8n122_q9bpz7_q9bvc4": 218, "o00141_o15530_p0cg47_p0cg48_p23443_p42345_q15118_q6r327_q8n122_q96br1_q9bpz7_q9bvc4": 218, "o00141_o15530_p23443_p42345_q15118_q6r327_q8n122_q96br1_q96j02_q9bpz7_q9bvc4": 218, "o00141_o75879_p0cg48_p23443_p34931_p42345_p62753_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 218, "o00141_p0cg48_p23443_p36894_p42345_p62942_p68106_q15427_q6r327_q8n122_q9bpz7_q9bvc4": 218, "o00141_p0cg48_p23443_p42345_p46781_p62753_q6r327_q8n122_q96kq7_q9bpz7_q9bvc4_q9ny26": 218, "o00141_p0cg48_p23443_p42345_p62753_p62942_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 218, "o00141_p0cg48_p23443_p42345_p62753_q15172_q6r327_q8iw41_q9bpz7_q9bvc4_q9h672": 218, "o00141_p0cg48_p23443_p42345_p62753_q6r327_q70z35_q8n122_q8tcu6_q9bpz7": 218, "5348": 218, "alphabet": 218, "sort": [218, 220], "despit": [218, 220], "fact": 218, "cplex": 218, "98": 218, "q92793": 218, "q09472": 218, "components_genesymbol": 218, "nfya_nfyb_nfyc": 218, "corum": [218, 221], "compleat": 218, "complexport": 218, "hu": 218, "15243141": 218, "14755292": 218, "9372932": 218, "c1": 218, "4478": 218, "hc1449": 218, "deptor_eef1a1_mlst8_prr5_rictor": 218, "c2": 218, "akt1s1_deptor_mlst8_mtor_rptor": 218, "c3": 218, "btrc_cul1_skp1": 218, "9990852": 218, "c5": 218, "227": 218, "hc757": 218, "crebbp_ep300": 218, "c6": 218, "28168": 218, "npnt": 218, "q5szk8_q6uxi9_q86xx4": 218, "fras1_frem2_npnt": 218, "28169": 218, "nrp1_nrp2": 218, "o14786_o60462_q9y4d7": 218, "nrp1_nrp2_plxnd1": 218, "28170": 218, "nrp2_plxna2": 218, "o60462_o75051": 218, "28171": 218, "nrp2_plxna4": 218, "o60462_q9hcm2": 218, "28172": 218, "ptch2_smo": 218, "q99835_q9y6c5": 218, "longer": 218, "half": 218, "good": 218, "reli": 218, "save_to_pickl": 218, "myannot": 218, "pickle_fil": 218, "complexdb": 218, "mycomplex": 218, "char": 218, "xxxxx": 218, "grow": 218, "ten": 218, "thousand": 218, "l0n17": 218, "disclaim": 218, "annoi": 218, "research": 218, "educ": 218, "credit": 218, "publish": 218, "gnu": 218, "less": 218, "104": 218, "prioriti": 218, "threshold": 218, "everyth": 218, "107": 218, "si": 218, "uniroma2": 218, "download_complex": 218, "d7b8673e83e43a01c533f9de5a2b04b9": 218, "1046": 218, "creation": 218, "builtin": 218, "shell": 218, "dev": 218, "null": 218, "devnul": 218, "notic": 218, "109": 218, "greet": 218, "inherit": 218, "childoflogg": 218, "child": 218, "say_someth": 218, "_log": 218, "anywher": 218, "111": 218, "_logger": 218, "mylogg": 218, "strai": 218, "flood": 218, "112": 218, "hasn": 218, "thoroughli": 218, "scai": 218, "fraunhof": 218, "captur": 218, "span": 218, "rang": 218, "init_network": 218, "ptmaggreg": 218, "belgraph": 218, "bel_graph": 218, "summar": 218, "export_relationship": 218, "omnipath_pathwai": 218, "fp": 218, "bel_str": 218, "333": 218, "infer": 218, "network_expand_complex": 218, "interaction_input": 218, "singnalink": 218, "interaction_datafram": 218, "peripher": [218, 221], "protein_datafram": 218, "2019": 218, "soon": 218, "along": 218, "load_omnipath": 218, "comment": 218, "1h": 218, "approx": 218, "entir": 218, "sai": 218, "advantag": 218, "worri": 218, "neither": 218, "network1": 218, "entreza": 218, "entrezb": 218, "1950": 218, "1956": 218, "5290": 218, "207": 218, "2932": 218, "network2": 218, "sif": [218, 220], "pik3ca": 218, "sos1": 218, "rac1": 218, "map3k1": 218, "hra": 218, "gsk3b": 218, "iinput_format": 218, "input1": 218, "readset": 218, "egf1": 218, "input2": 218, "egf2": 218, "ecount": 218, "vcount": 218, "dgraph": 218, "3241": 218, "dir": 218, "agre": 218, "p17252": 218, "q15139": 218, "stimulatori": 218, "revers": 218, "get_dir": 218, "inhibitori": 218, "is_inhibit": 218, "potenti": 218, "contradict": 218, "rid": 218, "consensu": 218, "consensus_edg": 218, "helper": 218, "esr1": 218, "plural": 218, "gss": 218, "atg16l2": 218, "mix": [218, 221], "could": 218, "affect": 218, "gs_stimulated_bi": 218, "_namedvertexseq": 218, "seri": 218, "bit": 218, "contraintuit": 218, "gs_stimul": 218, "affected_bi": 218, "similari": 218, "inhibited_bi": 218, "gs_": 218, "up_": 218, "neighbor": 218, "neighborhood": 218, "indirect": 218, "increas": 218, "rapidli": 218, "atg3": [218, 221], "get_edg": 218, "map1lc3b": [218, 221], "sqstm1": [218, 221], "pmid": 218, "refs_by_sourc": 218, "abil": 218, "egf_network": 218, "777777": 218, "97be73": 218, "ffffff": 218, "bug": 218, "ipython": 218, "visibl": 218, "inlin": 218, "120": 218, "imag": 218, "click": 219, "summari": 220, "changelog": 220, "improv": 220, "remot": 220, "partial": 220, "pyreact": 220, "biopaxread": 220, "rule": [220, 221], "figur": 220, "manuscript": 220, "workflow": 220, "mysql": 220, "mysql_connect": 220, "python3": 220, "orthologi": 220, "regulatori": 220, "mrna": [220, 221], "websrvtab": 220, "dorothea": [220, 221], "dataio": 220, "docstr": 220, "focus": 220, "rewritten": 220, "workaround": 220, "terribl": 220, "reflist": 220, "becam": 220, "over": 220, "paremet": 220, "mandatori": [220, 221], "reorgan": 220, "redesign": 220, "repositori": 220, "src": 220, "yml": 220, "pathogen": 220, "compound": 220, "rna": 220, "neo4j": 220, "backend": 220, "biocyph": 220, "dlmanag": 220, "protocol": 221, "wget": 221, "whatev": 221, "recogn": 221, "webserv": 221, "pathwayextra": 221, "optimum": 221, "coverag": 221, "qualiti": 221, "activ": 221, "flow": 221, "kinaseextra": 221, "ligrecextra": 221, "ligand": 221, "receptor": 221, "mirnatarget": 221, "curat": 221, "interacion": 221, "rodent": 221, "homolog": 221, "smaller": 221, "counterpart": 221, "omic": 221, "regul": 221, "highest": 221, "dorothea_level": 221, "regulon": 221, "10116": 221, "arget": 221, "source_target": 221, "atg7": 221, "atg4b": 221, "map1lc3a": 221, "map1lc3c": 221, "q9h0r8": 221, "gabarap": 221, "gabarapl2": 221, "appear": 221, "fyn": 221, "ubiquitin": 221, "ens_sub": 221, "phosphosite_noref": 221, "000": 221, "hearth": 221, "dplyr": 221, "signalink_pathwai": 221, "bmp7": 221, "hpa_tissu": 221, "funtion": 221, "ion": 221, "interleukin": 221, "deliv": 221, "exact": 221, "atg4a": 221, "bmp8b": 221, "intuit": 221, "repli": 221}, "objects": {"": [[0, 0, 0, "-", "pypath"]], "pypath": [[1, 0, 0, "-", "core"], [6, 0, 0, "-", "data"], [7, 3, 1, "", "disclaimer"], [8, 3, 1, "", "info"], [9, 0, 0, "-", "inputs"], [33, 0, 0, "-", "internals"], [53, 0, 0, "-", "legacy"], [57, 3, 1, "", "log"], [58, 0, 0, "-", "share"], [188, 0, 0, "-", "utils"], [193, 0, 0, "-", "visual"]], "pypath.core": [[2, 0, 0, "-", "attrs"], [4, 0, 0, "-", "common"]], "pypath.core.attrs": [[3, 1, 1, "", "AttributeHandler"]], "pypath.core.attrs.AttributeHandler": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "serialize"], [3, 2, 1, "", "update_attrs"]], "pypath.core.common": [[5, 3, 1, "", "filter_network_df"]], "pypath.inputs": [[10, 0, 0, "-", "cell"], [12, 0, 0, "-", "common"], [19, 0, 0, "-", "credentials"], [21, 0, 0, "-", "ebi"], [23, 0, 0, "-", "embopress"], [25, 3, 1, "", "get_method"], [26, 0, 0, "-", "main"], [27, 0, 0, "-", "mitab"], [30, 0, 0, "-", "rdata"], [31, 0, 0, "-", "science"]], "pypath.inputs.cell": [[11, 3, 1, "", "cell_supplementary"]], "pypath.inputs.common": [[13, 3, 1, "", "csv_sep_change"], [14, 3, 1, "", "glom_fields"], [15, 3, 1, "", "json_extract"], [16, 3, 1, "", "json_read"], [17, 3, 1, "", "read_table"], [18, 3, 1, "", "read_xls"]], "pypath.inputs.credentials": [[20, 3, 1, "", "credentials"]], "pypath.inputs.ebi": [[22, 3, 1, "", "ebi_rest"]], "pypath.inputs.embopress": [[24, 3, 1, "", "embopress_supplementary"]], "pypath.inputs.mitab": [[28, 3, 1, "", "mitab_field_list"], [29, 3, 1, "", "mitab_field_uniprot"]], "pypath.inputs.science": [[32, 3, 1, "", "science_download"]], "pypath.internals": [[34, 0, 0, "-", "input_formats"], [46, 0, 0, "-", "license"], [52, 0, 0, "-", "maps"]], "pypath.internals.input_formats": [[35, 1, 1, "", "ArrayMapping"], [36, 1, 1, "", "BiomartMapping"], [37, 1, 1, "", "FileMapping"], [38, 1, 1, "", "MappingInput"], [39, 1, 1, "", "NetworkInput"], [40, 1, 1, "", "PickleMapping"], [41, 1, 1, "", "ProMapping"], [42, 1, 1, "", "ReadList"], [43, 1, 1, "", "UnichemMapping"], [44, 1, 1, "", "UniprotListMapping"], [45, 1, 1, "", "UniprotMapping"]], "pypath.internals.input_formats.ArrayMapping": [[35, 2, 1, "", "__init__"]], "pypath.internals.input_formats.BiomartMapping": [[36, 2, 1, "", "__init__"]], "pypath.internals.input_formats.FileMapping": [[37, 2, 1, "", "__init__"]], "pypath.internals.input_formats.MappingInput": [[38, 2, 1, "", "__init__"]], "pypath.internals.input_formats.NetworkInput": [[39, 2, 1, "", "__init__"]], "pypath.internals.input_formats.PickleMapping": [[40, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ProMapping": [[41, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ReadList": [[42, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UnichemMapping": [[43, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotListMapping": [[44, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotMapping": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "resource_id_type"]], "pypath.internals.license": [[47, 1, 1, "", "License"], [48, 1, 1, "", "LicenseAttrib"], [49, 1, 1, "", "LicenseFeature"], [50, 1, 1, "", "LicensePurpose"], [51, 1, 1, "", "LicenseSharing"]], "pypath.internals.license.License": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "enables"]], "pypath.internals.license.LicenseAttrib": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "check_level"], [48, 2, 1, "", "int_to_level"], [48, 2, 1, "", "level_to_int"], [48, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseFeature": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "check_level"], [49, 2, 1, "", "int_to_level"], [49, 2, 1, "", "level_to_int"], [49, 2, 1, "", "to_int"]], "pypath.internals.license.LicensePurpose": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "check_level"], [50, 2, 1, "", "int_to_level"], [50, 2, 1, "", "level_to_int"], [50, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseSharing": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "check_level"], [51, 2, 1, "", "int_to_level"], [51, 2, 1, "", "level_to_int"], [51, 2, 1, "", "to_int"]], "pypath.legacy": [[54, 0, 0, "-", "db_categories"]], "pypath.legacy.db_categories": [[55, 3, 1, "", "get_categories"], [56, 3, 1, "", "get_category"]], "pypath.share": [[59, 0, 0, "-", "cache"], [62, 0, 0, "-", "common"], [154, 0, 0, "-", "constants"], [155, 0, 0, "-", "curl"], [172, 0, 0, "-", "log"], [175, 0, 0, "-", "progress"], [177, 0, 0, "-", "session"], [183, 0, 0, "-", "settings"]], "pypath.share.cache": [[60, 3, 1, "", "cache_item"], [61, 3, 1, "", "get_cachedir"]], "pypath.share.common": [[63, 3, 1, "", "add_to_list"], [64, 3, 1, "", "add_to_set"], [65, 3, 1, "", "at_least_in"], [66, 3, 1, "", "clean_dict"], [67, 3, 1, "", "combine_attrs"], [68, 3, 1, "", "console"], [69, 3, 1, "", "decode"], [70, 3, 1, "", "del_empty"], [71, 3, 1, "", "df_memory_usage"], [72, 3, 1, "", "dict_collapse_keys"], [73, 3, 1, "", "dict_counts"], [74, 3, 1, "", "dict_diff"], [75, 3, 1, "", "dict_expand_keys"], [76, 3, 1, "", "dict_percent"], [77, 3, 1, "", "dict_set_path"], [78, 3, 1, "", "dict_set_percent"], [79, 3, 1, "", "dict_str"], [80, 3, 1, "", "dict_subtotals"], [81, 3, 1, "", "dict_sym_diff"], [82, 3, 1, "", "dict_union"], [83, 3, 1, "", "eq"], [84, 3, 1, "", "filtr"], [85, 3, 1, "", "first"], [86, 3, 1, "", "flat_list"], [87, 3, 1, "", "float_or_nan"], [88, 3, 1, "", "gen_session_id"], [89, 3, 1, "", "get"], [90, 3, 1, "", "get_args"], [91, 3, 1, "", "is_float"], [92, 3, 1, "", "is_int"], [93, 3, 1, "", "is_str"], [94, 3, 1, "", "jaccard_index"], [95, 3, 1, "", "join_dicts"], [96, 3, 1, "", "latex_table"], [97, 3, 1, "", "match"], [98, 3, 1, "", "maybe_in_dict"], [99, 3, 1, "", "md5"], [100, 3, 1, "", "merge_dicts"], [101, 3, 1, "", "n_shared_elements"], [102, 3, 1, "", "n_shared_foreach"], [103, 3, 1, "", "n_shared_total"], [104, 3, 1, "", "n_shared_unique_foreach"], [105, 3, 1, "", "n_unique_elements"], [106, 3, 1, "", "n_unique_foreach"], [107, 3, 1, "", "n_unique_total"], [108, 3, 1, "", "negate"], [109, 3, 1, "", "none_or_len"], [110, 3, 1, "", "paginate"], [111, 3, 1, "", "prefix"], [112, 3, 1, "", "print_table"], [113, 3, 1, "", "re_safe_groups"], [114, 3, 1, "", "remove_prefix"], [115, 3, 1, "", "rotate"], [116, 3, 1, "", "sets_to_sorted_lists"], [117, 3, 1, "", "sfirst"], [118, 3, 1, "", "shared_elements"], [119, 3, 1, "", "shared_foreach"], [120, 3, 1, "", "shared_total"], [121, 3, 1, "", "shared_unique"], [122, 3, 1, "", "shared_unique_foreach"], [123, 3, 1, "", "shared_unique_total"], [124, 1, 1, "", "silent"], [125, 3, 1, "", "simpson_index"], [126, 3, 1, "", "simpson_index_counts"], [127, 3, 1, "", "something"], [128, 3, 1, "", "sorensen_index"], [129, 3, 1, "", "suffix"], [130, 3, 1, "", "sum_dicts"], [131, 3, 1, "", "swap_dict"], [132, 3, 1, "", "swap_dict_simple"], [133, 3, 1, "", "swap_suffix"], [134, 3, 1, "", "table_add_row_numbers"], [135, 3, 1, "", "table_format"], [136, 3, 1, "", "table_textwrap"], [137, 3, 1, "", "to_list"], [138, 3, 1, "", "to_set"], [139, 3, 1, "", "try_bool"], [140, 3, 1, "", "try_float"], [141, 3, 1, "", "tsv_table"], [142, 3, 1, "", "uniq_list"], [143, 3, 1, "", "uniq_list1"], [144, 3, 1, "", "uniq_list2"], [145, 3, 1, "", "uniq_ord_list"], [146, 3, 1, "", "unique_elements"], [147, 3, 1, "", "unique_foreach"], [148, 3, 1, "", "unique_list"], [149, 3, 1, "", "unique_total"], [150, 3, 1, "", "upper0"], [151, 3, 1, "", "values"], [152, 3, 1, "", "wcl"], [153, 3, 1, "", "wrap_truncate"]], "pypath.share.common.silent": [[124, 2, 1, "", "__init__"]], "pypath.share.curl": [[156, 1, 1, "", "Curl"], [157, 1, 1, "", "FileOpener"], [158, 1, 1, "", "RemoteFile"], [159, 1, 1, "", "cache_delete_off"], [160, 1, 1, "", "cache_delete_on"], [161, 1, 1, "", "cache_off"], [162, 1, 1, "", "cache_on"], [163, 1, 1, "", "cache_print_off"], [164, 1, 1, "", "cache_print_on"], [165, 1, 1, "", "debug_off"], [166, 1, 1, "", "debug_on"], [167, 1, 1, "", "dryrun_off"], [168, 1, 1, "", "dryrun_on"], [169, 3, 1, "", "is_url"], [170, 1, 1, "", "preserve_off"], [171, 1, 1, "", "preserve_on"]], "pypath.share.curl.Curl": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "close"], [156, 2, 1, "", "construct_binary_data"], [156, 2, 1, "", "extract"], [156, 2, 1, "", "is_quoted"], [156, 2, 1, "", "open"], [156, 2, 1, "", "open_tgz"], [156, 2, 1, "", "replace_forbidden"], [156, 2, 1, "", "set_binary_data"], [156, 2, 1, "", "url_fix"]], "pypath.share.curl.FileOpener": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "extract"], [157, 2, 1, "", "open"], [157, 2, 1, "", "open_tgz"]], "pypath.share.curl.RemoteFile": [[158, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_off": [[159, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_on": [[160, 2, 1, "", "__init__"]], "pypath.share.curl.cache_off": [[161, 2, 1, "", "__init__"]], "pypath.share.curl.cache_on": [[162, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_off": [[163, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_on": [[164, 2, 1, "", "__init__"]], "pypath.share.curl.debug_off": [[165, 2, 1, "", "__init__"]], "pypath.share.curl.debug_on": [[166, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_off": [[167, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_on": [[168, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_off": [[170, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_on": [[171, 2, 1, "", "__init__"]], "pypath.share.log": [[173, 1, 1, "", "Logger"], [174, 3, 1, "", "new_logger"]], "pypath.share.log.Logger": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "browse"], [173, 2, 1, "", "close_logfile"], [173, 2, 1, "", "console"], [173, 2, 1, "", "flush"], [173, 2, 1, "", "get_logdir"], [173, 2, 1, "", "label_message"], [173, 2, 1, "", "msg"], [173, 2, 1, "", "open_logfile"], [173, 2, 1, "", "strftime"], [173, 2, 1, "", "timestamp"], [173, 2, 1, "", "timestamp_message"]], "pypath.share.progress": [[176, 1, 1, "", "Progress"]], "pypath.share.progress.Progress": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_desc"], [176, 2, 1, "", "init_tqdm"], [176, 2, 1, "", "set_done"], [176, 2, 1, "", "set_status"], [176, 2, 1, "", "set_total"], [176, 2, 1, "", "step"], [176, 2, 1, "", "terminate"]], "pypath.share.session": [[178, 1, 1, "", "Logger"], [179, 1, 1, "", "Session"], [180, 3, 1, "", "get_log"], [181, 3, 1, "", "get_session"], [182, 3, 1, "", "new_session"]], "pypath.share.session.Logger": [[178, 2, 1, "", "__init__"]], "pypath.share.session.Session": [[179, 2, 1, "", "__init__"], [179, 2, 1, "", "gen_session_id"], [179, 2, 1, "", "start_logger"]], "pypath.share.settings": [[184, 1, 1, "", "Settings"], [185, 3, 1, "", "context"], [186, 3, 1, "", "get"], [187, 3, 1, "", "setup"]], "pypath.share.settings.Settings": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "context"], [184, 2, 1, "", "get"], [184, 2, 1, "", "get_default"], [184, 2, 1, "", "reset"], [184, 2, 1, "", "reset_all"], [184, 2, 1, "", "setup"]], "pypath.utils": [[189, 0, 0, "-", "proteomicsdb"], [191, 0, 0, "-", "residues"]], "pypath.utils.proteomicsdb": [[190, 1, 1, "", "ProteomicsDB"]], "pypath.utils.proteomicsdb.ProteomicsDB": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "get_expression"], [190, 2, 1, "", "get_pieces"], [190, 2, 1, "", "get_proteins"], [190, 2, 1, "", "get_tissues"], [190, 2, 1, "", "pandas_matrix"], [190, 2, 1, "", "query"], [190, 2, 1, "", "tissues_x_proteins"]], "pypath.utils.residues": [[192, 1, 1, "", "ResidueMapper"]], "pypath.utils.residues.ResidueMapper": [[192, 2, 1, "", "__init__"], [192, 2, 1, "", "clean"]], "pypath.visual": [[194, 0, 0, "-", "drawing"], [197, 0, 0, "-", "igraph_drawing"]], "pypath.visual.drawing": [[195, 1, 1, "", "InterSet"], [196, 1, 1, "", "Plot"]], "pypath.visual.drawing.InterSet": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "draw"]], "pypath.visual.drawing.Plot": [[196, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing": [[198, 1, 1, "", "AbstractCairoGraphDrawer"], [199, 4, 1, "", "ArrowEdgeDrawer"], [200, 1, 1, "", "DefaultGraphDrawerFFsupport"], [201, 4, 1, "", "DefaultVertexDrawer"], [202, 4, 1, "", "TextDrawer"], [203, 0, 0, "-", "edge"], [210, 0, 0, "-", "vertex"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[198, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[200, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.edge": [[204, 1, 1, "", "AbstractEdgeDrawer"], [205, 1, 1, "", "AlphaVaryingEdgeDrawer"], [206, 1, 1, "", "ArrowEdgeDrawer"], [207, 1, 1, "", "DarkToLightEdgeDrawer"], [208, 1, 1, "", "LightToDarkEdgeDrawer"], [209, 1, 1, "", "TaperedEdgeDrawer"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[204, 2, 1, "", "__init__"], [204, 2, 1, "", "draw_directed_edge"], [204, 2, 1, "", "draw_loop_edge"], [204, 2, 1, "", "draw_undirected_edge"], [204, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[205, 2, 1, "", "__init__"], [205, 2, 1, "", "draw_directed_edge"], [205, 2, 1, "", "draw_loop_edge"], [205, 2, 1, "", "draw_undirected_edge"], [205, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[206, 2, 1, "", "__init__"], [206, 2, 1, "", "draw_directed_edge"], [206, 2, 1, "", "draw_loop_edge"], [206, 2, 1, "", "draw_undirected_edge"], [206, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[207, 2, 1, "", "__init__"], [207, 2, 1, "", "draw_directed_edge"], [207, 2, 1, "", "draw_loop_edge"], [207, 2, 1, "", "draw_undirected_edge"], [207, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[208, 2, 1, "", "__init__"], [208, 2, 1, "", "draw_directed_edge"], [208, 2, 1, "", "draw_loop_edge"], [208, 2, 1, "", "draw_undirected_edge"], [208, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[209, 2, 1, "", "__init__"], [209, 2, 1, "", "draw_directed_edge"], [209, 2, 1, "", "draw_loop_edge"], [209, 2, 1, "", "draw_undirected_edge"], [209, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[211, 1, 1, "", "AbstractCairoDrawer"], [212, 1, 1, "", "AbstractCairoVertexDrawer"], [213, 1, 1, "", "AbstractDrawer"], [214, 1, 1, "", "AbstractVertexDrawer"], [215, 1, 1, "", "DefaultVertexDrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[211, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[212, 2, 1, "", "__init__"], [212, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[213, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[214, 2, 1, "", "__init__"], [214, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[215, 2, 1, "", "__init__"], [215, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"pypath": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218], "core": [1, 2, 3, 4, 5], "attr": [2, 3], "attributehandl": 3, "common": [4, 5, 12, 13, 14, 15, 16, 17, 18, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 218], "filter_network_df": 5, "data": [6, 218], "disclaim": 7, "info": [8, 218], "input": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 218], "cell": [10, 11], "cell_supplementari": 11, "csv_sep_chang": 13, "glom_field": 14, "json_extract": 15, "json_read": 16, "read_tabl": 17, "read_xl": 18, "credenti": [19, 20], "ebi": [21, 22], "ebi_rest": 22, "embopress": [23, 24], "embopress_supplementari": 24, "get_method": 25, "main": 26, "mitab": [27, 28, 29], "mitab_field_list": 28, "mitab_field_uniprot": 29, "rdata": 30, "scienc": [31, 32], "science_download": 32, "intern": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "input_format": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "arraymap": 35, "biomartmap": 36, "filemap": 37, "mappinginput": 38, "networkinput": 39, "picklemap": 40, "promap": 41, "readlist": 42, "unichemmap": 43, "uniprotlistmap": 44, "uniprotmap": 45, "licens": [46, 47, 48, 49, 50, 51, 218], "licenseattrib": 48, "licensefeatur": 49, "licensepurpos": 50, "licenseshar": 51, "map": 52, "legaci": [53, 54, 55, 56, 218], "db_categori": [54, 55, 56], "get_categori": [55, 56], "log": [57, 172, 173, 174, 218], "share": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "cach": [59, 60, 61, 218], "cache_item": 60, "get_cachedir": 61, "add_to_list": 63, "add_to_set": 64, "at_least_in": 65, "clean_dict": 66, "combine_attr": 67, "consol": [68, 218], "decod": 69, "del_empti": 70, "df_memory_usag": 71, "dict_collapse_kei": 72, "dict_count": 73, "dict_diff": 74, "dict_expand_kei": 75, "dict_perc": 76, "dict_set_path": 77, "dict_set_perc": 78, "dict_str": 79, "dict_subtot": 80, "dict_sym_diff": 81, "dict_union": 82, "eq": 83, "filtr": 84, "first": 85, "flat_list": 86, "float_or_nan": 87, "gen_session_id": 88, "get": [89, 186, 217], "get_arg": 90, "is_float": 91, "is_int": 92, "is_str": 93, "jaccard_index": 94, "join_dict": 95, "latex_t": 96, "match": 97, "maybe_in_dict": 98, "md5": 99, "merge_dict": 100, "n_shared_el": 101, "n_shared_foreach": 102, "n_shared_tot": 103, "n_shared_unique_foreach": 104, "n_unique_el": 105, "n_unique_foreach": 106, "n_unique_tot": 107, "negat": 108, "none_or_len": 109, "pagin": 110, "prefix": 111, "print_tabl": 112, "re_safe_group": 113, "remove_prefix": 114, "rotat": 115, "sets_to_sorted_list": 116, "sfirst": 117, "shared_el": 118, "shared_foreach": 119, "shared_tot": 120, "shared_uniqu": 121, "shared_unique_foreach": 122, "shared_unique_tot": 123, "silent": 124, "simpson_index": 125, "simpson_index_count": 126, "someth": 127, "sorensen_index": 128, "suffix": 129, "sum_dict": 130, "swap_dict": 131, "swap_dict_simpl": 132, "swap_suffix": 133, "table_add_row_numb": 134, "table_format": 135, "table_textwrap": 136, "to_list": 137, "to_set": 138, "try_bool": 139, "try_float": 140, "tsv_tabl": 141, "uniq_list": 142, "uniq_list1": 143, "uniq_list2": 144, "uniq_ord_list": 145, "unique_el": 146, "unique_foreach": 147, "unique_list": 148, "unique_tot": 149, "upper0": 150, "valu": 151, "wcl": 152, "wrap_trunc": 153, "constant": 154, "curl": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 218], "fileopen": 157, "remotefil": 158, "cache_delete_off": 159, "cache_delete_on": 160, "cache_off": 161, "cache_on": 162, "cache_print_off": 163, "cache_print_on": 164, "debug_off": 165, "debug_on": 166, "dryrun_off": 167, "dryrun_on": 168, "is_url": 169, "preserve_off": 170, "preserve_on": 171, "logger": [173, 178, 218], "new_logg": 174, "progress": [175, 176], "session": [177, 178, 179, 180, 181, 182, 218], "get_log": 180, "get_sess": 181, "new_sess": 182, "set": [183, 184, 185, 186, 187], "context": 185, "setup": 187, "util": [188, 189, 190, 191, 192, 218], "proteomicsdb": [189, 190], "residu": [191, 192], "residuemapp": 192, "visual": [193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "draw": [194, 195, 196], "interset": 195, "plot": [196, 218], "igraph_draw": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "abstractcairographdraw": 198, "arrowedgedraw": [199, 206], "defaultgraphdrawerffsupport": 200, "defaultvertexdraw": [201, 215], "textdraw": 202, "edg": [203, 204, 205, 206, 207, 208, 209, 218], "abstractedgedraw": 204, "alphavaryingedgedraw": 205, "darktolightedgedraw": 207, "lighttodarkedgedraw": 208, "taperededgedraw": 209, "vertex": [210, 211, 212, 213, 214, 215], "abstractcairodraw": 211, "abstractcairovertexdraw": 212, "abstractdraw": 213, "abstractvertexdraw": 214, "content": [216, 218], "welcom": 217, "omnipath": [217, 218], "do": [217, 218], "you": [217, 218], "need": 217, "instal": 217, "doc": 217, "help": 217, "featur": 217, "integr": 217, "databas": [217, 218], "manag": [217, 218], "further": 217, "modul": [217, 218], "id": [217, 218], "convers": 217, "homologi": [217, 218], "translat": [217, 218], "faq": 217, "contact": 217, "impressum": 217, "histori": [217, 218, 220], "releas": [217, 220], "The": 218, "book": 218, "introduct": 218, "build": 218, "load": 218, "save": 218, "app": 218, "built": 218, "definit": 218, "network": [218, 221], "strictli": 218, "literatur": 218, "curat": 218, "extra": 218, "activ": 218, "flow": 218, "enzym": [218, 221], "substrat": [218, 221], "ligand": 218, "receptor": 218, "interact": [218, 221], "transcript": 218, "regul": 218, "from": 218, "dorothea": 218, "other": 218, "resourc": 218, "mirna": 218, "post": 218, "lncrna": 218, "mrna": 218, "small": 218, "molecul": 218, "protein": 218, "relationship": 218, "complex": [218, 221], "annot": [218, 221], "inter": [218, 221], "cellular": [218, 221], "commun": [218, 221], "role": [218, 221], "directli": 218, "origin": 218, "download": 218, "custom": 218, "failur": 218, "corrupt": 218, "issu": 218, "look": 218, "debug": 218, "timeout": 218, "access": 218, "inspect": 218, "object": 218, "i": 218, "fail": 218, "onli": 218, "read": 218, "tl": 218, "ssl": 218, "http": 218, "error": 218, "inform": 218, "certain": 218, "dataset": [218, 221], "which": 218, "ar": 218, "pre": 218, "defin": 218, "panda": 218, "datafram": 218, "identifi": 218, "tabl": 218, "dictionari": 218, "frame": 218, "taxonomi": 218, "ncbi": 218, "scientif": 218, "name": 218, "organ": 218, "uniprot": 218, "all": 218, "one": 218, "format": 218, "valid": 218, "singl": 218, "datasheet": 218, "record": 218, "api": 218, "process": 218, "sanit": 218, "sequenc": 218, "full": 218, "select": 218, "signal": 218, "an": 218, "intercellular": 218, "quantit": 218, "overview": 218, "intercel": 218, "brows": 218, "categori": 218, "gene": 218, "ontologi": 218, "pickl": 218, "messag": 218, "basic": 218, "about": 218, "file": 218, "disabl": 218, "write": 218, "send": 218, "connect": 218, "class": 218, "bel": 218, "export": 218, "cellphonedb": 218, "igraph": 218, "base": 218, "just": 218, "want": 218, "quickli": 218, "plai": 218, "around": 218, "how": [218, 219], "ani": 218, "creat": 218, "2": [218, 220], "test": 218, "structur": 218, "direct": 218, "sign": 218, "node": 218, "queri": [218, 221], "our": 218, "without": 218, "causal": 218, "refer": [218, 219], "navig": 219, "0": 220, "1": 220, "3": 220, "4": 220, "5": 220, "32": 220, "6": 220, "31": 220, "7": 220, "74": 220, "93": 220, "110": 220, "8": 220, "9": 220, "10": 220, "11": 220, "12": 220, "13": 220, "14": 220, "upcom": 220, "webservic": 221, "type": 221, "mous": 221, "rat": 221, "exampl": 221, "molecular": 221, "explor": 221, "possibl": 221, "paramet": 221}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "pypath.core.attrs.AttributeHandler": [[3, "pypath-core-attrs-attributehandler"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "pypath.core.common.filter_network_df": [[5, "pypath-core-common-filter-network-df"]], "pypath.data": [[6, "module-pypath.data"]], "pypath.disclaimer": [[7, "pypath-disclaimer"]], "pypath.info": [[8, "pypath-info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.cell": [[10, "module-pypath.inputs.cell"]], "pypath.inputs.cell.cell_supplementary": [[11, "pypath-inputs-cell-cell-supplementary"]], "pypath.inputs.common": [[12, "module-pypath.inputs.common"]], "pypath.inputs.common.csv_sep_change": [[13, "pypath-inputs-common-csv-sep-change"]], "pypath.inputs.common.glom_fields": [[14, "pypath-inputs-common-glom-fields"]], "pypath.inputs.common.json_extract": [[15, "pypath-inputs-common-json-extract"]], "pypath.inputs.common.json_read": [[16, "pypath-inputs-common-json-read"]], "pypath.inputs.common.read_table": [[17, "pypath-inputs-common-read-table"]], "pypath.inputs.common.read_xls": [[18, "pypath-inputs-common-read-xls"]], "pypath.inputs.credentials": [[19, "module-pypath.inputs.credentials"]], "pypath.inputs.credentials.credentials": [[20, "pypath-inputs-credentials-credentials"]], "pypath.inputs.ebi": [[21, "module-pypath.inputs.ebi"]], "pypath.inputs.ebi.ebi_rest": [[22, "pypath-inputs-ebi-ebi-rest"]], "pypath.inputs.embopress": [[23, "module-pypath.inputs.embopress"]], "pypath.inputs.embopress.embopress_supplementary": [[24, "pypath-inputs-embopress-embopress-supplementary"]], "pypath.inputs.get_method": [[25, "pypath-inputs-get-method"]], "pypath.inputs.main": [[26, "module-pypath.inputs.main"]], "pypath.inputs.mitab": [[27, "module-pypath.inputs.mitab"]], "pypath.inputs.mitab.mitab_field_list": [[28, "pypath-inputs-mitab-mitab-field-list"]], "pypath.inputs.mitab.mitab_field_uniprot": [[29, "pypath-inputs-mitab-mitab-field-uniprot"]], "pypath.inputs.rdata": [[30, "module-pypath.inputs.rdata"]], "pypath.inputs.science": [[31, "module-pypath.inputs.science"]], "pypath.inputs.science.science_download": [[32, "pypath-inputs-science-science-download"]], "pypath.internals": [[33, "module-pypath.internals"]], "pypath.internals.input_formats": [[34, "module-pypath.internals.input_formats"]], "pypath.internals.input_formats.ArrayMapping": [[35, "pypath-internals-input-formats-arraymapping"]], "pypath.internals.input_formats.BiomartMapping": [[36, "pypath-internals-input-formats-biomartmapping"]], "pypath.internals.input_formats.FileMapping": [[37, "pypath-internals-input-formats-filemapping"]], "pypath.internals.input_formats.MappingInput": [[38, "pypath-internals-input-formats-mappinginput"]], "pypath.internals.input_formats.NetworkInput": [[39, "pypath-internals-input-formats-networkinput"]], "pypath.internals.input_formats.PickleMapping": [[40, "pypath-internals-input-formats-picklemapping"]], "pypath.internals.input_formats.ProMapping": [[41, "pypath-internals-input-formats-promapping"]], "pypath.internals.input_formats.ReadList": [[42, "pypath-internals-input-formats-readlist"]], "pypath.internals.input_formats.UnichemMapping": [[43, "pypath-internals-input-formats-unichemmapping"]], "pypath.internals.input_formats.UniprotListMapping": [[44, "pypath-internals-input-formats-uniprotlistmapping"]], "pypath.internals.input_formats.UniprotMapping": [[45, "pypath-internals-input-formats-uniprotmapping"]], "pypath.internals.license": [[46, "module-pypath.internals.license"]], "pypath.internals.license.License": [[47, "pypath-internals-license-license"]], "pypath.internals.license.LicenseAttrib": [[48, "pypath-internals-license-licenseattrib"]], "pypath.internals.license.LicenseFeature": [[49, "pypath-internals-license-licensefeature"]], "pypath.internals.license.LicensePurpose": [[50, "pypath-internals-license-licensepurpose"]], "pypath.internals.license.LicenseSharing": [[51, "pypath-internals-license-licensesharing"]], "pypath.internals.maps": [[52, "module-pypath.internals.maps"]], "pypath.legacy": [[53, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[54, "module-pypath.legacy.db_categories"]], "pypath.legacy.db_categories.get_categories": [[55, "pypath-legacy-db-categories-get-categories"]], "pypath.legacy.db_categories.get_category": [[56, "pypath-legacy-db-categories-get-category"]], "pypath.log": [[57, "pypath-log"]], "pypath.share": [[58, "module-pypath.share"]], "pypath.share.cache": [[59, "module-pypath.share.cache"]], "pypath.share.cache.cache_item": [[60, "pypath-share-cache-cache-item"]], "pypath.share.cache.get_cachedir": [[61, "pypath-share-cache-get-cachedir"]], "pypath.share.common": [[62, "module-pypath.share.common"]], "pypath.share.common.add_to_list": [[63, "pypath-share-common-add-to-list"]], "pypath.share.common.add_to_set": [[64, "pypath-share-common-add-to-set"]], "pypath.share.common.at_least_in": [[65, "pypath-share-common-at-least-in"]], "pypath.share.common.clean_dict": [[66, "pypath-share-common-clean-dict"]], "pypath.share.common.combine_attrs": [[67, "pypath-share-common-combine-attrs"]], "pypath.share.common.console": [[68, "pypath-share-common-console"]], "pypath.share.common.decode": [[69, "pypath-share-common-decode"]], "pypath.share.common.del_empty": [[70, "pypath-share-common-del-empty"]], "pypath.share.common.df_memory_usage": [[71, "pypath-share-common-df-memory-usage"]], "pypath.share.common.dict_collapse_keys": [[72, "pypath-share-common-dict-collapse-keys"]], "pypath.share.common.dict_counts": [[73, "pypath-share-common-dict-counts"]], "pypath.share.common.dict_diff": [[74, "pypath-share-common-dict-diff"]], "pypath.share.common.dict_expand_keys": [[75, "pypath-share-common-dict-expand-keys"]], "pypath.share.common.dict_percent": [[76, "pypath-share-common-dict-percent"]], "pypath.share.common.dict_set_path": [[77, "pypath-share-common-dict-set-path"]], "pypath.share.common.dict_set_percent": [[78, "pypath-share-common-dict-set-percent"]], "pypath.share.common.dict_str": [[79, "pypath-share-common-dict-str"]], "pypath.share.common.dict_subtotals": [[80, "pypath-share-common-dict-subtotals"]], "pypath.share.common.dict_sym_diff": [[81, "pypath-share-common-dict-sym-diff"]], "pypath.share.common.dict_union": [[82, "pypath-share-common-dict-union"]], "pypath.share.common.eq": [[83, "pypath-share-common-eq"]], "pypath.share.common.filtr": [[84, "pypath-share-common-filtr"]], "pypath.share.common.first": [[85, "pypath-share-common-first"]], "pypath.share.common.flat_list": [[86, "pypath-share-common-flat-list"]], "pypath.share.common.float_or_nan": [[87, "pypath-share-common-float-or-nan"]], "pypath.share.common.gen_session_id": [[88, "pypath-share-common-gen-session-id"]], "pypath.share.common.get": [[89, "pypath-share-common-get"]], "pypath.share.common.get_args": [[90, "pypath-share-common-get-args"]], "pypath.share.common.is_float": [[91, "pypath-share-common-is-float"]], "pypath.share.common.is_int": [[92, "pypath-share-common-is-int"]], "pypath.share.common.is_str": [[93, "pypath-share-common-is-str"]], "pypath.share.common.jaccard_index": [[94, "pypath-share-common-jaccard-index"]], "pypath.share.common.join_dicts": [[95, "pypath-share-common-join-dicts"]], "pypath.share.common.latex_table": [[96, "pypath-share-common-latex-table"]], "pypath.share.common.match": [[97, "pypath-share-common-match"]], "pypath.share.common.maybe_in_dict": [[98, "pypath-share-common-maybe-in-dict"]], "pypath.share.common.md5": [[99, "pypath-share-common-md5"]], "pypath.share.common.merge_dicts": [[100, "pypath-share-common-merge-dicts"]], "pypath.share.common.n_shared_elements": [[101, "pypath-share-common-n-shared-elements"]], "pypath.share.common.n_shared_foreach": [[102, "pypath-share-common-n-shared-foreach"]], "pypath.share.common.n_shared_total": [[103, "pypath-share-common-n-shared-total"]], "pypath.share.common.n_shared_unique_foreach": [[104, "pypath-share-common-n-shared-unique-foreach"]], "pypath.share.common.n_unique_elements": [[105, "pypath-share-common-n-unique-elements"]], "pypath.share.common.n_unique_foreach": [[106, "pypath-share-common-n-unique-foreach"]], "pypath.share.common.n_unique_total": [[107, "pypath-share-common-n-unique-total"]], "pypath.share.common.negate": [[108, "pypath-share-common-negate"]], "pypath.share.common.none_or_len": [[109, "pypath-share-common-none-or-len"]], "pypath.share.common.paginate": [[110, "pypath-share-common-paginate"]], "pypath.share.common.prefix": [[111, "pypath-share-common-prefix"]], "pypath.share.common.print_table": [[112, "pypath-share-common-print-table"]], "pypath.share.common.re_safe_groups": [[113, "pypath-share-common-re-safe-groups"]], "pypath.share.common.remove_prefix": [[114, "pypath-share-common-remove-prefix"]], "pypath.share.common.rotate": [[115, "pypath-share-common-rotate"]], "pypath.share.common.sets_to_sorted_lists": [[116, "pypath-share-common-sets-to-sorted-lists"]], "pypath.share.common.sfirst": [[117, "pypath-share-common-sfirst"]], "pypath.share.common.shared_elements": [[118, "pypath-share-common-shared-elements"]], "pypath.share.common.shared_foreach": [[119, "pypath-share-common-shared-foreach"]], "pypath.share.common.shared_total": [[120, "pypath-share-common-shared-total"]], "pypath.share.common.shared_unique": [[121, "pypath-share-common-shared-unique"]], "pypath.share.common.shared_unique_foreach": [[122, "pypath-share-common-shared-unique-foreach"]], "pypath.share.common.shared_unique_total": [[123, "pypath-share-common-shared-unique-total"]], "pypath.share.common.silent": [[124, "pypath-share-common-silent"]], "pypath.share.common.simpson_index": [[125, "pypath-share-common-simpson-index"]], "pypath.share.common.simpson_index_counts": [[126, "pypath-share-common-simpson-index-counts"]], "pypath.share.common.something": [[127, "pypath-share-common-something"]], "pypath.share.common.sorensen_index": [[128, "pypath-share-common-sorensen-index"]], "pypath.share.common.suffix": [[129, "pypath-share-common-suffix"]], "pypath.share.common.sum_dicts": [[130, "pypath-share-common-sum-dicts"]], "pypath.share.common.swap_dict": [[131, "pypath-share-common-swap-dict"]], "pypath.share.common.swap_dict_simple": [[132, "pypath-share-common-swap-dict-simple"]], "pypath.share.common.swap_suffix": [[133, "pypath-share-common-swap-suffix"]], "pypath.share.common.table_add_row_numbers": [[134, "pypath-share-common-table-add-row-numbers"]], "pypath.share.common.table_format": [[135, "pypath-share-common-table-format"]], "pypath.share.common.table_textwrap": [[136, "pypath-share-common-table-textwrap"]], "pypath.share.common.to_list": [[137, "pypath-share-common-to-list"]], "pypath.share.common.to_set": [[138, "pypath-share-common-to-set"]], "pypath.share.common.try_bool": [[139, "pypath-share-common-try-bool"]], "pypath.share.common.try_float": [[140, "pypath-share-common-try-float"]], "pypath.share.common.tsv_table": [[141, "pypath-share-common-tsv-table"]], "pypath.share.common.uniq_list": [[142, "pypath-share-common-uniq-list"]], "pypath.share.common.uniq_list1": [[143, "pypath-share-common-uniq-list1"]], "pypath.share.common.uniq_list2": [[144, "pypath-share-common-uniq-list2"]], "pypath.share.common.uniq_ord_list": [[145, "pypath-share-common-uniq-ord-list"]], "pypath.share.common.unique_elements": [[146, "pypath-share-common-unique-elements"]], "pypath.share.common.unique_foreach": [[147, "pypath-share-common-unique-foreach"]], "pypath.share.common.unique_list": [[148, "pypath-share-common-unique-list"]], "pypath.share.common.unique_total": [[149, "pypath-share-common-unique-total"]], "pypath.share.common.upper0": [[150, "pypath-share-common-upper0"]], "pypath.share.common.values": [[151, "pypath-share-common-values"]], "pypath.share.common.wcl": [[152, "pypath-share-common-wcl"]], "pypath.share.common.wrap_truncate": [[153, "pypath-share-common-wrap-truncate"]], "pypath.share.constants": [[154, "module-pypath.share.constants"]], "pypath.share.curl": [[155, "module-pypath.share.curl"]], "pypath.share.curl.Curl": [[156, "pypath-share-curl-curl"]], "pypath.share.curl.FileOpener": [[157, "pypath-share-curl-fileopener"]], "pypath.share.curl.RemoteFile": [[158, "pypath-share-curl-remotefile"]], "pypath.share.curl.cache_delete_off": [[159, "pypath-share-curl-cache-delete-off"]], "pypath.share.curl.cache_delete_on": [[160, "pypath-share-curl-cache-delete-on"]], "pypath.share.curl.cache_off": [[161, "pypath-share-curl-cache-off"]], "pypath.share.curl.cache_on": [[162, "pypath-share-curl-cache-on"]], "pypath.share.curl.cache_print_off": [[163, "pypath-share-curl-cache-print-off"]], "pypath.share.curl.cache_print_on": [[164, "pypath-share-curl-cache-print-on"]], "pypath.share.curl.debug_off": [[165, "pypath-share-curl-debug-off"]], "pypath.share.curl.debug_on": [[166, "pypath-share-curl-debug-on"]], "pypath.share.curl.dryrun_off": [[167, "pypath-share-curl-dryrun-off"]], "pypath.share.curl.dryrun_on": [[168, "pypath-share-curl-dryrun-on"]], "pypath.share.curl.is_url": [[169, "pypath-share-curl-is-url"]], "pypath.share.curl.preserve_off": [[170, "pypath-share-curl-preserve-off"]], "pypath.share.curl.preserve_on": [[171, "pypath-share-curl-preserve-on"]], "pypath.share.log": [[172, "module-pypath.share.log"]], "pypath.share.log.Logger": [[173, "pypath-share-log-logger"]], "pypath.share.log.new_logger": [[174, "pypath-share-log-new-logger"]], "pypath.share.progress": [[175, "module-pypath.share.progress"]], "pypath.share.progress.Progress": [[176, "pypath-share-progress-progress"]], "pypath.share.session": [[177, "module-pypath.share.session"]], "pypath.share.session.Logger": [[178, "pypath-share-session-logger"]], "pypath.share.session.Session": [[179, "pypath-share-session-session"]], "pypath.share.session.get_log": [[180, "pypath-share-session-get-log"]], "pypath.share.session.get_session": [[181, "pypath-share-session-get-session"]], "pypath.share.session.new_session": [[182, "pypath-share-session-new-session"]], "pypath.share.settings": [[183, "module-pypath.share.settings"]], "pypath.share.settings.Settings": [[184, "pypath-share-settings-settings"]], "pypath.share.settings.context": [[185, "pypath-share-settings-context"]], "pypath.share.settings.get": [[186, "pypath-share-settings-get"]], "pypath.share.settings.setup": [[187, "pypath-share-settings-setup"]], "pypath.utils": [[188, "module-pypath.utils"]], "pypath.utils.proteomicsdb": [[189, "module-pypath.utils.proteomicsdb"]], "pypath.utils.proteomicsdb.ProteomicsDB": [[190, "pypath-utils-proteomicsdb-proteomicsdb"]], "pypath.utils.residues": [[191, "module-pypath.utils.residues"]], "pypath.utils.residues.ResidueMapper": [[192, "pypath-utils-residues-residuemapper"]], "pypath.visual": [[193, "module-pypath.visual"]], "pypath.visual.drawing": [[194, "module-pypath.visual.drawing"]], "pypath.visual.drawing.InterSet": [[195, "pypath-visual-drawing-interset"]], "pypath.visual.drawing.Plot": [[196, "pypath-visual-drawing-plot"]], "pypath.visual.igraph_drawing": [[197, "module-pypath.visual.igraph_drawing"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[198, "pypath-visual-igraph-drawing-abstractcairographdrawer"]], "pypath.visual.igraph_drawing.ArrowEdgeDrawer": [[199, "pypath-visual-igraph-drawing-arrowedgedrawer"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[200, "pypath-visual-igraph-drawing-defaultgraphdrawerffsupport"]], "pypath.visual.igraph_drawing.DefaultVertexDrawer": [[201, "pypath-visual-igraph-drawing-defaultvertexdrawer"]], "pypath.visual.igraph_drawing.TextDrawer": [[202, "pypath-visual-igraph-drawing-textdrawer"]], "pypath.visual.igraph_drawing.edge": [[203, "module-pypath.visual.igraph_drawing.edge"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[204, "pypath-visual-igraph-drawing-edge-abstractedgedrawer"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[205, "pypath-visual-igraph-drawing-edge-alphavaryingedgedrawer"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[206, "pypath-visual-igraph-drawing-edge-arrowedgedrawer"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[207, "pypath-visual-igraph-drawing-edge-darktolightedgedrawer"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[208, "pypath-visual-igraph-drawing-edge-lighttodarkedgedrawer"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[209, "pypath-visual-igraph-drawing-edge-taperededgedrawer"]], "pypath.visual.igraph_drawing.vertex": [[210, "module-pypath.visual.igraph_drawing.vertex"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[211, "pypath-visual-igraph-drawing-vertex-abstractcairodrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[212, "pypath-visual-igraph-drawing-vertex-abstractcairovertexdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[213, "pypath-visual-igraph-drawing-vertex-abstractdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[214, "pypath-visual-igraph-drawing-vertex-abstractvertexdrawer"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[215, "pypath-visual-igraph-drawing-vertex-defaultvertexdrawer"]], "Contents": [[216, "contents"]], "Welcome to pypath!": [[217, "welcome-to-pypath"]], "OmniPath": [[217, "omnipath"]], "Do you need pypath?": [[217, "do-you-need-pypath"]], "Installation": [[217, "installation"]], "Docs": [[217, "docs"]], "Get help": [[217, "get-help"]], "Features": [[217, "features"]], "Integrated databases": [[217, "integrated-databases"]], "Database management": [[217, "database-management"]], "Further modules in pypath": [[217, "further-modules-in-pypath"]], "ID conversion": [[217, "id-conversion"]], "Homology translation": [[217, "homology-translation"], [218, "Homology-translation"]], "FAQ": [[217, "faq"]], "Contact": [[217, "contact"]], "Impressum": [[217, "impressum"]], "History and releases": [[217, "history-and-releases"]], "The pypath book": [[218, "The-pypath-book"]], "Introduction": [[218, "Introduction"]], "Build, load and save databases": [[218, "Build,-load-and-save-databases"]], "The OmniPath app": [[218, "The-OmniPath-app"]], "Built-in database definitions": [[218, "Built-in-database-definitions"]], "Networks": [[218, "Networks"]], "Strictly literature curated network": [[218, "Strictly-literature-curated-network"]], "The OmniPath network with extra activity flow, enzyme-substrate and ligand-receptor interactions": [[218, "The-OmniPath-network-with-extra-activity-flow,-enzyme-substrate-and-ligand-receptor-interactions"]], "Transcriptional regulation network from DoRothEA and other resources": [[218, "Transcriptional-regulation-network-from-DoRothEA-and-other-resources"]], "Literature curated miRNA post-transcriptional regulation network": [[218, "Literature-curated-miRNA-post-transcriptional-regulation-network"]], "Transcriptional regulation of miRNA": [[218, "Transcriptional-regulation-of-miRNA"]], "lncRNA-mRNA interactions": [[218, "lncRNA-mRNA-interactions"]], "Small molecule-protein interactions": [[218, "Small-molecule-protein-interactions"]], "Enzyme-substrate relationships": [[218, "Enzyme-substrate-relationships"]], "Protein complexes": [[218, "Protein-complexes"], [218, "id2"]], "Annotations": [[218, "Annotations"], [218, "id1"], [221, "annotations"]], "Inter-cellular communication roles": [[218, "Inter-cellular-communication-roles"]], "Data directly from the original resources": [[218, "Data-directly-from-the-original-resources"]], "Download management": [[218, "Download-management"]], "Cache management and customization": [[218, "Cache-management-and-customization"]], "Download failures": [[218, "Download-failures"]], "Corrupted cache content": [[218, "Corrupted-cache-content"]], "Network communication issues: look into the curl debug log": [[218, "Network-communication-issues:-look-into-the-curl-debug-log"]], "Timeouts": [[218, "Timeouts"]], "Access and inspect the Curl object": [[218, "Access-and-inspect-the-Curl-object"]], "Is it failing only for you?": [[218, "Is-it-failing-only-for-you?"]], "Read the log": [[218, "Read-the-log"]], "TLS (SSL, HTTPS) errors": [[218, "TLS-(SSL,-HTTPS)-errors"]], "Resources": [[218, "Resources"]], "Licenses": [[218, "Licenses"]], "Resource information": [[218, "Resource-information"]], "Resource definitions for a certain database or dataset": [[218, "Resource-definitions-for-a-certain-database-or-dataset"]], "Building networks": [[218, "Building-networks"]], "Which network datasets are pre-defined in pypath?": [[218, "Which-network-datasets-are-pre-defined-in-pypath?"]], "The Network object": [[218, "The-Network-object"]], "Network in pandas.DataFrame": [[218, "Network-in-pandas.DataFrame"]], "Translating identifiers": [[218, "Translating-identifiers"]], "Pre-defined ID translation tables": [[218, "Pre-defined-ID-translation-tables"]], "Homology translation tables as dictionaries": [[218, "Homology-translation-tables-as-dictionaries"]], "Homology translation data frames": [[218, "Homology-translation-data-frames"]], "Taxonomy": [[218, "Taxonomy"]], "Translating to NCBI Taxonomy, scientific names and common names": [[218, "Translating-to-NCBI-Taxonomy,-scientific-names-and-common-names"]], "Organism from UniProt ID": [[218, "Organism-from-UniProt-ID"]], "UniProt": [[218, "UniProt"]], "The UniProt input module": [[218, "The-UniProt-input-module"]], "All UniProt IDs for one organism": [[218, "All-UniProt-IDs-for-one-organism"]], "UniProt ID format validation": [[218, "UniProt-ID-format-validation"]], "UniProt ID validation": [[218, "UniProt-ID-validation"]], "Single UniProt protein datasheet": [[218, "Single-UniProt-protein-datasheet"]], "History of UniProt records": [[218, "History-of-UniProt-records"]], "UniProt legacy API": [[218, "UniProt-legacy-API"]], "Processed UniProt annotations": [[218, "Processed-UniProt-annotations"]], "The UniProt utils module": [[218, "The-UniProt-utils-module"]], "Datasheets": [[218, "Datasheets"]], "Tables": [[218, "Tables"]], "Sanitizing UniProt IDs": [[218, "Sanitizing-UniProt-IDs"]], "Enzyme-substrate interactions": [[218, "Enzyme-substrate-interactions"], [221, "enzyme-substrate-interactions"]], "Enzyme-substrate objects": [[218, "Enzyme-substrate-objects"]], "Enzyme-substrate data frame": [[218, "Enzyme-substrate-data-frame"]], "Protein sequences": [[218, "Protein-sequences"]], "Load a single annotation resource": [[218, "Load-a-single-annotation-resource"]], "Load the full annotations database by the database manager": [[218, "Load-the-full-annotations-database-by-the-database-manager"]], "Load only selected annotations": [[218, "Load-only-selected-annotations"]], "Data frames of annotations": [[218, "Data-frames-of-annotations"]], "Inter-cellular signaling roles": [[218, "Inter-cellular-signaling-roles"]], "Build an intercellular communication network": [[218, "Build-an-intercellular-communication-network"]], "Quantitative overview of intercell annotations": [[218, "Quantitative-overview-of-intercell-annotations"]], "Intercell database as data frame": [[218, "Intercell-database-as-data-frame"]], "Browse intercell categories": [[218, "Browse-intercell-categories"]], "Gene Ontology": [[218, "Gene-Ontology"]], "Protein complex objects": [[218, "Protein-complex-objects"]], "Protein complex data frame": [[218, "Protein-complex-data-frame"]], "Saving datasets as pickles": [[218, "Saving-datasets-as-pickles"]], "Log messages and sessions": [[218, "Log-messages-and-sessions"]], "Basic info about the session": [[218, "Basic-info-about-the-session"]], "Read the log file": [[218, "Read-the-log-file"]], "Logging to the console": [[218, "Logging-to-the-console"]], "Disable logging": [[218, "Disable-logging"]], "Write to the log": [[218, "Write-to-the-log"]], "Sending a single message": [[218, "Sending-a-single-message"]], "Connect a module or class to the pypath logger": [[218, "Connect-a-module-or-class-to-the-pypath-logger"]], "BEL export": [[218, "BEL-export"]], "CellPhoneDB export": [[218, "CellPhoneDB-export"]], "The legacy igraph-based network object": [[218, "The-legacy-igraph-based-network-object"]], "I just want a network quickly and play around with pypath": [[218, "I-just-want-a-network-quickly-and-play-around-with-pypath"]], "How do I build networks from any data with pypath?": [[218, "How-do-I-build-networks-from-any-data-with-pypath?"]], "Defining input formats": [[218, "Defining-input-formats"]], "Creating PyPath object and loading the 2 test files": [[218, "Creating-PyPath-object-and-loading-the-2-test-files"]], "Structure of the legacy network object": [[218, "Structure-of-the-legacy-network-object"]], "Directions and signs": [[218, "Directions-and-signs"]], "Accessing nodes in the network": [[218, "Accessing-nodes-in-the-network"]], "Querying relationships with our without causality": [[218, "Querying-relationships-with-our-without-causality"]], "Accessing edges by identifiers": [[218, "Accessing-edges-by-identifiers"]], "Literature references": [[218, "Literature-references"]], "Plotting the network with igraph": [[218, "Plotting-the-network-with-igraph"]], "Reference": [[219, "reference"]], "How to navigate the reference?": [[219, "how-to-navigate-the-reference"]], "Release history": [[220, "release-history"]], "0.1.0": [[220, "id1"]], "0.2.0": [[220, "id2"]], "0.3.0": [[220, "id3"]], "0.4.0": [[220, "id4"]], "0.5.0": [[220, "id5"]], "0.5.32": [[220, "id6"]], "0.6.31": [[220, "id7"]], "0.7.0": [[220, "id8"]], "0.7.74": [[220, "id9"]], "0.7.93": [[220, "id10"]], "0.7.110": [[220, "id11"]], "0.8": [[220, "id12"]], "0.9": [[220, "id13"]], "0.10.0": [[220, "id14"]], "0.11.0": [[220, "id15"]], "0.12.0": [[220, "id16"]], "0.13.0": [[220, "id17"]], "0.14.0": [[220, "id18"]], "Upcoming": [[220, "upcoming"]], "Webservice": [[221, "webservice"]], "Query types": [[221, "query-types"]], "Interaction datasets": [[221, "interaction-datasets"]], "Mouse and rat": [[221, "mouse-and-rat"]], "Examples": [[221, "examples"]], "Molecular interaction network": [[221, "molecular-interaction-network"]], "Molecular complexes": [[221, "molecular-complexes"]], "Roles in inter-cellular communication": [[221, "roles-in-inter-cellular-communication"]], "Exploring possible parameters": [[221, "exploring-possible-parameters"]]}, "indexentries": {"module": [[0, "module-pypath"], [1, "module-pypath.core"], [2, "module-pypath.core.attrs"], [4, "module-pypath.core.common"], [6, "module-pypath.data"], [9, "module-pypath.inputs"], [10, "module-pypath.inputs.cell"], [12, "module-pypath.inputs.common"], [19, "module-pypath.inputs.credentials"], [21, "module-pypath.inputs.ebi"], [23, "module-pypath.inputs.embopress"], [26, "module-pypath.inputs.main"], [27, "module-pypath.inputs.mitab"], [30, "module-pypath.inputs.rdata"], [31, "module-pypath.inputs.science"], [33, "module-pypath.internals"], [34, "module-pypath.internals.input_formats"], [46, "module-pypath.internals.license"], [52, "module-pypath.internals.maps"], [53, "module-pypath.legacy"], [54, "module-pypath.legacy.db_categories"], [58, "module-pypath.share"], [59, "module-pypath.share.cache"], [62, "module-pypath.share.common"], [154, "module-pypath.share.constants"], [155, "module-pypath.share.curl"], [172, "module-pypath.share.log"], [175, "module-pypath.share.progress"], [177, "module-pypath.share.session"], [183, "module-pypath.share.settings"], [188, "module-pypath.utils"], [189, "module-pypath.utils.proteomicsdb"], [191, "module-pypath.utils.residues"], [193, "module-pypath.visual"], [194, "module-pypath.visual.drawing"], [197, "module-pypath.visual.igraph_drawing"], [203, "module-pypath.visual.igraph_drawing.edge"], [210, "module-pypath.visual.igraph_drawing.vertex"]], "pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "attributehandler (class in pypath.core.attrs)": [[3, "pypath.core.attrs.AttributeHandler"]], "__init__() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.__init__"]], "serialize() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.serialize"]], "update_attrs() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.update_attrs"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "filter_network_df() (in module pypath.core.common)": [[5, "pypath.core.common.filter_network_df"]], "pypath.data": [[6, "module-pypath.data"]], "disclaimer() (in module pypath)": [[7, "pypath.disclaimer"]], "info() (in module pypath)": [[8, "pypath.info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.cell": [[10, "module-pypath.inputs.cell"]], "cell_supplementary() (in module pypath.inputs.cell)": [[11, "pypath.inputs.cell.cell_supplementary"]], "pypath.inputs.common": [[12, "module-pypath.inputs.common"]], "csv_sep_change() (in module pypath.inputs.common)": [[13, "pypath.inputs.common.csv_sep_change"]], "glom_fields() (in module pypath.inputs.common)": [[14, "pypath.inputs.common.glom_fields"]], "json_extract() (in module pypath.inputs.common)": [[15, "pypath.inputs.common.json_extract"]], "json_read() (in module pypath.inputs.common)": [[16, "pypath.inputs.common.json_read"]], "read_table() (in module pypath.inputs.common)": [[17, "pypath.inputs.common.read_table"]], "read_xls() (in module pypath.inputs.common)": [[18, "pypath.inputs.common.read_xls"]], "pypath.inputs.credentials": [[19, "module-pypath.inputs.credentials"]], "credentials() (in module pypath.inputs.credentials)": [[20, "pypath.inputs.credentials.credentials"]], "pypath.inputs.ebi": [[21, "module-pypath.inputs.ebi"]], "ebi_rest() (in module pypath.inputs.ebi)": [[22, "pypath.inputs.ebi.ebi_rest"]], "pypath.inputs.embopress": [[23, "module-pypath.inputs.embopress"]], "embopress_supplementary() (in module pypath.inputs.embopress)": [[24, "pypath.inputs.embopress.embopress_supplementary"]], "get_method() (in module pypath.inputs)": [[25, "pypath.inputs.get_method"]], "pypath.inputs.main": [[26, "module-pypath.inputs.main"]], "pypath.inputs.mitab": [[27, "module-pypath.inputs.mitab"]], "mitab_field_list() (in module pypath.inputs.mitab)": [[28, "pypath.inputs.mitab.mitab_field_list"]], "mitab_field_uniprot() (in module pypath.inputs.mitab)": [[29, "pypath.inputs.mitab.mitab_field_uniprot"]], "pypath.inputs.rdata": [[30, "module-pypath.inputs.rdata"]], "pypath.inputs.science": [[31, "module-pypath.inputs.science"]], "science_download() (in module pypath.inputs.science)": [[32, "pypath.inputs.science.science_download"]], "pypath.internals": [[33, "module-pypath.internals"]], "pypath.internals.input_formats": [[34, "module-pypath.internals.input_formats"]], "arraymapping (class in pypath.internals.input_formats)": [[35, "pypath.internals.input_formats.ArrayMapping"]], "__init__() (pypath.internals.input_formats.arraymapping method)": [[35, "pypath.internals.input_formats.ArrayMapping.__init__"]], "biomartmapping (class in pypath.internals.input_formats)": [[36, "pypath.internals.input_formats.BiomartMapping"]], "__init__() (pypath.internals.input_formats.biomartmapping method)": [[36, "pypath.internals.input_formats.BiomartMapping.__init__"]], "filemapping (class in pypath.internals.input_formats)": [[37, "pypath.internals.input_formats.FileMapping"]], "__init__() (pypath.internals.input_formats.filemapping method)": [[37, "pypath.internals.input_formats.FileMapping.__init__"]], "mappinginput (class in pypath.internals.input_formats)": [[38, "pypath.internals.input_formats.MappingInput"]], "__init__() (pypath.internals.input_formats.mappinginput method)": [[38, "pypath.internals.input_formats.MappingInput.__init__"]], "networkinput (class in pypath.internals.input_formats)": [[39, "pypath.internals.input_formats.NetworkInput"]], "__init__() (pypath.internals.input_formats.networkinput method)": [[39, "pypath.internals.input_formats.NetworkInput.__init__"]], "picklemapping (class in pypath.internals.input_formats)": [[40, "pypath.internals.input_formats.PickleMapping"]], "__init__() (pypath.internals.input_formats.picklemapping method)": [[40, "pypath.internals.input_formats.PickleMapping.__init__"]], "promapping (class in pypath.internals.input_formats)": [[41, "pypath.internals.input_formats.ProMapping"]], "__init__() (pypath.internals.input_formats.promapping method)": [[41, "pypath.internals.input_formats.ProMapping.__init__"]], "readlist (class in pypath.internals.input_formats)": [[42, "pypath.internals.input_formats.ReadList"]], "__init__() (pypath.internals.input_formats.readlist method)": [[42, "pypath.internals.input_formats.ReadList.__init__"]], "unichemmapping (class in pypath.internals.input_formats)": [[43, "pypath.internals.input_formats.UnichemMapping"]], "__init__() (pypath.internals.input_formats.unichemmapping method)": [[43, "pypath.internals.input_formats.UnichemMapping.__init__"]], "uniprotlistmapping (class in pypath.internals.input_formats)": [[44, "pypath.internals.input_formats.UniprotListMapping"]], "__init__() (pypath.internals.input_formats.uniprotlistmapping method)": [[44, "pypath.internals.input_formats.UniprotListMapping.__init__"]], "uniprotmapping (class in pypath.internals.input_formats)": [[45, "pypath.internals.input_formats.UniprotMapping"]], "__init__() (pypath.internals.input_formats.uniprotmapping method)": [[45, "pypath.internals.input_formats.UniprotMapping.__init__"]], "resource_id_type() (pypath.internals.input_formats.uniprotmapping static method)": [[45, "pypath.internals.input_formats.UniprotMapping.resource_id_type"]], "pypath.internals.license": [[46, "module-pypath.internals.license"]], "license (class in pypath.internals.license)": [[47, "pypath.internals.license.License"]], "__init__() (pypath.internals.license.license method)": [[47, "pypath.internals.license.License.__init__"]], "enables() (pypath.internals.license.license method)": [[47, "pypath.internals.license.License.enables"]], "licenseattrib (class in pypath.internals.license)": [[48, "pypath.internals.license.LicenseAttrib"]], "__init__() (pypath.internals.license.licenseattrib method)": [[48, "pypath.internals.license.LicenseAttrib.__init__"]], "check_level() (pypath.internals.license.licenseattrib class method)": [[48, "pypath.internals.license.LicenseAttrib.check_level"]], "int_to_level() (pypath.internals.license.licenseattrib class method)": [[48, "pypath.internals.license.LicenseAttrib.int_to_level"]], "level_to_int() (pypath.internals.license.licenseattrib class method)": [[48, "pypath.internals.license.LicenseAttrib.level_to_int"]], "to_int() (pypath.internals.license.licenseattrib method)": [[48, "pypath.internals.license.LicenseAttrib.to_int"]], "licensefeature (class in pypath.internals.license)": [[49, "pypath.internals.license.LicenseFeature"]], "__init__() (pypath.internals.license.licensefeature method)": [[49, "pypath.internals.license.LicenseFeature.__init__"]], "check_level() (pypath.internals.license.licensefeature class method)": [[49, "pypath.internals.license.LicenseFeature.check_level"]], "int_to_level() (pypath.internals.license.licensefeature class method)": [[49, "pypath.internals.license.LicenseFeature.int_to_level"]], "level_to_int() (pypath.internals.license.licensefeature class method)": [[49, "pypath.internals.license.LicenseFeature.level_to_int"]], "to_int() (pypath.internals.license.licensefeature method)": [[49, "pypath.internals.license.LicenseFeature.to_int"]], "licensepurpose (class in pypath.internals.license)": [[50, "pypath.internals.license.LicensePurpose"]], "__init__() (pypath.internals.license.licensepurpose method)": [[50, "pypath.internals.license.LicensePurpose.__init__"]], "check_level() (pypath.internals.license.licensepurpose class method)": [[50, "pypath.internals.license.LicensePurpose.check_level"]], "int_to_level() (pypath.internals.license.licensepurpose class method)": [[50, "pypath.internals.license.LicensePurpose.int_to_level"]], "level_to_int() (pypath.internals.license.licensepurpose class method)": [[50, "pypath.internals.license.LicensePurpose.level_to_int"]], "to_int() (pypath.internals.license.licensepurpose method)": [[50, "pypath.internals.license.LicensePurpose.to_int"]], "licensesharing (class in pypath.internals.license)": [[51, "pypath.internals.license.LicenseSharing"]], "__init__() (pypath.internals.license.licensesharing method)": [[51, "pypath.internals.license.LicenseSharing.__init__"]], "check_level() (pypath.internals.license.licensesharing class method)": [[51, "pypath.internals.license.LicenseSharing.check_level"]], "int_to_level() (pypath.internals.license.licensesharing class method)": [[51, "pypath.internals.license.LicenseSharing.int_to_level"]], "level_to_int() (pypath.internals.license.licensesharing class method)": [[51, "pypath.internals.license.LicenseSharing.level_to_int"]], "to_int() (pypath.internals.license.licensesharing method)": [[51, "pypath.internals.license.LicenseSharing.to_int"]], "pypath.internals.maps": [[52, "module-pypath.internals.maps"]], "pypath.legacy": [[53, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[54, "module-pypath.legacy.db_categories"]], "get_categories() (in module pypath.legacy.db_categories)": [[55, "pypath.legacy.db_categories.get_categories"]], "get_category() (in module pypath.legacy.db_categories)": [[56, "pypath.legacy.db_categories.get_category"]], "log() (in module pypath)": [[57, "pypath.log"]], "pypath.share": [[58, "module-pypath.share"]], "pypath.share.cache": [[59, "module-pypath.share.cache"]], "cache_item() (in module pypath.share.cache)": [[60, "pypath.share.cache.cache_item"]], "get_cachedir() (in module pypath.share.cache)": [[61, "pypath.share.cache.get_cachedir"]], "pypath.share.common": [[62, "module-pypath.share.common"]], "add_to_list() (in module pypath.share.common)": [[63, "pypath.share.common.add_to_list"]], "add_to_set() (in module pypath.share.common)": [[64, "pypath.share.common.add_to_set"]], "at_least_in() (in module pypath.share.common)": [[65, "pypath.share.common.at_least_in"]], "clean_dict() (in module pypath.share.common)": [[66, "pypath.share.common.clean_dict"]], "combine_attrs() (in module pypath.share.common)": [[67, "pypath.share.common.combine_attrs"]], "console() (in module pypath.share.common)": [[68, "pypath.share.common.console"]], "decode() (in module pypath.share.common)": [[69, "pypath.share.common.decode"]], "del_empty() (in module pypath.share.common)": [[70, "pypath.share.common.del_empty"]], "df_memory_usage() (in module pypath.share.common)": [[71, "pypath.share.common.df_memory_usage"]], "dict_collapse_keys() (in module pypath.share.common)": [[72, "pypath.share.common.dict_collapse_keys"]], "dict_counts() (in module pypath.share.common)": [[73, "pypath.share.common.dict_counts"]], "dict_diff() (in module pypath.share.common)": [[74, "pypath.share.common.dict_diff"]], "dict_expand_keys() (in module pypath.share.common)": [[75, "pypath.share.common.dict_expand_keys"]], "dict_percent() (in module pypath.share.common)": [[76, "pypath.share.common.dict_percent"]], "dict_set_path() (in module pypath.share.common)": [[77, "pypath.share.common.dict_set_path"]], "dict_set_percent() (in module pypath.share.common)": [[78, "pypath.share.common.dict_set_percent"]], "dict_str() (in module pypath.share.common)": [[79, "pypath.share.common.dict_str"]], "dict_subtotals() (in module pypath.share.common)": [[80, "pypath.share.common.dict_subtotals"]], "dict_sym_diff() (in module pypath.share.common)": [[81, "pypath.share.common.dict_sym_diff"]], "dict_union() (in module pypath.share.common)": [[82, "pypath.share.common.dict_union"]], "eq() (in module pypath.share.common)": [[83, "pypath.share.common.eq"]], "filtr() (in module pypath.share.common)": [[84, "pypath.share.common.filtr"]], "first() (in module pypath.share.common)": [[85, "pypath.share.common.first"]], "flat_list() (in module pypath.share.common)": [[86, "pypath.share.common.flat_list"]], "float_or_nan() (in module pypath.share.common)": [[87, "pypath.share.common.float_or_nan"]], "gen_session_id() (in module pypath.share.common)": [[88, "pypath.share.common.gen_session_id"]], "get() (in module pypath.share.common)": [[89, "pypath.share.common.get"]], "get_args() (in module pypath.share.common)": [[90, "pypath.share.common.get_args"]], "is_float() (in module pypath.share.common)": [[91, "pypath.share.common.is_float"]], "is_int() (in module pypath.share.common)": [[92, "pypath.share.common.is_int"]], "is_str() (in module pypath.share.common)": [[93, "pypath.share.common.is_str"]], "jaccard_index() (in module pypath.share.common)": [[94, "pypath.share.common.jaccard_index"]], "join_dicts() (in module pypath.share.common)": [[95, "pypath.share.common.join_dicts"]], "latex_table() (in module pypath.share.common)": [[96, "pypath.share.common.latex_table"]], "match() (in module pypath.share.common)": [[97, "pypath.share.common.match"]], "maybe_in_dict() (in module pypath.share.common)": [[98, "pypath.share.common.maybe_in_dict"]], "md5() (in module pypath.share.common)": [[99, "pypath.share.common.md5"]], "merge_dicts() (in module pypath.share.common)": [[100, "pypath.share.common.merge_dicts"]], "n_shared_elements() (in module pypath.share.common)": [[101, "pypath.share.common.n_shared_elements"]], "n_shared_foreach() (in module pypath.share.common)": [[102, "pypath.share.common.n_shared_foreach"]], "n_shared_total() (in module pypath.share.common)": [[103, "pypath.share.common.n_shared_total"]], "n_shared_unique_foreach() (in module pypath.share.common)": [[104, "pypath.share.common.n_shared_unique_foreach"]], "n_unique_elements() (in module pypath.share.common)": [[105, "pypath.share.common.n_unique_elements"]], "n_unique_foreach() (in module pypath.share.common)": [[106, "pypath.share.common.n_unique_foreach"]], "n_unique_total() (in module pypath.share.common)": [[107, "pypath.share.common.n_unique_total"]], "negate() (in module pypath.share.common)": [[108, "pypath.share.common.negate"]], "none_or_len() (in module pypath.share.common)": [[109, "pypath.share.common.none_or_len"]], "paginate() (in module pypath.share.common)": [[110, "pypath.share.common.paginate"]], "prefix() (in module pypath.share.common)": [[111, "pypath.share.common.prefix"]], "print_table() (in module pypath.share.common)": [[112, "pypath.share.common.print_table"]], "re_safe_groups() (in module pypath.share.common)": [[113, "pypath.share.common.re_safe_groups"]], "remove_prefix() (in module pypath.share.common)": [[114, "pypath.share.common.remove_prefix"]], "rotate() (in module pypath.share.common)": [[115, "pypath.share.common.rotate"]], "sets_to_sorted_lists() (in module pypath.share.common)": [[116, "pypath.share.common.sets_to_sorted_lists"]], "sfirst() (in module pypath.share.common)": [[117, "pypath.share.common.sfirst"]], "shared_elements() (in module pypath.share.common)": [[118, "pypath.share.common.shared_elements"]], "shared_foreach() (in module pypath.share.common)": [[119, "pypath.share.common.shared_foreach"]], "shared_total() (in module pypath.share.common)": [[120, "pypath.share.common.shared_total"]], "shared_unique() (in module pypath.share.common)": [[121, "pypath.share.common.shared_unique"]], "shared_unique_foreach() (in module pypath.share.common)": [[122, "pypath.share.common.shared_unique_foreach"]], "shared_unique_total() (in module pypath.share.common)": [[123, "pypath.share.common.shared_unique_total"]], "__init__() (pypath.share.common.silent method)": [[124, "pypath.share.common.silent.__init__"]], "silent (class in pypath.share.common)": [[124, "pypath.share.common.silent"]], "simpson_index() (in module pypath.share.common)": [[125, "pypath.share.common.simpson_index"]], "simpson_index_counts() (in module pypath.share.common)": [[126, "pypath.share.common.simpson_index_counts"]], "something() (in module pypath.share.common)": [[127, "pypath.share.common.something"]], "sorensen_index() (in module pypath.share.common)": [[128, "pypath.share.common.sorensen_index"]], "suffix() (in module pypath.share.common)": [[129, "pypath.share.common.suffix"]], "sum_dicts() (in module pypath.share.common)": [[130, "pypath.share.common.sum_dicts"]], "swap_dict() (in module pypath.share.common)": [[131, "pypath.share.common.swap_dict"]], "swap_dict_simple() (in module pypath.share.common)": [[132, "pypath.share.common.swap_dict_simple"]], "swap_suffix() (in module pypath.share.common)": [[133, "pypath.share.common.swap_suffix"]], "table_add_row_numbers() (in module pypath.share.common)": [[134, "pypath.share.common.table_add_row_numbers"]], "table_format() (in module pypath.share.common)": [[135, "pypath.share.common.table_format"]], "table_textwrap() (in module pypath.share.common)": [[136, "pypath.share.common.table_textwrap"]], "to_list() (in module pypath.share.common)": [[137, "pypath.share.common.to_list"]], "to_set() (in module pypath.share.common)": [[138, "pypath.share.common.to_set"]], "try_bool() (in module pypath.share.common)": [[139, "pypath.share.common.try_bool"]], "try_float() (in module pypath.share.common)": [[140, "pypath.share.common.try_float"]], "tsv_table() (in module pypath.share.common)": [[141, "pypath.share.common.tsv_table"]], "uniq_list() (in module pypath.share.common)": [[142, "pypath.share.common.uniq_list"]], "uniq_list1() (in module pypath.share.common)": [[143, "pypath.share.common.uniq_list1"]], "uniq_list2() (in module pypath.share.common)": [[144, "pypath.share.common.uniq_list2"]], "uniq_ord_list() (in module pypath.share.common)": [[145, "pypath.share.common.uniq_ord_list"]], "unique_elements() (in module pypath.share.common)": [[146, "pypath.share.common.unique_elements"]], "unique_foreach() (in module pypath.share.common)": [[147, "pypath.share.common.unique_foreach"]], "unique_list() (in module pypath.share.common)": [[148, "pypath.share.common.unique_list"]], "unique_total() (in module pypath.share.common)": [[149, "pypath.share.common.unique_total"]], "upper0() (in module pypath.share.common)": [[150, "pypath.share.common.upper0"]], "values() (in module pypath.share.common)": [[151, "pypath.share.common.values"]], "wcl() (in module pypath.share.common)": [[152, "pypath.share.common.wcl"]], "wrap_truncate() (in module pypath.share.common)": [[153, "pypath.share.common.wrap_truncate"]], "pypath.share.constants": [[154, "module-pypath.share.constants"]], "pypath.share.curl": [[155, "module-pypath.share.curl"]], "curl (class in pypath.share.curl)": [[156, "pypath.share.curl.Curl"]], "__init__() (pypath.share.curl.curl method)": [[156, "pypath.share.curl.Curl.__init__"]], "close() (pypath.share.curl.curl method)": [[156, "pypath.share.curl.Curl.close"]], "construct_binary_data() (pypath.share.curl.curl method)": [[156, "pypath.share.curl.Curl.construct_binary_data"]], "extract() (pypath.share.curl.curl method)": [[156, "pypath.share.curl.Curl.extract"]], "is_quoted() (pypath.share.curl.curl method)": [[156, "pypath.share.curl.Curl.is_quoted"]], "open() (pypath.share.curl.curl method)": [[156, "pypath.share.curl.Curl.open"]], "open_tgz() (pypath.share.curl.curl method)": [[156, "pypath.share.curl.Curl.open_tgz"]], "replace_forbidden() (pypath.share.curl.curl class method)": [[156, "pypath.share.curl.Curl.replace_forbidden"]], "set_binary_data() (pypath.share.curl.curl method)": [[156, "pypath.share.curl.Curl.set_binary_data"]], "url_fix() (pypath.share.curl.curl method)": [[156, "pypath.share.curl.Curl.url_fix"]], "fileopener (class in pypath.share.curl)": [[157, "pypath.share.curl.FileOpener"]], "__init__() (pypath.share.curl.fileopener method)": [[157, "pypath.share.curl.FileOpener.__init__"]], "extract() (pypath.share.curl.fileopener method)": [[157, "pypath.share.curl.FileOpener.extract"]], "open() (pypath.share.curl.fileopener method)": [[157, "pypath.share.curl.FileOpener.open"]], "open_tgz() (pypath.share.curl.fileopener method)": [[157, "pypath.share.curl.FileOpener.open_tgz"]], "remotefile (class in pypath.share.curl)": [[158, "pypath.share.curl.RemoteFile"]], "__init__() (pypath.share.curl.remotefile method)": [[158, "pypath.share.curl.RemoteFile.__init__"]], "__init__() (pypath.share.curl.cache_delete_off method)": [[159, "pypath.share.curl.cache_delete_off.__init__"]], "cache_delete_off (class in pypath.share.curl)": [[159, "pypath.share.curl.cache_delete_off"]], "__init__() (pypath.share.curl.cache_delete_on method)": [[160, "pypath.share.curl.cache_delete_on.__init__"]], "cache_delete_on (class in pypath.share.curl)": [[160, "pypath.share.curl.cache_delete_on"]], "__init__() (pypath.share.curl.cache_off method)": [[161, "pypath.share.curl.cache_off.__init__"]], "cache_off (class in pypath.share.curl)": [[161, "pypath.share.curl.cache_off"]], "__init__() (pypath.share.curl.cache_on method)": [[162, "pypath.share.curl.cache_on.__init__"]], "cache_on (class in pypath.share.curl)": [[162, "pypath.share.curl.cache_on"]], "__init__() (pypath.share.curl.cache_print_off method)": [[163, "pypath.share.curl.cache_print_off.__init__"]], "cache_print_off (class in pypath.share.curl)": [[163, "pypath.share.curl.cache_print_off"]], "__init__() (pypath.share.curl.cache_print_on method)": [[164, "pypath.share.curl.cache_print_on.__init__"]], "cache_print_on (class in pypath.share.curl)": [[164, "pypath.share.curl.cache_print_on"]], "__init__() (pypath.share.curl.debug_off method)": [[165, "pypath.share.curl.debug_off.__init__"]], "debug_off (class in pypath.share.curl)": [[165, "pypath.share.curl.debug_off"]], "__init__() (pypath.share.curl.debug_on method)": [[166, "pypath.share.curl.debug_on.__init__"]], "debug_on (class in pypath.share.curl)": [[166, "pypath.share.curl.debug_on"]], "__init__() (pypath.share.curl.dryrun_off method)": [[167, "pypath.share.curl.dryrun_off.__init__"]], "dryrun_off (class in pypath.share.curl)": [[167, "pypath.share.curl.dryrun_off"]], "__init__() (pypath.share.curl.dryrun_on method)": [[168, "pypath.share.curl.dryrun_on.__init__"]], "dryrun_on (class in pypath.share.curl)": [[168, "pypath.share.curl.dryrun_on"]], "is_url() (in module pypath.share.curl)": [[169, "pypath.share.curl.is_url"]], "__init__() (pypath.share.curl.preserve_off method)": [[170, "pypath.share.curl.preserve_off.__init__"]], "preserve_off (class in pypath.share.curl)": [[170, "pypath.share.curl.preserve_off"]], "__init__() (pypath.share.curl.preserve_on method)": [[171, "pypath.share.curl.preserve_on.__init__"]], "preserve_on (class in pypath.share.curl)": [[171, "pypath.share.curl.preserve_on"]], "pypath.share.log": [[172, "module-pypath.share.log"]], "logger (class in pypath.share.log)": [[173, "pypath.share.log.Logger"]], "__init__() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.__init__"]], "browse() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.browse"]], "close_logfile() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.close_logfile"]], "console() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.console"]], "flush() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.flush"]], "get_logdir() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.get_logdir"]], "label_message() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.label_message"]], "msg() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.msg"]], "open_logfile() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.open_logfile"]], "strftime() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.strftime"]], "timestamp() (pypath.share.log.logger class method)": [[173, "pypath.share.log.Logger.timestamp"]], "timestamp_message() (pypath.share.log.logger method)": [[173, "pypath.share.log.Logger.timestamp_message"]], "new_logger() (in module pypath.share.log)": [[174, "pypath.share.log.new_logger"]], "pypath.share.progress": [[175, "module-pypath.share.progress"]], "progress (class in pypath.share.progress)": [[176, "pypath.share.progress.Progress"]], "__init__() (pypath.share.progress.progress method)": [[176, "pypath.share.progress.Progress.__init__"]], "get_desc() (pypath.share.progress.progress method)": [[176, "pypath.share.progress.Progress.get_desc"]], "init_tqdm() (pypath.share.progress.progress method)": [[176, "pypath.share.progress.Progress.init_tqdm"]], "set_done() (pypath.share.progress.progress method)": [[176, "pypath.share.progress.Progress.set_done"]], "set_status() (pypath.share.progress.progress method)": [[176, "pypath.share.progress.Progress.set_status"]], "set_total() (pypath.share.progress.progress method)": [[176, "pypath.share.progress.Progress.set_total"]], "step() (pypath.share.progress.progress method)": [[176, "pypath.share.progress.Progress.step"]], "terminate() (pypath.share.progress.progress method)": [[176, "pypath.share.progress.Progress.terminate"]], "pypath.share.session": [[177, "module-pypath.share.session"]], "logger (class in pypath.share.session)": [[178, "pypath.share.session.Logger"]], "__init__() (pypath.share.session.logger method)": [[178, "pypath.share.session.Logger.__init__"]], "session (class in pypath.share.session)": [[179, "pypath.share.session.Session"]], "__init__() (pypath.share.session.session method)": [[179, "pypath.share.session.Session.__init__"]], "gen_session_id() (pypath.share.session.session static method)": [[179, "pypath.share.session.Session.gen_session_id"]], "start_logger() (pypath.share.session.session method)": [[179, "pypath.share.session.Session.start_logger"]], "get_log() (in module pypath.share.session)": [[180, "pypath.share.session.get_log"]], "get_session() (in module pypath.share.session)": [[181, "pypath.share.session.get_session"]], "new_session() (in module pypath.share.session)": [[182, "pypath.share.session.new_session"]], "pypath.share.settings": [[183, "module-pypath.share.settings"]], "settings (class in pypath.share.settings)": [[184, "pypath.share.settings.Settings"]], "__init__() (pypath.share.settings.settings method)": [[184, "pypath.share.settings.Settings.__init__"]], "context() (pypath.share.settings.settings method)": [[184, "pypath.share.settings.Settings.context"]], "get() (pypath.share.settings.settings method)": [[184, "pypath.share.settings.Settings.get"]], "get_default() (pypath.share.settings.settings method)": [[184, "pypath.share.settings.Settings.get_default"]], "reset() (pypath.share.settings.settings method)": [[184, "pypath.share.settings.Settings.reset"]], "reset_all() (pypath.share.settings.settings method)": [[184, "pypath.share.settings.Settings.reset_all"]], "setup() (pypath.share.settings.settings method)": [[184, "pypath.share.settings.Settings.setup"]], "context() (in module pypath.share.settings)": [[185, "pypath.share.settings.context"]], "get() (in module pypath.share.settings)": [[186, "pypath.share.settings.get"]], "setup() (in module pypath.share.settings)": [[187, "pypath.share.settings.setup"]], "pypath.utils": [[188, "module-pypath.utils"]], "pypath.utils.proteomicsdb": [[189, "module-pypath.utils.proteomicsdb"]], "proteomicsdb (class in pypath.utils.proteomicsdb)": [[190, "pypath.utils.proteomicsdb.ProteomicsDB"]], "__init__() (pypath.utils.proteomicsdb.proteomicsdb method)": [[190, "pypath.utils.proteomicsdb.ProteomicsDB.__init__"]], "get_expression() (pypath.utils.proteomicsdb.proteomicsdb method)": [[190, "pypath.utils.proteomicsdb.ProteomicsDB.get_expression"]], "get_pieces() (pypath.utils.proteomicsdb.proteomicsdb method)": [[190, "pypath.utils.proteomicsdb.ProteomicsDB.get_pieces"]], "get_proteins() (pypath.utils.proteomicsdb.proteomicsdb method)": [[190, "pypath.utils.proteomicsdb.ProteomicsDB.get_proteins"]], "get_tissues() (pypath.utils.proteomicsdb.proteomicsdb method)": [[190, "pypath.utils.proteomicsdb.ProteomicsDB.get_tissues"]], "pandas_matrix() (pypath.utils.proteomicsdb.proteomicsdb method)": [[190, "pypath.utils.proteomicsdb.ProteomicsDB.pandas_matrix"]], "query() (pypath.utils.proteomicsdb.proteomicsdb method)": [[190, "pypath.utils.proteomicsdb.ProteomicsDB.query"]], "tissues_x_proteins() (pypath.utils.proteomicsdb.proteomicsdb method)": [[190, "pypath.utils.proteomicsdb.ProteomicsDB.tissues_x_proteins"]], "pypath.utils.residues": [[191, "module-pypath.utils.residues"]], "residuemapper (class in pypath.utils.residues)": [[192, "pypath.utils.residues.ResidueMapper"]], "__init__() (pypath.utils.residues.residuemapper method)": [[192, "pypath.utils.residues.ResidueMapper.__init__"]], "clean() (pypath.utils.residues.residuemapper method)": [[192, "pypath.utils.residues.ResidueMapper.clean"]], "pypath.visual": [[193, "module-pypath.visual"]], "pypath.visual.drawing": [[194, "module-pypath.visual.drawing"]], "interset (class in pypath.visual.drawing)": [[195, "pypath.visual.drawing.InterSet"]], "__init__() (pypath.visual.drawing.interset method)": [[195, "pypath.visual.drawing.InterSet.__init__"]], "draw() (pypath.visual.drawing.interset method)": [[195, "pypath.visual.drawing.InterSet.draw"]], "plot (class in pypath.visual.drawing)": [[196, "pypath.visual.drawing.Plot"]], "__init__() (pypath.visual.drawing.plot method)": [[196, "pypath.visual.drawing.Plot.__init__"]], "pypath.visual.igraph_drawing": [[197, "module-pypath.visual.igraph_drawing"]], "abstractcairographdrawer (class in pypath.visual.igraph_drawing)": [[198, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer"]], "__init__() (pypath.visual.igraph_drawing.abstractcairographdrawer method)": [[198, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.__init__"]], "arrowedgedrawer (in module pypath.visual.igraph_drawing)": [[199, "pypath.visual.igraph_drawing.ArrowEdgeDrawer"]], "defaultgraphdrawerffsupport (class in pypath.visual.igraph_drawing)": [[200, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport"]], "__init__() (pypath.visual.igraph_drawing.defaultgraphdrawerffsupport method)": [[200, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.__init__"]], "defaultvertexdrawer (in module pypath.visual.igraph_drawing)": [[201, "pypath.visual.igraph_drawing.DefaultVertexDrawer"]], "textdrawer (in module pypath.visual.igraph_drawing)": [[202, "pypath.visual.igraph_drawing.TextDrawer"]], "pypath.visual.igraph_drawing.edge": [[203, "module-pypath.visual.igraph_drawing.edge"]], "abstractedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[204, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[204, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[204, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[204, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[204, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[204, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.get_label_position"]], "alphavaryingedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[205, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[205, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[205, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[205, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[205, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[205, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.get_label_position"]], "arrowedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[206, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[206, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[206, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[206, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[206, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[206, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.get_label_position"]], "darktolightedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[207, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[207, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[207, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[207, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[207, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[207, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.get_label_position"]], "lighttodarkedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[208, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[208, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[208, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[208, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[208, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[208, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.get_label_position"]], "taperededgedrawer (class in pypath.visual.igraph_drawing.edge)": [[209, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[209, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[209, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[209, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[209, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[209, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[210, "module-pypath.visual.igraph_drawing.vertex"]], "abstractcairodrawer (class in pypath.visual.igraph_drawing.vertex)": [[211, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairodrawer method)": [[211, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.__init__"]], "abstractcairovertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[212, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[212, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[212, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.draw"]], "abstractdrawer (class in pypath.visual.igraph_drawing.vertex)": [[213, "pypath.visual.igraph_drawing.vertex.AbstractDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractdrawer method)": [[213, "pypath.visual.igraph_drawing.vertex.AbstractDrawer.__init__"]], "abstractvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[214, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[214, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[214, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.draw"]], "defaultvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[215, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[215, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[215, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.draw"]]}})